{"id":"4c48dcb5ab173e7e173d082c1467b184","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"contracts/Roullete.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.8;\nimport \"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\n//we use chainlink oracle for randomness, automated exectution(chainlink keeper)\n//before you can import\n//yarn add --dev @chainlink/contracts\nerror RangeOutOfBounds();\nerror Roullete__NotEnoughEth();\nerror Roullete_transferFailed();\nerror Roullete_closed();\nerror Roullete_upKeepNotNeeded(\n    uint256 currentBalance,\n    uint256 Bplayers,\n    uint256 Rplayers,\n    uint256 Gplayers,\n    uint256 roulleteState\n);\n\n//we need to make it\n//this implements chianlink v2 and chainlink keepers\ncontract Roullete is VRFConsumerBaseV2, KeeperCompatibleInterface {\n    enum RoulleteState {\n        OPEN, //0\n        CALCULATING //1\n    }\n    enum Bets {\n        RED,\n        BLACK,\n        GREEN\n    }\n    uint256 private immutable i_entraceFee; //immutable --> we only set it once in the constructor\n    address payable[] private s_RedPlayers; //payable since we want to pay them if they win\n    address payable[] private s_GreenPlayers; //payable since we want to pay them if they win\n    address payable[] private s_BlackPlayers; //payable since we want to pay them if they win\n    VRFCoordinatorV2Interface private immutable i_COORDINATOR;\n    //events\n    bytes32 private immutable i_gasLane;\n    uint64 private immutable i_subscriptionId;\n    uint16 private constant requestConfirmations = 3;\n    uint32 private immutable i_callbackgaslimit;\n    uint32 private constant numWords = 1;\n    uint256 private s_lastTimeStamp;\n    uint256 internal constant MAX_CHANCE_VALUE = 100; // max chance is 100 percent\n    uint256 private constant c_interval = 30;\n    event requestedRoulleteResult(uint256 indexed requestId);\n    event RoulleteEnter(address indexed player);\n    event winnerpicked(address payable[] indexed winner);\n\n    address payable[] private s_recentWinners;\n    RoulleteState private s_roulleteState;\n\n    //VRFCoordinatorV2 is where we generate the random number (the address where we are going to generate the number !)\n    constructor(\n        uint256 entranceFee,\n        address VRFCoordinatorV2, //contract address --> probably need a mock for this ....\n        bytes32 gasLane,\n        uint64 subscriptionId,\n        uint32 callbackGasLimit\n    ) VRFConsumerBaseV2(VRFCoordinatorV2) {\n        //since we only set it once, we can make it immutable\n        i_entraceFee = entranceFee;\n        i_COORDINATOR = VRFCoordinatorV2Interface(VRFCoordinatorV2);\n        i_gasLane = gasLane;\n        i_subscriptionId = subscriptionId;\n        i_callbackgaslimit = callbackGasLimit;\n        s_roulleteState = RoulleteState.OPEN;\n        s_lastTimeStamp = block.timestamp;\n    }\n\n    function enterRed() public payable {\n        if (msg.value < i_entraceFee) {\n            revert Roullete__NotEnoughEth();\n        }\n\n        if (s_roulleteState != RoulleteState.OPEN) {\n            revert Roullete_closed();\n        }\n        s_RedPlayers.push(payable(msg.sender)); //make ssure each address is payabe\n        emit RoulleteEnter(msg.sender);\n    }\n\n    function enterBlack() public payable {\n        if (msg.value < i_entraceFee) {\n            revert Roullete__NotEnoughEth();\n        }\n\n        if (s_roulleteState != RoulleteState.OPEN) {\n            revert Roullete_closed();\n        }\n        s_BlackPlayers.push(payable(msg.sender)); //make ssure each address is payabe\n        emit RoulleteEnter(msg.sender);\n    }\n\n    function enterGreen() public payable {\n        if (msg.value < i_entraceFee) {\n            revert Roullete__NotEnoughEth();\n        }\n\n        if (s_roulleteState != RoulleteState.OPEN) {\n            revert Roullete_closed();\n        }\n        s_GreenPlayers.push(payable(msg.sender)); //make ssure each address is payabe\n        emit RoulleteEnter(msg.sender);\n    }\n\n    /**\n    *@dev alex kang \n    this is the function chainlink keeper calls, they look for the upkeepneeded \n    the following should be true in order to return true\n        1. TIME INTERVAL SHOULD BE PASSED\n        2. lottery should have at least 1 player and some eth \n        3.subscription funded with LINK\n        4. LOTTERY should be in an \"open\" state --> when we are waiting for the number to get back\n        we are in a closed state \n    \n     */\n    function checkUpkeep(\n        bytes memory /* checkData */\n    )\n        public\n        view\n        override\n        returns (\n            bool upkeepNeeded,\n            bytes memory /* performData */ //we use perform data when we want to do intensive calculations off chain to reduce gas fees and pass into\n        )\n    //performUpkeep when needed\n\n    {\n        bool isOpen = s_roulleteState == RoulleteState.OPEN;\n        // block.timeStamp gives the current time, in order to get the time passed\n        //we could do something like block.timeStamp - prevTimeStamp(we neeod a variable for this )\n        bool timepassed = ((block.timestamp - s_lastTimeStamp)) > c_interval;\n        bool hasplayers = (s_BlackPlayers.length > 0 ||\n            s_RedPlayers.length > 0 ||\n            s_GreenPlayers.length > 0);\n        bool hasBalance = address(this).balance > 0;\n        upkeepNeeded = isOpen && timepassed && hasplayers && hasBalance;\n    }\n\n    //we want chainlink keeper to call this so we do not have call it ourselvrsd\n    //before we had it as requestRandom, but in keepers we had to have a\n    //performUpkeep, u might as well switch the name to perform upkeep\n    //chainlink keepers will do intensive work off chain to see if they can call the perform up keep function, if it can, it calls this function on chain\n\n    function performUpkeep(\n        bytes calldata /* performData */\n    ) external override {\n        //request random number\n        //once we get it --> do smt with it\n        // 2 trasaction process --> fair\n        //before we call perform up keep we need to check if checkupkeep is true\n        (bool upkeepNeeded, ) = checkUpkeep(\"\"); //since we do not use calldata, and since we only want the bool, we just pull that one out\n        if (!upkeepNeeded) {\n            //the reason why we check again is the suggestion to always revalidate checkupkeep conditions when being called to prevent malicious attakcs\n            revert Roullete_upKeepNotNeeded(\n                address(this).balance,\n                s_BlackPlayers.length,\n                s_RedPlayers.length,\n                s_GreenPlayers.length,\n                uint256(s_roulleteState)\n            );\n        }\n\n        s_roulleteState = RoulleteState.CALCULATING;\n        uint256 requestid = i_COORDINATOR.requestRandomWords( //calling it on the coordinator\n            i_gasLane, //gaslane\n            i_subscriptionId,\n            requestConfirmations,\n            i_callbackgaslimit,\n            numWords\n        );\n\n        emit requestedRoulleteResult(requestid); //save request id to logs\n    }\n\n    //in chainlink contracts src v0.8 --> fullfillRandomWords is virtual meaning we can ovvereide it\n    function fulfillRandomWords(\n        uint256, /*requestId*/\n        uint256[] memory randomWords\n    ) internal override {\n        //since we only requesting one randomness, randomwords will come back as size 1\n        //we can use modular operator\n        //if s_players is of size 10\n        //and we have random number == 202\n        // we can 202 % 10   == 2 --> 2th winner\n        uint256 chance = randomWords[0] % MAX_CHANCE_VALUE;\n        Bets winningBet = getWinningBet(chance);\n        if (winningBet == Bets.RED) {\n            s_recentWinners = s_RedPlayers;\n        } else if (winningBet == Bets.BLACK) {\n            s_recentWinners = s_BlackPlayers;\n        } else {\n            s_recentWinners = s_GreenPlayers;\n        }\n        s_lastTimeStamp = block.timestamp;\n        s_RedPlayers = new address payable[](0);\n        s_BlackPlayers = new address payable[](0);\n        s_GreenPlayers = new address payable[](0);\n\n        //a for loop\n        for (uint256 i = 0; i < s_recentWinners.length; i++) {\n            //make it constatnt winning for now\n            (bool success, ) = s_recentWinners[i].call{value: 0.1 ether}(\"\");\n            if (!success) {\n                revert Roullete_transferFailed();\n            }\n        }\n        emit winnerpicked(s_recentWinners);\n        s_roulleteState = RoulleteState.OPEN;\n    }\n\n    function getWinningBet(uint256 chance) public pure returns (Bets) {\n        uint256 sumsf = 0;\n        uint256[3] memory chanceArray = getChanceArray();\n\n        for (uint256 i = 0; i < chanceArray.length; i++) {\n            if (chance >= sumsf && chance < sumsf + chanceArray[i]) {\n                return Bets(i);\n            } else {\n                sumsf += chanceArray[i];\n            }\n        }\n\n        revert RangeOutOfBounds();\n    }\n\n    function getChanceArray() public pure returns (uint256[3] memory) {\n        return [49, 49, MAX_CHANCE_VALUE];\n    }\n\n    /*\n        notes about chainlink VRF v2 \n\n        getting a random number --> you need a subcription \n\n\n    */\n    function getEntraceFee() public view returns (uint256) {\n        return i_entraceFee;\n    }\n\n    function getBlackPlayer(uint256 index) public view returns (address) {\n        return s_BlackPlayers[index];\n    }\n\n    function getRedPlayer(uint256 index) public view returns (address) {\n        return s_GreenPlayers[index];\n    }\n\n    function getGreenPlayer(uint256 index) public view returns (address) {\n        return s_RedPlayers[index];\n    }\n\n    function getRecentWinners() public view returns (address payable[] memory) {\n        return s_recentWinners;\n    }\n\n    function getroulletestate() public view returns (RoulleteState) {\n        return s_roulleteState;\n    }\n\n    //the reason why it is pure is because numwords is a constant\n    function getNumWords() public pure returns (uint256) {\n        return numWords;\n    }\n\n    function getNumberOfPlayersOfBlack() public view returns (uint256) {\n        return s_BlackPlayers.length;\n    }\n\n    function getNumberOfPlayersOfRed() public view returns (uint256) {\n        return s_RedPlayers.length;\n    }\n\n    function getNumberOfPlayersOfGreen() public view returns (uint256) {\n        return s_GreenPlayers.length;\n    }\n\n    function getLatestTimeStamp() public view returns (uint256) {\n        return s_lastTimeStamp;\n    }\n\n    function getRequestConfirmations() public pure returns (uint256) {\n        return requestConfirmations;\n    }\n\n    function getgasLane() public view returns (bytes32) {\n        return i_gasLane;\n    }\n\n    function getInterval() public pure returns (uint256) {\n        return c_interval;\n    }\n}\n"},"@chainlink/contracts/src/v0.8/KeeperCompatible.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./KeeperBase.sol\";\nimport \"./interfaces/KeeperCompatibleInterface.sol\";\n\nabstract contract KeeperCompatible is KeeperBase, KeeperCompatibleInterface {}\n"},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n}\n"},"@chainlink/contracts/src/v0.8/KeeperBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract KeeperBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function preventExecution() internal view {\n    if (tx.origin != address(0)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    preventExecution();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface KeeperCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> contracts/Roullete.sol:127:13:\n    |\n127 |             bytes memory /* performData */ //we use perform data when we want to do intensive calculations off chain to reduce gas fees and pass into\n    |             ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":4601,"file":"contracts/Roullete.sol","start":4589},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/KeeperBase.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/KeeperBase.sol","exportedSymbols":{"KeeperBase":[29]},"id":30,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"KeeperBase","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":29,"linearizedBaseContracts":[29],"name":"KeeperBase","nameLocation":"66:10:0","nodeType":"ContractDefinition","nodes":[{"id":3,"name":"OnlySimulatedBackend","nameLocation":"87:20:0","nodeType":"ErrorDefinition","parameters":{"id":2,"nodeType":"ParameterList","parameters":[],"src":"107:2:0"},"src":"81:29:0"},{"body":{"id":19,"nodeType":"Block","src":"286:83:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":13,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"296:2:0","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"origin","nodeType":"MemberAccess","src":"296:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"317:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"309:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"309:7:0","typeDescriptions":{}}},"id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"309:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"296:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":18,"nodeType":"IfStatement","src":"292:73:0","trueBody":{"id":17,"nodeType":"Block","src":"321:44:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":14,"name":"OnlySimulatedBackend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"336:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":15,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"336:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":16,"nodeType":"RevertStatement","src":"329:29:0"}]}}]},"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"114:127:0","text":" @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."},"id":20,"implemented":true,"kind":"function","modifiers":[],"name":"preventExecution","nameLocation":"253:16:0","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"269:2:0"},"returnParameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"286:0:0"},"scope":29,"src":"244:125:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":27,"nodeType":"Block","src":"530:36:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":23,"name":"preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"536:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"536:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":25,"nodeType":"ExpressionStatement","src":"536:18:0"},{"id":26,"nodeType":"PlaceholderStatement","src":"560:1:0"}]},"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"373:129:0","text":" @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."},"id":28,"name":"cannotExecute","nameLocation":"514:13:0","nodeType":"ModifierDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"527:2:0"},"src":"505:61:0","virtual":false,"visibility":"internal"}],"scope":30,"src":"57:511:0","usedErrors":[3]}],"src":"32:537:0"},"id":0},"@chainlink/contracts/src/v0.8/KeeperCompatible.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/KeeperCompatible.sol","exportedSymbols":{"KeeperBase":[29],"KeeperCompatible":[38],"KeeperCompatibleInterface":[115]},"id":39,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":31,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/KeeperBase.sol","file":"./KeeperBase.sol","id":32,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":39,"sourceUnit":30,"src":"57:26:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol","file":"./interfaces/KeeperCompatibleInterface.sol","id":33,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":39,"sourceUnit":116,"src":"84:52:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":34,"name":"KeeperBase","nodeType":"IdentifierPath","referencedDeclaration":29,"src":"176:10:1"},"id":35,"nodeType":"InheritanceSpecifier","src":"176:10:1"},{"baseName":{"id":36,"name":"KeeperCompatibleInterface","nodeType":"IdentifierPath","referencedDeclaration":115,"src":"188:25:1"},"id":37,"nodeType":"InheritanceSpecifier","src":"188:25:1"}],"canonicalName":"KeeperCompatible","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":38,"linearizedBaseContracts":[38,115,29],"name":"KeeperCompatible","nameLocation":"156:16:1","nodeType":"ContractDefinition","nodes":[],"scope":39,"src":"138:78:1","usedErrors":[3]}],"src":"32:185:1"},"id":1},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[96]},"id":97,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":40,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"57:5275:2","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":96,"linearizedBaseContracts":[96],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:2","nodeType":"ContractDefinition","nodes":[{"id":47,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:2","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"have","nameLocation":"5413:4:2","nodeType":"VariableDeclaration","scope":47,"src":"5405:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":45,"mutability":"mutable","name":"want","nameLocation":"5427:4:2","nodeType":"VariableDeclaration","scope":47,"src":"5419:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:2"},"src":"5373:60:2"},{"constant":false,"id":49,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:2","nodeType":"VariableDeclaration","scope":96,"src":"5436:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":59,"nodeType":"Block","src":"5593:43:2","statements":[{"expression":{"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":55,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"5599:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":56,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"5616:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":58,"nodeType":"ExpressionStatement","src":"5599:32:2"}]},"documentation":{"id":50,"nodeType":"StructuredDocumentation","src":"5481:72:2","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":60,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:2","nodeType":"VariableDeclaration","scope":60,"src":"5568:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":51,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:2"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[],"src":"5593:0:2"},"scope":96,"src":"5556:80:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"5640:686:2","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":69,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:2","nodeType":"FunctionDefinition","parameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:2","nodeType":"VariableDeclaration","scope":69,"src":"6357:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":66,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:2","nodeType":"VariableDeclaration","scope":69,"src":"6376:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65,"nodeType":"ArrayTypeName","src":"6376:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:2"},"returnParameters":{"id":68,"nodeType":"ParameterList","parameters":[],"src":"6422:0:2"},"scope":96,"src":"6329:94:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":94,"nodeType":"Block","src":"6707:167:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":77,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6717:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":79,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"6731:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":88,"nodeType":"IfStatement","src":"6713:109:2","trueBody":{"id":87,"nodeType":"Block","src":"6747:75:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":82,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6788:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":84,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"6800:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":81,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"6762:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6762:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"RevertStatement","src":"6755:60:2"}]}},{"expression":{"arguments":[{"id":90,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"6846:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":91,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"6857:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":89,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"6827:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":93,"nodeType":"ExpressionStatement","src":"6827:42:2"}]},"functionSelector":"1fe543e3","id":95,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:2","nodeType":"FunctionDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:2","nodeType":"VariableDeclaration","scope":95,"src":"6649:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:2","nodeType":"VariableDeclaration","scope":95,"src":"6668:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":73,"nodeType":"ArrayTypeName","src":"6668:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:2"},"returnParameters":{"id":76,"nodeType":"ParameterList","parameters":[],"src":"6707:0:2"},"scope":96,"src":"6618:256:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":97,"src":"5333:1543:2","usedErrors":[47]}],"src":"32:6845:2"},"id":2},"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol","exportedSymbols":{"KeeperCompatibleInterface":[115]},"id":116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":98,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"KeeperCompatibleInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":115,"linearizedBaseContracts":[115],"name":"KeeperCompatibleInterface","nameLocation":"67:25:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"97:985:3","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":108,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1094:11:3","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"checkData","nameLocation":"1121:9:3","nodeType":"VariableDeclaration","scope":108,"src":"1106:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":100,"name":"bytes","nodeType":"ElementaryTypeName","src":"1106:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1105:26:3"},"returnParameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1155:12:3","nodeType":"VariableDeclaration","scope":108,"src":"1150:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103,"name":"bool","nodeType":"ElementaryTypeName","src":"1150:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"performData","nameLocation":"1182:11:3","nodeType":"VariableDeclaration","scope":108,"src":"1169:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":105,"name":"bytes","nodeType":"ElementaryTypeName","src":"1169:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1149:45:3"},"scope":115,"src":"1085:110:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":109,"nodeType":"StructuredDocumentation","src":"1199:1003:3","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":114,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2214:13:3","nodeType":"FunctionDefinition","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"performData","nameLocation":"2243:11:3","nodeType":"VariableDeclaration","scope":114,"src":"2228:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":110,"name":"bytes","nodeType":"ElementaryTypeName","src":"2228:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2227:28:3"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[],"src":"2264:0:3"},"scope":115,"src":"2205:60:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":116,"src":"57:2210:3","usedErrors":[]}],"src":"32:2236:3"},"id":3},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[204]},"id":205,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":204,"linearizedBaseContracts":[204],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"97:267:4","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":128,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:4","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[],"src":"392:2:4"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"437:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":120,"name":"uint16","nodeType":"ElementaryTypeName","src":"437:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"451:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":122,"name":"uint32","nodeType":"ElementaryTypeName","src":"451:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"465:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":125,"nodeType":"ArrayTypeName","src":"465:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"429:58:4"},"scope":204,"src":"367:121:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"492:1511:4","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":144,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2015:18:4","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"keyHash","nameLocation":"2047:7:4","nodeType":"VariableDeclaration","scope":144,"src":"2039:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2039:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"subId","nameLocation":"2067:5:4","nodeType":"VariableDeclaration","scope":144,"src":"2060:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":132,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":135,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2085:27:4","nodeType":"VariableDeclaration","scope":144,"src":"2078:34:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":134,"name":"uint16","nodeType":"ElementaryTypeName","src":"2078:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":137,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2125:16:4","nodeType":"VariableDeclaration","scope":144,"src":"2118:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":136,"name":"uint32","nodeType":"ElementaryTypeName","src":"2118:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":139,"mutability":"mutable","name":"numWords","nameLocation":"2154:8:4","nodeType":"VariableDeclaration","scope":144,"src":"2147:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":138,"name":"uint32","nodeType":"ElementaryTypeName","src":"2147:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2033:133:4"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"requestId","nameLocation":"2193:9:4","nodeType":"VariableDeclaration","scope":144,"src":"2185:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:19:4"},"scope":204,"src":"2006:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"2208:384:4","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":150,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2604:18:4","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[],"src":"2622:2:4"},"returnParameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"subId","nameLocation":"2650:5:4","nodeType":"VariableDeclaration","scope":150,"src":"2643:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":147,"name":"uint64","nodeType":"ElementaryTypeName","src":"2643:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2642:14:4"},"scope":204,"src":"2595:62:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"2661:381:4","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":165,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3054:15:4","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"subId","nameLocation":"3077:5:4","nodeType":"VariableDeclaration","scope":165,"src":"3070:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":152,"name":"uint64","nodeType":"ElementaryTypeName","src":"3070:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3069:14:4"},"returnParameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"balance","nameLocation":"3133:7:4","nodeType":"VariableDeclaration","scope":165,"src":"3126:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":155,"name":"uint96","nodeType":"ElementaryTypeName","src":"3126:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:4","nodeType":"VariableDeclaration","scope":165,"src":"3148:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":157,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"owner","nameLocation":"3179:5:4","nodeType":"VariableDeclaration","scope":165,"src":"3171:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"3171:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"consumers","nameLocation":"3209:9:4","nodeType":"VariableDeclaration","scope":165,"src":"3192:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":162,"nodeType":"ArrayTypeName","src":"3192:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3118:106:4"},"scope":204,"src":"3045:180:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"3229:164:4","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":173,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3405:32:4","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"subId","nameLocation":"3445:5:4","nodeType":"VariableDeclaration","scope":173,"src":"3438:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":167,"name":"uint64","nodeType":"ElementaryTypeName","src":"3438:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"newOwner","nameLocation":"3460:8:4","nodeType":"VariableDeclaration","scope":173,"src":"3452:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:32:4"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"3478:0:4"},"scope":204,"src":"3396:83:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"3483:212:4","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":179,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3707:31:4","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"subId","nameLocation":"3746:5:4","nodeType":"VariableDeclaration","scope":179,"src":"3739:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":175,"name":"uint64","nodeType":"ElementaryTypeName","src":"3739:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3738:14:4"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"3761:0:4"},"scope":204,"src":"3698:64:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"3766:170:4","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":187,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3948:11:4","nodeType":"FunctionDefinition","parameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"subId","nameLocation":"3967:5:4","nodeType":"VariableDeclaration","scope":187,"src":"3960:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":181,"name":"uint64","nodeType":"ElementaryTypeName","src":"3960:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"consumer","nameLocation":"3982:8:4","nodeType":"VariableDeclaration","scope":187,"src":"3974:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:32:4"},"returnParameters":{"id":186,"nodeType":"ParameterList","parameters":[],"src":"4000:0:4"},"scope":204,"src":"3939:62:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"4005:172:4","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":195,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4189:14:4","nodeType":"FunctionDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"subId","nameLocation":"4211:5:4","nodeType":"VariableDeclaration","scope":195,"src":"4204:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":189,"name":"uint64","nodeType":"ElementaryTypeName","src":"4204:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"consumer","nameLocation":"4226:8:4","nodeType":"VariableDeclaration","scope":195,"src":"4218:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:32:4"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"4244:0:4"},"scope":204,"src":"4180:65:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"4249:140:4","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":203,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4401:18:4","nodeType":"FunctionDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"subId","nameLocation":"4427:5:4","nodeType":"VariableDeclaration","scope":203,"src":"4420:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":197,"name":"uint64","nodeType":"ElementaryTypeName","src":"4420:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"to","nameLocation":"4442:2:4","nodeType":"VariableDeclaration","scope":203,"src":"4434:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:26:4"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"4454:0:4"},"scope":204,"src":"4392:63:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":205,"src":"57:4400:4","usedErrors":[]}],"src":"32:4426:4"},"id":4},"contracts/Roullete.sol":{"ast":{"absolutePath":"contracts/Roullete.sol","exportedSymbols":{"KeeperBase":[29],"KeeperCompatible":[38],"KeeperCompatibleInterface":[115],"RangeOutOfBounds":[211],"Roullete":[900],"Roullete__NotEnoughEth":[213],"Roullete_closed":[217],"Roullete_transferFailed":[215],"Roullete_upKeepNotNeeded":[229],"VRFConsumerBaseV2":[96],"VRFCoordinatorV2Interface":[204]},"id":901,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":206,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"32:23:5"},{"absolutePath":"@chainlink/contracts/src/v0.8/KeeperCompatible.sol","file":"@chainlink/contracts/src/v0.8/KeeperCompatible.sol","id":207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":901,"sourceUnit":39,"src":"56:60:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":208,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":901,"sourceUnit":97,"src":"117:61:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":901,"sourceUnit":205,"src":"179:80:5","symbolAliases":[],"unitAlias":""},{"id":211,"name":"RangeOutOfBounds","nameLocation":"409:16:5","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"425:2:5"},"src":"403:25:5"},{"id":213,"name":"Roullete__NotEnoughEth","nameLocation":"435:22:5","nodeType":"ErrorDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"457:2:5"},"src":"429:31:5"},{"id":215,"name":"Roullete_transferFailed","nameLocation":"467:23:5","nodeType":"ErrorDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"490:2:5"},"src":"461:32:5"},{"id":217,"name":"Roullete_closed","nameLocation":"500:15:5","nodeType":"ErrorDefinition","parameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"515:2:5"},"src":"494:24:5"},{"id":229,"name":"Roullete_upKeepNotNeeded","nameLocation":"525:24:5","nodeType":"ErrorDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"currentBalance","nameLocation":"563:14:5","nodeType":"VariableDeclaration","scope":229,"src":"555:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"555:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"Bplayers","nameLocation":"591:8:5","nodeType":"VariableDeclaration","scope":229,"src":"583:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"583:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"Rplayers","nameLocation":"613:8:5","nodeType":"VariableDeclaration","scope":229,"src":"605:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"Gplayers","nameLocation":"635:8:5","nodeType":"VariableDeclaration","scope":229,"src":"627:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"roulleteState","nameLocation":"657:13:5","nodeType":"VariableDeclaration","scope":229,"src":"649:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"649:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"549:123:5"},"src":"519:154:5"},{"abstract":false,"baseContracts":[{"baseName":{"id":230,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":96,"src":"770:17:5"},"id":231,"nodeType":"InheritanceSpecifier","src":"770:17:5"},{"baseName":{"id":232,"name":"KeeperCompatibleInterface","nodeType":"IdentifierPath","referencedDeclaration":115,"src":"789:25:5"},"id":233,"nodeType":"InheritanceSpecifier","src":"789:25:5"}],"canonicalName":"Roullete","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":900,"linearizedBaseContracts":[900,115,96],"name":"Roullete","nameLocation":"758:8:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Roullete.RoulleteState","id":236,"members":[{"id":234,"name":"OPEN","nameLocation":"850:4:5","nodeType":"EnumValue","src":"850:4:5"},{"id":235,"name":"CALCULATING","nameLocation":"868:11:5","nodeType":"EnumValue","src":"868:11:5"}],"name":"RoulleteState","nameLocation":"826:13:5","nodeType":"EnumDefinition","src":"821:68:5"},{"canonicalName":"Roullete.Bets","id":240,"members":[{"id":237,"name":"RED","nameLocation":"914:3:5","nodeType":"EnumValue","src":"914:3:5"},{"id":238,"name":"BLACK","nameLocation":"927:5:5","nodeType":"EnumValue","src":"927:5:5"},{"id":239,"name":"GREEN","nameLocation":"942:5:5","nodeType":"EnumValue","src":"942:5:5"}],"name":"Bets","nameLocation":"899:4:5","nodeType":"EnumDefinition","src":"894:59:5"},{"constant":false,"id":242,"mutability":"immutable","name":"i_entraceFee","nameLocation":"984:12:5","nodeType":"VariableDeclaration","scope":900,"src":"958:38:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"958:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":245,"mutability":"mutable","name":"s_RedPlayers","nameLocation":"1083:12:5","nodeType":"VariableDeclaration","scope":900,"src":"1057:38:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"1057:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":244,"nodeType":"ArrayTypeName","src":"1057:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"constant":false,"id":248,"mutability":"mutable","name":"s_GreenPlayers","nameLocation":"1175:14:5","nodeType":"VariableDeclaration","scope":900,"src":"1149:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"1149:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":247,"nodeType":"ArrayTypeName","src":"1149:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"constant":false,"id":251,"mutability":"mutable","name":"s_BlackPlayers","nameLocation":"1269:14:5","nodeType":"VariableDeclaration","scope":900,"src":"1243:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":249,"name":"address","nodeType":"ElementaryTypeName","src":"1243:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":250,"nodeType":"ArrayTypeName","src":"1243:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"constant":false,"id":254,"mutability":"immutable","name":"i_COORDINATOR","nameLocation":"1381:13:5","nodeType":"VariableDeclaration","scope":900,"src":"1337:57:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":253,"nodeType":"UserDefinedTypeName","pathNode":{"id":252,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":204,"src":"1337:25:5"},"referencedDeclaration":204,"src":"1337:25:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":256,"mutability":"immutable","name":"i_gasLane","nameLocation":"1439:9:5","nodeType":"VariableDeclaration","scope":900,"src":"1413:35:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1413:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":258,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"1479:16:5","nodeType":"VariableDeclaration","scope":900,"src":"1454:41:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":257,"name":"uint64","nodeType":"ElementaryTypeName","src":"1454:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":true,"id":261,"mutability":"constant","name":"requestConfirmations","nameLocation":"1525:20:5","nodeType":"VariableDeclaration","scope":900,"src":"1501:48:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":259,"name":"uint16","nodeType":"ElementaryTypeName","src":"1501:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1548:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":false,"id":263,"mutability":"immutable","name":"i_callbackgaslimit","nameLocation":"1580:18:5","nodeType":"VariableDeclaration","scope":900,"src":"1555:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":262,"name":"uint32","nodeType":"ElementaryTypeName","src":"1555:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":266,"mutability":"constant","name":"numWords","nameLocation":"1628:8:5","nodeType":"VariableDeclaration","scope":900,"src":"1604:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":264,"name":"uint32","nodeType":"ElementaryTypeName","src":"1604:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1639:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":268,"mutability":"mutable","name":"s_lastTimeStamp","nameLocation":"1662:15:5","nodeType":"VariableDeclaration","scope":900,"src":"1646:31:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":271,"mutability":"constant","name":"MAX_CHANCE_VALUE","nameLocation":"1709:16:5","nodeType":"VariableDeclaration","scope":900,"src":"1683:48:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1728:3:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":true,"id":274,"mutability":"constant","name":"c_interval","nameLocation":"1791:10:5","nodeType":"VariableDeclaration","scope":900,"src":"1766:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1804:2:5","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"visibility":"private"},{"anonymous":false,"id":278,"name":"requestedRoulleteResult","nameLocation":"1818:23:5","nodeType":"EventDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1858:9:5","nodeType":"VariableDeclaration","scope":278,"src":"1842:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1842:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1841:27:5"},"src":"1812:57:5"},{"anonymous":false,"id":282,"name":"RoulleteEnter","nameLocation":"1880:13:5","nodeType":"EventDefinition","parameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1910:6:5","nodeType":"VariableDeclaration","scope":282,"src":"1894:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"1894:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1893:24:5"},"src":"1874:44:5"},{"anonymous":false,"id":287,"name":"winnerpicked","nameLocation":"1929:12:5","nodeType":"EventDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"1968:6:5","nodeType":"VariableDeclaration","scope":287,"src":"1942:32:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[]"},"typeName":{"baseType":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"1942:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":284,"nodeType":"ArrayTypeName","src":"1942:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"internal"}],"src":"1941:34:5"},"src":"1923:53:5"},{"constant":false,"id":290,"mutability":"mutable","name":"s_recentWinners","nameLocation":"2008:15:5","nodeType":"VariableDeclaration","scope":900,"src":"1982:41:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"1982:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":289,"nodeType":"ArrayTypeName","src":"1982:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"constant":false,"id":293,"mutability":"mutable","name":"s_roulleteState","nameLocation":"2051:15:5","nodeType":"VariableDeclaration","scope":900,"src":"2029:37:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"},"typeName":{"id":292,"nodeType":"UserDefinedTypeName","pathNode":{"id":291,"name":"RoulleteState","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"2029:13:5"},"referencedDeclaration":236,"src":"2029:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"visibility":"private"},{"body":{"id":341,"nodeType":"Block","src":"2457:382:5","statements":[{"expression":{"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":309,"name":"i_entraceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2529:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":310,"name":"entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"2544:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2529:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":312,"nodeType":"ExpressionStatement","src":"2529:26:5"},{"expression":{"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":313,"name":"i_COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"2565:13:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":315,"name":"VRFCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"2607:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":314,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"2581:25:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$204_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2581:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"src":"2565:59:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"id":318,"nodeType":"ExpressionStatement","src":"2565:59:5"},{"expression":{"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":319,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2634:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":320,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"2646:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2634:19:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":322,"nodeType":"ExpressionStatement","src":"2634:19:5"},{"expression":{"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":323,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2663:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":324,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"2682:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2663:33:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":326,"nodeType":"ExpressionStatement","src":"2663:33:5"},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":327,"name":"i_callbackgaslimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2706:18:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"2727:16:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2706:37:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":330,"nodeType":"ExpressionStatement","src":"2706:37:5"},{"expression":{"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":331,"name":"s_roulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"2753:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":332,"name":"RoulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"2771:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RoulleteState_$236_$","typeString":"type(enum Roullete.RoulleteState)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":234,"src":"2771:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"src":"2753:36:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"id":335,"nodeType":"ExpressionStatement","src":"2753:36:5"},{"expression":{"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":336,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2799:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":337,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2817:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2817:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2799:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":340,"nodeType":"ExpressionStatement","src":"2799:33:5"}]},"id":342,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":306,"name":"VRFCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"2439:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":307,"kind":"baseConstructorSpecifier","modifierName":{"id":305,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":96,"src":"2421:17:5"},"nodeType":"ModifierInvocation","src":"2421:35:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"entranceFee","nameLocation":"2222:11:5","nodeType":"VariableDeclaration","scope":342,"src":"2214:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"2214:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"VRFCoordinatorV2","nameLocation":"2251:16:5","nodeType":"VariableDeclaration","scope":342,"src":"2243:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"2243:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"gasLane","nameLocation":"2343:7:5","nodeType":"VariableDeclaration","scope":342,"src":"2335:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2335:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"subscriptionId","nameLocation":"2367:14:5","nodeType":"VariableDeclaration","scope":342,"src":"2360:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":300,"name":"uint64","nodeType":"ElementaryTypeName","src":"2360:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2398:16:5","nodeType":"VariableDeclaration","scope":342,"src":"2391:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":302,"name":"uint32","nodeType":"ElementaryTypeName","src":"2391:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2204:216:5"},"returnParameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"2457:0:5"},"scope":900,"src":"2193:646:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":378,"nodeType":"Block","src":"2880:328:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":345,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2894:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2894:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":347,"name":"i_entraceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2906:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2894:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":353,"nodeType":"IfStatement","src":"2890:86:5","trueBody":{"id":352,"nodeType":"Block","src":"2920:56:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"Roullete__NotEnoughEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2941:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2941:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":351,"nodeType":"RevertStatement","src":"2934:31:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":354,"name":"s_roulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"2990:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":355,"name":"RoulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"3009:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RoulleteState_$236_$","typeString":"type(enum Roullete.RoulleteState)"}},"id":356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":234,"src":"3009:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"src":"2990:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":362,"nodeType":"IfStatement","src":"2986:92:5","trueBody":{"id":361,"nodeType":"Block","src":"3029:49:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":358,"name":"Roullete_closed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"3050:15:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3050:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":360,"nodeType":"RevertStatement","src":"3043:24:5"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":368,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3113:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3113:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3105:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"3105:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3105:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":363,"name":"s_RedPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"3087:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3087:17:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3087:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"ExpressionStatement","src":"3087:38:5"},{"eventCall":{"arguments":[{"expression":{"id":374,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3190:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3190:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":373,"name":"RoulleteEnter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"3176:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3176:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"EmitStatement","src":"3171:30:5"}]},"functionSelector":"06170dea","id":379,"implemented":true,"kind":"function","modifiers":[],"name":"enterRed","nameLocation":"2854:8:5","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"2862:2:5"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"2880:0:5"},"scope":900,"src":"2845:363:5","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":415,"nodeType":"Block","src":"3251:330:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":382,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3265:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3265:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":384,"name":"i_entraceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3277:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3265:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":390,"nodeType":"IfStatement","src":"3261:86:5","trueBody":{"id":389,"nodeType":"Block","src":"3291:56:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":386,"name":"Roullete__NotEnoughEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"3312:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3312:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":388,"nodeType":"RevertStatement","src":"3305:31:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"s_roulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"3361:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":392,"name":"RoulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"3380:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RoulleteState_$236_$","typeString":"type(enum Roullete.RoulleteState)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":234,"src":"3380:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"src":"3361:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":399,"nodeType":"IfStatement","src":"3357:92:5","trueBody":{"id":398,"nodeType":"Block","src":"3400:49:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":395,"name":"Roullete_closed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"3421:15:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3421:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":397,"nodeType":"RevertStatement","src":"3414:24:5"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":405,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3486:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3486:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3478:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"3478:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3478:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":400,"name":"s_BlackPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"3458:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3458:19:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3458:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"ExpressionStatement","src":"3458:40:5"},{"eventCall":{"arguments":[{"expression":{"id":411,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3563:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3563:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":410,"name":"RoulleteEnter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"3549:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3549:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"EmitStatement","src":"3544:30:5"}]},"functionSelector":"2bacb08b","id":416,"implemented":true,"kind":"function","modifiers":[],"name":"enterBlack","nameLocation":"3223:10:5","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"3233:2:5"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3251:0:5"},"scope":900,"src":"3214:367:5","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":452,"nodeType":"Block","src":"3624:330:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":419,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3638:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3638:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":421,"name":"i_entraceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3650:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3638:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":427,"nodeType":"IfStatement","src":"3634:86:5","trueBody":{"id":426,"nodeType":"Block","src":"3664:56:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":423,"name":"Roullete__NotEnoughEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"3685:22:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3685:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":425,"nodeType":"RevertStatement","src":"3678:31:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":428,"name":"s_roulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"3734:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":429,"name":"RoulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"3753:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RoulleteState_$236_$","typeString":"type(enum Roullete.RoulleteState)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":234,"src":"3753:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"src":"3734:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":436,"nodeType":"IfStatement","src":"3730:92:5","trueBody":{"id":435,"nodeType":"Block","src":"3773:49:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":432,"name":"Roullete_closed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"3794:15:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3794:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"RevertStatement","src":"3787:24:5"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3859:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3859:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3851:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"3851:8:5","stateMutability":"payable","typeDescriptions":{}}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3851:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":437,"name":"s_GreenPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3831:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3831:19:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3831:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"3831:40:5"},{"eventCall":{"arguments":[{"expression":{"id":448,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3936:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3936:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":447,"name":"RoulleteEnter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"3922:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3922:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"EmitStatement","src":"3917:30:5"}]},"functionSelector":"5541e758","id":453,"implemented":true,"kind":"function","modifiers":[],"name":"enterGreen","nameLocation":"3596:10:5","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[],"src":"3606:2:5"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"3624:0:5"},"scope":900,"src":"3587:367:5","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[108],"body":{"id":520,"nodeType":"Block","src":"4774:590:5","statements":[{"assignments":[465],"declarations":[{"constant":false,"id":465,"mutability":"mutable","name":"isOpen","nameLocation":"4789:6:5","nodeType":"VariableDeclaration","scope":520,"src":"4784:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":464,"name":"bool","nodeType":"ElementaryTypeName","src":"4784:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":470,"initialValue":{"commonType":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"s_roulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"4798:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":467,"name":"RoulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"4817:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RoulleteState_$236_$","typeString":"type(enum Roullete.RoulleteState)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":234,"src":"4817:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"src":"4798:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4784:51:5"},{"assignments":[472],"declarations":[{"constant":false,"id":472,"mutability":"mutable","name":"timepassed","nameLocation":"5033:10:5","nodeType":"VariableDeclaration","scope":520,"src":"5028:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":471,"name":"bool","nodeType":"ElementaryTypeName","src":"5028:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":481,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":473,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5048:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5048:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":475,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"5066:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5048:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5047:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":478,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5046:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":479,"name":"c_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"5086:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5046:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"5028:68:5"},{"assignments":[483],"declarations":[{"constant":false,"id":483,"mutability":"mutable","name":"hasplayers","nameLocation":"5111:10:5","nodeType":"VariableDeclaration","scope":520,"src":"5106:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":482,"name":"bool","nodeType":"ElementaryTypeName","src":"5106:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":499,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":484,"name":"s_BlackPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"5125:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5125:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5149:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5125:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":488,"name":"s_RedPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"5166:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5166:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5188:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5166:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5125:64:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":493,"name":"s_GreenPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"5205:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5205:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5229:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5205:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5125:105:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5124:107:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"5106:125:5"},{"assignments":[501],"declarations":[{"constant":false,"id":501,"mutability":"mutable","name":"hasBalance","nameLocation":"5246:10:5","nodeType":"VariableDeclaration","scope":520,"src":"5241:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":500,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":509,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":504,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5267:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Roullete_$900","typeString":"contract Roullete"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Roullete_$900","typeString":"contract Roullete"}],"id":503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5259:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"5259:7:5","typeDescriptions":{}}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5259:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5259:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5283:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5259:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"5241:43:5"},{"expression":{"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":510,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"5294:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":511,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"5309:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":512,"name":"timepassed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"5319:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5309:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":514,"name":"hasplayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"5333:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5309:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":516,"name":"hasBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"5347:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5309:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5294:63:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":519,"nodeType":"ExpressionStatement","src":"5294:63:5"}]},"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"3960:453:5","text":"@dev alex kang \nthis is the function chainlink keeper calls, they look for the upkeepneeded \nthe following should be true in order to return true\n1. TIME INTERVAL SHOULD BE PASSED\n2. lottery should have at least 1 player and some eth \n3.subscription funded with LINK\n4. LOTTERY should be in an \"open\" state --> when we are waiting for the number to get back\nwe are in a closed state "},"functionSelector":"6e04ff0d","id":521,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"4427:11:5","nodeType":"FunctionDefinition","overrides":{"id":458,"nodeType":"OverrideSpecifier","overrides":[],"src":"4519:8:5"},"parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":521,"src":"4448:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":455,"name":"bytes","nodeType":"ElementaryTypeName","src":"4448:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4438:44:5"},"returnParameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"4563:12:5","nodeType":"VariableDeclaration","scope":521,"src":"4558:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"4558:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":521,"src":"4589:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":461,"name":"bytes","nodeType":"ElementaryTypeName","src":"4589:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4544:192:5"},"scope":900,"src":"4418:946:5","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[114],"body":{"id":575,"nodeType":"Block","src":"5839:1177:5","statements":[{"assignments":[528,null],"declarations":[{"constant":false,"id":528,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"6053:12:5","nodeType":"VariableDeclaration","scope":575,"src":"6048:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":527,"name":"bool","nodeType":"ElementaryTypeName","src":"6048:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":532,"initialValue":{"arguments":[{"hexValue":"","id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6083:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":529,"name":"checkUpkeep","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"6071:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6071:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6047:39:5"},{"condition":{"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6191:13:5","subExpression":{"id":533,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"6192:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":554,"nodeType":"IfStatement","src":"6187:438:5","trueBody":{"id":553,"nodeType":"Block","src":"6206:419:5","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":538,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6430:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Roullete_$900","typeString":"contract Roullete"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Roullete_$900","typeString":"contract Roullete"}],"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6422:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"6422:7:5","typeDescriptions":{}}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6422:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"6422:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":541,"name":"s_BlackPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"6461:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6461:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":543,"name":"s_RedPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"6500:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6500:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":545,"name":"s_GreenPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"6537:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6537:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":549,"name":"s_roulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"6584:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}],"id":548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6576:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:5","typeDescriptions":{}}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":535,"name":"Roullete_upKeepNotNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"6380:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256,uint256) pure"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6380:234:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":552,"nodeType":"RevertStatement","src":"6373:241:5"}]}},{"expression":{"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":555,"name":"s_roulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"6635:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":556,"name":"RoulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"6653:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RoulleteState_$236_$","typeString":"type(enum Roullete.RoulleteState)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"CALCULATING","nodeType":"MemberAccess","referencedDeclaration":235,"src":"6653:25:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"src":"6635:43:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"id":559,"nodeType":"ExpressionStatement","src":"6635:43:5"},{"assignments":[561],"declarations":[{"constant":false,"id":561,"mutability":"mutable","name":"requestid","nameLocation":"6696:9:5","nodeType":"VariableDeclaration","scope":575,"src":"6688:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"6688:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":570,"initialValue":{"arguments":[{"id":564,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"6786:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":565,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"6819:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":566,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6849:20:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":567,"name":"i_callbackgaslimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"6883:18:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":568,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"6915:8:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":562,"name":"i_COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6708:13:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$204","typeString":"contract VRFCoordinatorV2Interface"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":144,"src":"6708:32:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6708:225:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6688:245:5"},{"eventCall":{"arguments":[{"id":572,"name":"requestid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"6973:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":571,"name":"requestedRoulleteResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"6949:23:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6949:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"EmitStatement","src":"6944:39:5"}]},"functionSelector":"4585e33b","id":576,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"5759:13:5","nodeType":"FunctionDefinition","overrides":{"id":525,"nodeType":"OverrideSpecifier","overrides":[],"src":"5830:8:5"},"parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"5782:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":522,"name":"bytes","nodeType":"ElementaryTypeName","src":"5782:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5772:48:5"},"returnParameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"5839:0:5"},"scope":900,"src":"5750:1266:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[69],"body":{"id":694,"nodeType":"Block","src":"7244:1216:5","statements":[{"assignments":[586],"declarations":[{"constant":false,"id":586,"mutability":"mutable","name":"chance","nameLocation":"7517:6:5","nodeType":"VariableDeclaration","scope":694,"src":"7509:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"7509:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":592,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":587,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"7526:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":589,"indexExpression":{"hexValue":"30","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7538:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7526:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":590,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"7543:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7526:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7509:50:5"},{"assignments":[595],"declarations":[{"constant":false,"id":595,"mutability":"mutable","name":"winningBet","nameLocation":"7574:10:5","nodeType":"VariableDeclaration","scope":694,"src":"7569:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Bets_$240","typeString":"enum Roullete.Bets"},"typeName":{"id":594,"nodeType":"UserDefinedTypeName","pathNode":{"id":593,"name":"Bets","nodeType":"IdentifierPath","referencedDeclaration":240,"src":"7569:4:5"},"referencedDeclaration":240,"src":"7569:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Bets_$240","typeString":"enum Roullete.Bets"}},"visibility":"internal"}],"id":599,"initialValue":{"arguments":[{"id":597,"name":"chance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"7601:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":596,"name":"getWinningBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"7587:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_enum$_Bets_$240_$","typeString":"function (uint256) pure returns (enum Roullete.Bets)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7587:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Bets_$240","typeString":"enum Roullete.Bets"}},"nodeType":"VariableDeclarationStatement","src":"7569:39:5"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Bets_$240","typeString":"enum Roullete.Bets"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"winningBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"7622:10:5","typeDescriptions":{"typeIdentifier":"t_enum$_Bets_$240","typeString":"enum Roullete.Bets"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":601,"name":"Bets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"7636:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Bets_$240_$","typeString":"type(enum Roullete.Bets)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"RED","nodeType":"MemberAccess","referencedDeclaration":237,"src":"7636:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Bets_$240","typeString":"enum Roullete.Bets"}},"src":"7622:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_Bets_$240","typeString":"enum Roullete.Bets"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"name":"winningBet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"7711:10:5","typeDescriptions":{"typeIdentifier":"t_enum$_Bets_$240","typeString":"enum Roullete.Bets"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":610,"name":"Bets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"7725:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Bets_$240_$","typeString":"type(enum Roullete.Bets)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"BLACK","nodeType":"MemberAccess","referencedDeclaration":238,"src":"7725:10:5","typeDescriptions":{"typeIdentifier":"t_enum$_Bets_$240","typeString":"enum Roullete.Bets"}},"src":"7711:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":622,"nodeType":"Block","src":"7800:57:5","statements":[{"expression":{"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":618,"name":"s_recentWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"7814:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":619,"name":"s_GreenPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"7832:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"src":"7814:32:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":621,"nodeType":"ExpressionStatement","src":"7814:32:5"}]},"id":623,"nodeType":"IfStatement","src":"7707:150:5","trueBody":{"id":617,"nodeType":"Block","src":"7737:57:5","statements":[{"expression":{"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":613,"name":"s_recentWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"7751:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":614,"name":"s_BlackPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"7769:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"src":"7751:32:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":616,"nodeType":"ExpressionStatement","src":"7751:32:5"}]}},"id":624,"nodeType":"IfStatement","src":"7618:239:5","trueBody":{"id":608,"nodeType":"Block","src":"7646:55:5","statements":[{"expression":{"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":604,"name":"s_recentWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"7660:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":605,"name":"s_RedPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"7678:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"src":"7660:30:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":607,"nodeType":"ExpressionStatement","src":"7660:30:5"}]}},{"expression":{"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":625,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"7866:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":626,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7884:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"7884:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7866:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":629,"nodeType":"ExpressionStatement","src":"7866:33:5"},{"expression":{"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":630,"name":"s_RedPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"7909:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7946:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7924:21:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address payable[] memory)"},"typeName":{"baseType":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"7928:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":632,"nodeType":"ArrayTypeName","src":"7928:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}}},"id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7924:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"src":"7909:39:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":637,"nodeType":"ExpressionStatement","src":"7909:39:5"},{"expression":{"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":638,"name":"s_BlackPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"7958:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7997:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7975:21:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address payable[] memory)"},"typeName":{"baseType":{"id":639,"name":"address","nodeType":"ElementaryTypeName","src":"7979:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":640,"nodeType":"ArrayTypeName","src":"7979:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}}},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7975:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"src":"7958:41:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":645,"nodeType":"ExpressionStatement","src":"7958:41:5"},{"expression":{"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":646,"name":"s_GreenPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"8009:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8048:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8026:21:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address payable[] memory)"},"typeName":{"baseType":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"8030:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":648,"nodeType":"ArrayTypeName","src":"8030:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8026:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"src":"8009:41:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":653,"nodeType":"ExpressionStatement","src":"8009:41:5"},{"body":{"id":683,"nodeType":"Block","src":"8135:229:5","statements":[{"assignments":[666,null],"declarations":[{"constant":false,"id":666,"mutability":"mutable","name":"success","nameLocation":"8203:7:5","nodeType":"VariableDeclaration","scope":683,"src":"8198:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":665,"name":"bool","nodeType":"ElementaryTypeName","src":"8198:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":675,"initialValue":{"arguments":[{"hexValue":"","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8258:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"baseExpression":{"id":667,"name":"s_recentWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"8216:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":669,"indexExpression":{"id":668,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"8232:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8216:18:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"8216:23:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"hexValue":"302e31","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8247:9:5","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"0.1"}],"src":"8216:41:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8216:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8197:64:5"},{"condition":{"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8279:8:5","subExpression":{"id":676,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"8280:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":682,"nodeType":"IfStatement","src":"8275:79:5","trueBody":{"id":681,"nodeType":"Block","src":"8289:65:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":678,"name":"Roullete_transferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"8314:23:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8314:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":680,"nodeType":"RevertStatement","src":"8307:32:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"8102:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":659,"name":"s_recentWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"8106:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8106:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8102:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":684,"initializationExpression":{"assignments":[655],"declarations":[{"constant":false,"id":655,"mutability":"mutable","name":"i","nameLocation":"8095:1:5","nodeType":"VariableDeclaration","scope":684,"src":"8087:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":654,"name":"uint256","nodeType":"ElementaryTypeName","src":"8087:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":657,"initialValue":{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8099:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8087:13:5"},"loopExpression":{"expression":{"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8130:3:5","subExpression":{"id":662,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"8130:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":664,"nodeType":"ExpressionStatement","src":"8130:3:5"},"nodeType":"ForStatement","src":"8082:282:5"},{"eventCall":{"arguments":[{"id":686,"name":"s_recentWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"8391:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}],"id":685,"name":"winnerpicked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"8378:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_payable_$dyn_memory_ptr_$returns$__$","typeString":"function (address payable[] memory)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8378:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"EmitStatement","src":"8373:34:5"},{"expression":{"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":689,"name":"s_roulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"8417:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":690,"name":"RoulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"8435:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RoulleteState_$236_$","typeString":"type(enum Roullete.RoulleteState)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":234,"src":"8435:18:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"src":"8417:36:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"id":693,"nodeType":"ExpressionStatement","src":"8417:36:5"}]},"id":695,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"7132:18:5","nodeType":"FunctionDefinition","overrides":{"id":583,"nodeType":"OverrideSpecifier","overrides":[],"src":"7235:8:5"},"parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":695,"src":"7160:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"7160:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"randomWords","nameLocation":"7208:11:5","nodeType":"VariableDeclaration","scope":695,"src":"7191:28:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"7191:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":580,"nodeType":"ArrayTypeName","src":"7191:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7150:75:5"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[],"src":"7244:0:5"},"scope":900,"src":"7123:1337:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":756,"nodeType":"Block","src":"8532:376:5","statements":[{"assignments":[704],"declarations":[{"constant":false,"id":704,"mutability":"mutable","name":"sumsf","nameLocation":"8550:5:5","nodeType":"VariableDeclaration","scope":756,"src":"8542:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"8542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":706,"initialValue":{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8558:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8542:17:5"},{"assignments":[712],"declarations":[{"constant":false,"id":712,"mutability":"mutable","name":"chanceArray","nameLocation":"8587:11:5","nodeType":"VariableDeclaration","scope":756,"src":"8569:29:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"8569:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":711,"length":{"hexValue":"33","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8577:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"8569:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"id":715,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":713,"name":"getChanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"8601:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_array$_t_uint256_$3_memory_ptr_$","typeString":"function () pure returns (uint256[3] memory)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8601:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"nodeType":"VariableDeclarationStatement","src":"8569:48:5"},{"body":{"id":751,"nodeType":"Block","src":"8677:189:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"chance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"8695:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":728,"name":"sumsf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"8705:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8695:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":730,"name":"chance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"8714:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":731,"name":"sumsf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"8723:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":732,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"8731:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":734,"indexExpression":{"id":733,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"8743:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8731:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8723:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8714:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8695:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":749,"nodeType":"Block","src":"8800:56:5","statements":[{"expression":{"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":743,"name":"sumsf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"8818:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":744,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"8827:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":746,"indexExpression":{"id":745,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"8839:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8827:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8818:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":748,"nodeType":"ExpressionStatement","src":"8818:23:5"}]},"id":750,"nodeType":"IfStatement","src":"8691:165:5","trueBody":{"id":742,"nodeType":"Block","src":"8747:47:5","statements":[{"expression":{"arguments":[{"id":739,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"8777:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":738,"name":"Bets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"8772:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Bets_$240_$","typeString":"type(enum Roullete.Bets)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8772:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Bets_$240","typeString":"enum Roullete.Bets"}},"functionReturnParameters":702,"id":741,"nodeType":"Return","src":"8765:14:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":720,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"8648:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":721,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"8652:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8652:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8648:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":752,"initializationExpression":{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"i","nameLocation":"8641:1:5","nodeType":"VariableDeclaration","scope":752,"src":"8633:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"8633:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":719,"initialValue":{"hexValue":"30","id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8645:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8633:13:5"},"loopExpression":{"expression":{"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8672:3:5","subExpression":{"id":724,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"8672:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":726,"nodeType":"ExpressionStatement","src":"8672:3:5"},"nodeType":"ForStatement","src":"8628:238:5"},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":753,"name":"RangeOutOfBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"8883:16:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8883:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"RevertStatement","src":"8876:25:5"}]},"functionSelector":"50f1126b","id":757,"implemented":true,"kind":"function","modifiers":[],"name":"getWinningBet","nameLocation":"8475:13:5","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"chance","nameLocation":"8497:6:5","nodeType":"VariableDeclaration","scope":757,"src":"8489:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"8489:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8488:16:5"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":757,"src":"8526:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Bets_$240","typeString":"enum Roullete.Bets"},"typeName":{"id":700,"nodeType":"UserDefinedTypeName","pathNode":{"id":699,"name":"Bets","nodeType":"IdentifierPath","referencedDeclaration":240,"src":"8526:4:5"},"referencedDeclaration":240,"src":"8526:4:5","typeDescriptions":{"typeIdentifier":"t_enum$_Bets_$240","typeString":"enum Roullete.Bets"}},"visibility":"internal"}],"src":"8525:6:5"},"scope":900,"src":"8466:442:5","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":769,"nodeType":"Block","src":"8980:50:5","statements":[{"expression":{"components":[{"hexValue":"3439","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8998:2:5","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},{"hexValue":"3439","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9002:2:5","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},{"id":766,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"9006:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":767,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8997:26:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"functionReturnParameters":763,"id":768,"nodeType":"Return","src":"8990:33:5"}]},"functionSelector":"5dacf5f4","id":770,"implemented":true,"kind":"function","modifiers":[],"name":"getChanceArray","nameLocation":"8923:14:5","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[],"src":"8937:2:5"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":770,"src":"8961:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"8961:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":761,"length":{"hexValue":"33","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"8961:10:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"src":"8960:19:5"},"scope":900,"src":"8914:116:5","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":777,"nodeType":"Block","src":"9206:36:5","statements":[{"expression":{"id":775,"name":"i_entraceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"9223:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":774,"id":776,"nodeType":"Return","src":"9216:19:5"}]},"functionSelector":"ce147cf3","id":778,"implemented":true,"kind":"function","modifiers":[],"name":"getEntraceFee","nameLocation":"9160:13:5","nodeType":"FunctionDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[],"src":"9173:2:5"},"returnParameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"9197:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"9197:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9196:9:5"},"scope":900,"src":"9151:91:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":789,"nodeType":"Block","src":"9317:45:5","statements":[{"expression":{"baseExpression":{"id":785,"name":"s_BlackPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"9334:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":787,"indexExpression":{"id":786,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"9349:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9334:21:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":784,"id":788,"nodeType":"Return","src":"9327:28:5"}]},"functionSelector":"ca5953b2","id":790,"implemented":true,"kind":"function","modifiers":[],"name":"getBlackPlayer","nameLocation":"9257:14:5","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"index","nameLocation":"9280:5:5","nodeType":"VariableDeclaration","scope":790,"src":"9272:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"9272:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9271:15:5"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":790,"src":"9308:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"9308:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9307:9:5"},"scope":900,"src":"9248:114:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":801,"nodeType":"Block","src":"9435:45:5","statements":[{"expression":{"baseExpression":{"id":797,"name":"s_GreenPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"9452:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":799,"indexExpression":{"id":798,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"9467:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9452:21:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":796,"id":800,"nodeType":"Return","src":"9445:28:5"}]},"functionSelector":"5a319963","id":802,"implemented":true,"kind":"function","modifiers":[],"name":"getRedPlayer","nameLocation":"9377:12:5","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"index","nameLocation":"9398:5:5","nodeType":"VariableDeclaration","scope":802,"src":"9390:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"9390:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:15:5"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":802,"src":"9426:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"9426:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9425:9:5"},"scope":900,"src":"9368:112:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":813,"nodeType":"Block","src":"9555:43:5","statements":[{"expression":{"baseExpression":{"id":809,"name":"s_RedPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"9572:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":811,"indexExpression":{"id":810,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"9585:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9572:19:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":808,"id":812,"nodeType":"Return","src":"9565:26:5"}]},"functionSelector":"247abaca","id":814,"implemented":true,"kind":"function","modifiers":[],"name":"getGreenPlayer","nameLocation":"9495:14:5","nodeType":"FunctionDefinition","parameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"index","nameLocation":"9518:5:5","nodeType":"VariableDeclaration","scope":814,"src":"9510:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"9510:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9509:15:5"},"returnParameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"9546:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"9546:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9545:9:5"},"scope":900,"src":"9486:112:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":822,"nodeType":"Block","src":"9679:39:5","statements":[{"expression":{"id":820,"name":"s_recentWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"9696:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"functionReturnParameters":819,"id":821,"nodeType":"Return","src":"9689:22:5"}]},"functionSelector":"f077b974","id":823,"implemented":true,"kind":"function","modifiers":[],"name":"getRecentWinners","nameLocation":"9613:16:5","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"9629:2:5"},"returnParameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":823,"src":"9653:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[]"},"typeName":{"baseType":{"id":816,"name":"address","nodeType":"ElementaryTypeName","src":"9653:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":817,"nodeType":"ArrayTypeName","src":"9653:17:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"internal"}],"src":"9652:26:5"},"scope":900,"src":"9604:114:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":831,"nodeType":"Block","src":"9788:39:5","statements":[{"expression":{"id":829,"name":"s_roulleteState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"9805:15:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"functionReturnParameters":828,"id":830,"nodeType":"Return","src":"9798:22:5"}]},"functionSelector":"daebbd55","id":832,"implemented":true,"kind":"function","modifiers":[],"name":"getroulletestate","nameLocation":"9733:16:5","nodeType":"FunctionDefinition","parameters":{"id":824,"nodeType":"ParameterList","parameters":[],"src":"9749:2:5"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":832,"src":"9773:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"},"typeName":{"id":826,"nodeType":"UserDefinedTypeName","pathNode":{"id":825,"name":"RoulleteState","nodeType":"IdentifierPath","referencedDeclaration":236,"src":"9773:13:5"},"referencedDeclaration":236,"src":"9773:13:5","typeDescriptions":{"typeIdentifier":"t_enum$_RoulleteState_$236","typeString":"enum Roullete.RoulleteState"}},"visibility":"internal"}],"src":"9772:15:5"},"scope":900,"src":"9724:103:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":839,"nodeType":"Block","src":"9952:32:5","statements":[{"expression":{"id":837,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"9969:8:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":836,"id":838,"nodeType":"Return","src":"9962:15:5"}]},"functionSelector":"53a2c19a","id":840,"implemented":true,"kind":"function","modifiers":[],"name":"getNumWords","nameLocation":"9908:11:5","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[],"src":"9919:2:5"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":840,"src":"9943:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"9943:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9942:9:5"},"scope":900,"src":"9899:85:5","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":848,"nodeType":"Block","src":"10057:45:5","statements":[{"expression":{"expression":{"id":845,"name":"s_BlackPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"10074:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10074:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":844,"id":847,"nodeType":"Return","src":"10067:28:5"}]},"functionSelector":"06b188b6","id":849,"implemented":true,"kind":"function","modifiers":[],"name":"getNumberOfPlayersOfBlack","nameLocation":"9999:25:5","nodeType":"FunctionDefinition","parameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"10024:2:5"},"returnParameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":849,"src":"10048:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"10048:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10047:9:5"},"scope":900,"src":"9990:112:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":857,"nodeType":"Block","src":"10173:43:5","statements":[{"expression":{"expression":{"id":854,"name":"s_RedPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"10190:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10190:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":853,"id":856,"nodeType":"Return","src":"10183:26:5"}]},"functionSelector":"2fd31484","id":858,"implemented":true,"kind":"function","modifiers":[],"name":"getNumberOfPlayersOfRed","nameLocation":"10117:23:5","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"10140:2:5"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":858,"src":"10164:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"10164:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10163:9:5"},"scope":900,"src":"10108:108:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":866,"nodeType":"Block","src":"10289:45:5","statements":[{"expression":{"expression":{"id":863,"name":"s_GreenPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"10306:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10306:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":862,"id":865,"nodeType":"Return","src":"10299:28:5"}]},"functionSelector":"c235615a","id":867,"implemented":true,"kind":"function","modifiers":[],"name":"getNumberOfPlayersOfGreen","nameLocation":"10231:25:5","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[],"src":"10256:2:5"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":867,"src":"10280:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"10280:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10279:9:5"},"scope":900,"src":"10222:112:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":874,"nodeType":"Block","src":"10400:39:5","statements":[{"expression":{"id":872,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"10417:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":871,"id":873,"nodeType":"Return","src":"10410:22:5"}]},"functionSelector":"320229eb","id":875,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestTimeStamp","nameLocation":"10349:18:5","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"10367:2:5"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":875,"src":"10391:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"10391:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10390:9:5"},"scope":900,"src":"10340:99:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":882,"nodeType":"Block","src":"10510:44:5","statements":[{"expression":{"id":880,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"10527:20:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":879,"id":881,"nodeType":"Return","src":"10520:27:5"}]},"functionSelector":"5f1b0fd8","id":883,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfirmations","nameLocation":"10454:23:5","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"10477:2:5"},"returnParameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":883,"src":"10501:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"10501:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10500:9:5"},"scope":900,"src":"10445:109:5","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":890,"nodeType":"Block","src":"10612:33:5","statements":[{"expression":{"id":888,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"10629:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":887,"id":889,"nodeType":"Return","src":"10622:16:5"}]},"functionSelector":"c5e1ae0e","id":891,"implemented":true,"kind":"function","modifiers":[],"name":"getgasLane","nameLocation":"10569:10:5","nodeType":"FunctionDefinition","parameters":{"id":884,"nodeType":"ParameterList","parameters":[],"src":"10579:2:5"},"returnParameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":891,"src":"10603:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10603:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10602:9:5"},"scope":900,"src":"10560:85:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":898,"nodeType":"Block","src":"10704:34:5","statements":[{"expression":{"id":896,"name":"c_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"10721:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":895,"id":897,"nodeType":"Return","src":"10714:17:5"}]},"functionSelector":"91ad27b4","id":899,"implemented":true,"kind":"function","modifiers":[],"name":"getInterval","nameLocation":"10660:11:5","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"10671:2:5"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":899,"src":"10695:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"10695:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10694:9:5"},"scope":900,"src":"10651:87:5","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":901,"src":"749:9991:5","usedErrors":[47,211,213,215,217,229]}],"src":"32:10709:5"},"id":5}},"contracts":{"@chainlink/contracts/src/v0.8/KeeperBase.sol":{"KeeperBase":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212208d9ad1dbf7e87152d969cbd418dbdda83c5dae1915f5013ae3b0f6328ef950b764736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 SWAP11 0xD1 0xDB 0xF7 0xE8 PUSH18 0x52D969CBD418DBDDA83C5DAE1915F5013AE3 0xB0 0xF6 ORIGIN DUP15 0xF9 POP 0xB7 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"57:511:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212208d9ad1dbf7e87152d969cbd418dbdda83c5dae1915f5013ae3b0f6328ef950b764736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 SWAP11 0xD1 0xDB 0xF7 0xE8 PUSH18 0x52D969CBD418DBDDA83C5DAE1915F5013AE3 0xB0 0xF6 ORIGIN DUP15 0xF9 POP 0xB7 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"57:511:0:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"},"internal":{"preventExecution()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/KeeperBase.sol\":\"KeeperBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/KeeperBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract KeeperBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5dc972fdf3a524312e68ef6d2e58bcdaf965d08d9415aefa289207350c2bc85a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/KeeperCompatible.sol":{"KeeperCompatible":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"},{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\":\"KeeperCompatible\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/KeeperBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract KeeperBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5dc972fdf3a524312e68ef6d2e58bcdaf965d08d9415aefa289207350c2bc85a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./KeeperBase.sol\\\";\\nimport \\\"./interfaces/KeeperCompatibleInterface.sol\\\";\\n\\nabstract contract KeeperCompatible is KeeperBase, KeeperCompatibleInterface {}\\n\",\"keccak256\":\"0xfdb84fea1ee213662ae66b95d4f620be73b7af5ede58be3d330b222b9b566d95\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol":{"KeeperCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":\"KeeperCompatibleInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"contracts/Roullete.sol":{"Roullete":{"abi":[{"inputs":[{"internalType":"uint256","name":"entranceFee","type":"uint256"},{"internalType":"address","name":"VRFCoordinatorV2","type":"address"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"RangeOutOfBounds","type":"error"},{"inputs":[],"name":"Roullete__NotEnoughEth","type":"error"},{"inputs":[],"name":"Roullete_closed","type":"error"},{"inputs":[],"name":"Roullete_transferFailed","type":"error"},{"inputs":[{"internalType":"uint256","name":"currentBalance","type":"uint256"},{"internalType":"uint256","name":"Bplayers","type":"uint256"},{"internalType":"uint256","name":"Rplayers","type":"uint256"},{"internalType":"uint256","name":"Gplayers","type":"uint256"},{"internalType":"uint256","name":"roulleteState","type":"uint256"}],"name":"Roullete_upKeepNotNeeded","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"}],"name":"RoulleteEnter","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"requestedRoulleteResult","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address payable[]","name":"winner","type":"address[]"}],"name":"winnerpicked","type":"event"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enterBlack","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"enterGreen","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"enterRed","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getBlackPlayer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getChanceArray","outputs":[{"internalType":"uint256[3]","name":"","type":"uint256[3]"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getEntraceFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getGreenPlayer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getLatestTimeStamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getNumberOfPlayersOfBlack","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumberOfPlayersOfGreen","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumberOfPlayersOfRed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRecentWinners","outputs":[{"internalType":"address payable[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRedPlayer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRequestConfirmations","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"chance","type":"uint256"}],"name":"getWinningBet","outputs":[{"internalType":"enum Roullete.Bets","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getgasLane","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getroulletestate","outputs":[{"internalType":"enum Roullete.RoulleteState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"alex kang  this is the function chainlink keeper calls, they look for the upkeepneeded  the following should be true in order to return true 1. TIME INTERVAL SHOULD BE PASSED 2. lottery should have at least 1 player and some eth  3.subscription funded with LINK 4. LOTTERY should be in an \"open\" state --> when we are waiting for the number to get back we are in a closed state "}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_342":{"entryPoint":null,"id":342,"parameterSlots":5,"returnSlots":0},"@_60":{"entryPoint":null,"id":60,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":493,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":627,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":562,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_addresst_bytes32t_uint64t_uint32_fromMemory":{"entryPoint":650,"id":null,"parameterSlots":2,"returnSlots":5},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":388,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":457,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":356,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":297,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":585,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":516,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":786,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":292,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":408,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":467,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":307,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":601,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":536,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3479:6","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:6","statements":[{"nodeType":"YulAssignment","src":"57:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:6"},"nodeType":"YulFunctionCall","src":"67:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:6","type":""}],"src":"7:75:6"},{"body":{"nodeType":"YulBlock","src":"177:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:6"},"nodeType":"YulFunctionCall","src":"187:12:6"},"nodeType":"YulExpressionStatement","src":"187:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:6"},{"body":{"nodeType":"YulBlock","src":"300:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:6"},"nodeType":"YulFunctionCall","src":"310:12:6"},"nodeType":"YulExpressionStatement","src":"310:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:6"},{"body":{"nodeType":"YulBlock","src":"379:32:6","statements":[{"nodeType":"YulAssignment","src":"389:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:6"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:6","type":""}],"src":"334:77:6"},{"body":{"nodeType":"YulBlock","src":"460:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:6"},"nodeType":"YulFunctionCall","src":"519:12:6"},"nodeType":"YulExpressionStatement","src":"519:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:6"},"nodeType":"YulFunctionCall","src":"490:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:6"},"nodeType":"YulFunctionCall","src":"480:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:6"},"nodeType":"YulFunctionCall","src":"473:43:6"},"nodeType":"YulIf","src":"470:63:6"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:6","type":""}],"src":"417:122:6"},{"body":{"nodeType":"YulBlock","src":"608:80:6","statements":[{"nodeType":"YulAssignment","src":"618:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"633:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"627:5:6"},"nodeType":"YulFunctionCall","src":"627:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"649:26:6"},"nodeType":"YulFunctionCall","src":"649:33:6"},"nodeType":"YulExpressionStatement","src":"649:33:6"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"586:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"594:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"602:5:6","type":""}],"src":"545:143:6"},{"body":{"nodeType":"YulBlock","src":"739:81:6","statements":[{"nodeType":"YulAssignment","src":"749:65:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"764:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"771:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"760:3:6"},"nodeType":"YulFunctionCall","src":"760:54:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"749:7:6"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"721:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"731:7:6","type":""}],"src":"694:126:6"},{"body":{"nodeType":"YulBlock","src":"871:51:6","statements":[{"nodeType":"YulAssignment","src":"881:35:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"910:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"892:17:6"},"nodeType":"YulFunctionCall","src":"892:24:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"881:7:6"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"853:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"863:7:6","type":""}],"src":"826:96:6"},{"body":{"nodeType":"YulBlock","src":"971:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"1028:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1040:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1030:6:6"},"nodeType":"YulFunctionCall","src":"1030:12:6"},"nodeType":"YulExpressionStatement","src":"1030:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"994:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1019:5:6"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1001:17:6"},"nodeType":"YulFunctionCall","src":"1001:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"991:2:6"},"nodeType":"YulFunctionCall","src":"991:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"984:6:6"},"nodeType":"YulFunctionCall","src":"984:43:6"},"nodeType":"YulIf","src":"981:63:6"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"964:5:6","type":""}],"src":"928:122:6"},{"body":{"nodeType":"YulBlock","src":"1119:80:6","statements":[{"nodeType":"YulAssignment","src":"1129:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1144:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1138:5:6"},"nodeType":"YulFunctionCall","src":"1138:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1129:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1187:5:6"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1160:26:6"},"nodeType":"YulFunctionCall","src":"1160:33:6"},"nodeType":"YulExpressionStatement","src":"1160:33:6"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"1105:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1113:5:6","type":""}],"src":"1056:143:6"},{"body":{"nodeType":"YulBlock","src":"1250:32:6","statements":[{"nodeType":"YulAssignment","src":"1260:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"1271:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1260:7:6"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1232:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1242:7:6","type":""}],"src":"1205:77:6"},{"body":{"nodeType":"YulBlock","src":"1331:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"1388:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1400:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1390:6:6"},"nodeType":"YulFunctionCall","src":"1390:12:6"},"nodeType":"YulExpressionStatement","src":"1390:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1354:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1379:5:6"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1361:17:6"},"nodeType":"YulFunctionCall","src":"1361:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1351:2:6"},"nodeType":"YulFunctionCall","src":"1351:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1344:6:6"},"nodeType":"YulFunctionCall","src":"1344:43:6"},"nodeType":"YulIf","src":"1341:63:6"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1324:5:6","type":""}],"src":"1288:122:6"},{"body":{"nodeType":"YulBlock","src":"1479:80:6","statements":[{"nodeType":"YulAssignment","src":"1489:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1504:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:6"},"nodeType":"YulFunctionCall","src":"1498:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1489:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1547:5:6"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1520:26:6"},"nodeType":"YulFunctionCall","src":"1520:33:6"},"nodeType":"YulExpressionStatement","src":"1520:33:6"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1457:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"1465:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1473:5:6","type":""}],"src":"1416:143:6"},{"body":{"nodeType":"YulBlock","src":"1609:57:6","statements":[{"nodeType":"YulAssignment","src":"1619:41:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1634:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"1641:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1630:3:6"},"nodeType":"YulFunctionCall","src":"1630:30:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1619:7:6"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1591:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1601:7:6","type":""}],"src":"1565:101:6"},{"body":{"nodeType":"YulBlock","src":"1714:78:6","statements":[{"body":{"nodeType":"YulBlock","src":"1770:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1779:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1782:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1772:6:6"},"nodeType":"YulFunctionCall","src":"1772:12:6"},"nodeType":"YulExpressionStatement","src":"1772:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1737:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1761:5:6"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1744:16:6"},"nodeType":"YulFunctionCall","src":"1744:23:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1734:2:6"},"nodeType":"YulFunctionCall","src":"1734:34:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1727:6:6"},"nodeType":"YulFunctionCall","src":"1727:42:6"},"nodeType":"YulIf","src":"1724:62:6"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1707:5:6","type":""}],"src":"1672:120:6"},{"body":{"nodeType":"YulBlock","src":"1860:79:6","statements":[{"nodeType":"YulAssignment","src":"1870:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1885:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1879:5:6"},"nodeType":"YulFunctionCall","src":"1879:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1870:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1927:5:6"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"1901:25:6"},"nodeType":"YulFunctionCall","src":"1901:32:6"},"nodeType":"YulExpressionStatement","src":"1901:32:6"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1838:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"1846:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1854:5:6","type":""}],"src":"1798:141:6"},{"body":{"nodeType":"YulBlock","src":"1989:49:6","statements":[{"nodeType":"YulAssignment","src":"1999:33:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2014:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"2021:10:6","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2010:3:6"},"nodeType":"YulFunctionCall","src":"2010:22:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1999:7:6"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1971:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1981:7:6","type":""}],"src":"1945:93:6"},{"body":{"nodeType":"YulBlock","src":"2086:78:6","statements":[{"body":{"nodeType":"YulBlock","src":"2142:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2151:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2154:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2144:6:6"},"nodeType":"YulFunctionCall","src":"2144:12:6"},"nodeType":"YulExpressionStatement","src":"2144:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2109:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2133:5:6"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"2116:16:6"},"nodeType":"YulFunctionCall","src":"2116:23:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2106:2:6"},"nodeType":"YulFunctionCall","src":"2106:34:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2099:6:6"},"nodeType":"YulFunctionCall","src":"2099:42:6"},"nodeType":"YulIf","src":"2096:62:6"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2079:5:6","type":""}],"src":"2044:120:6"},{"body":{"nodeType":"YulBlock","src":"2232:79:6","statements":[{"nodeType":"YulAssignment","src":"2242:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2257:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2251:5:6"},"nodeType":"YulFunctionCall","src":"2251:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2242:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2299:5:6"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"2273:25:6"},"nodeType":"YulFunctionCall","src":"2273:32:6"},"nodeType":"YulExpressionStatement","src":"2273:32:6"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2210:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"2218:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2226:5:6","type":""}],"src":"2170:141:6"},{"body":{"nodeType":"YulBlock","src":"2460:830:6","statements":[{"body":{"nodeType":"YulBlock","src":"2507:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2509:77:6"},"nodeType":"YulFunctionCall","src":"2509:79:6"},"nodeType":"YulExpressionStatement","src":"2509:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2481:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"2490:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2477:3:6"},"nodeType":"YulFunctionCall","src":"2477:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"2502:3:6","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2473:3:6"},"nodeType":"YulFunctionCall","src":"2473:33:6"},"nodeType":"YulIf","src":"2470:120:6"},{"nodeType":"YulBlock","src":"2600:128:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2615:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"2629:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2619:6:6","type":""}]},{"nodeType":"YulAssignment","src":"2644:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2690:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"2701:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2686:3:6"},"nodeType":"YulFunctionCall","src":"2686:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2710:7:6"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2654:31:6"},"nodeType":"YulFunctionCall","src":"2654:64:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2644:6:6"}]}]},{"nodeType":"YulBlock","src":"2738:129:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2753:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"2767:2:6","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2757:6:6","type":""}]},{"nodeType":"YulAssignment","src":"2783:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2829:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"2840:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2825:3:6"},"nodeType":"YulFunctionCall","src":"2825:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2849:7:6"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2793:31:6"},"nodeType":"YulFunctionCall","src":"2793:64:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2783:6:6"}]}]},{"nodeType":"YulBlock","src":"2877:129:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2892:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"2906:2:6","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2896:6:6","type":""}]},{"nodeType":"YulAssignment","src":"2922:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:6"},"nodeType":"YulFunctionCall","src":"2964:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:6"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"2932:31:6"},"nodeType":"YulFunctionCall","src":"2932:64:6"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2922:6:6"}]}]},{"nodeType":"YulBlock","src":"3016:128:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3031:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"3045:2:6","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3035:6:6","type":""}]},{"nodeType":"YulAssignment","src":"3061:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3106:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"3117:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3102:3:6"},"nodeType":"YulFunctionCall","src":"3102:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3126:7:6"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"3071:30:6"},"nodeType":"YulFunctionCall","src":"3071:63:6"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3061:6:6"}]}]},{"nodeType":"YulBlock","src":"3154:129:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3169:17:6","value":{"kind":"number","nodeType":"YulLiteral","src":"3183:3:6","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3173:6:6","type":""}]},{"nodeType":"YulAssignment","src":"3200:73:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3245:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"3256:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3241:3:6"},"nodeType":"YulFunctionCall","src":"3241:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3265:7:6"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"3210:30:6"},"nodeType":"YulFunctionCall","src":"3210:63:6"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3200:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_bytes32t_uint64t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2398:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2409:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2421:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2429:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2437:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2445:6:6","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2453:6:6","type":""}],"src":"2317:973:6"},{"body":{"nodeType":"YulBlock","src":"3324:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3341:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3344:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3334:6:6"},"nodeType":"YulFunctionCall","src":"3334:88:6"},"nodeType":"YulExpressionStatement","src":"3334:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3438:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3441:4:6","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3431:6:6"},"nodeType":"YulFunctionCall","src":"3431:15:6"},"nodeType":"YulExpressionStatement","src":"3431:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3462:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3465:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3455:6:6"},"nodeType":"YulFunctionCall","src":"3455:15:6"},"nodeType":"YulExpressionStatement","src":"3455:15:6"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"3296:180:6"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_bytes32t_uint64t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101406040523480156200001257600080fd5b50604051620024e3380380620024e383398181016040528101906200003891906200028a565b838073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508460a081815250508373ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508260e081815250508167ffffffffffffffff166101008167ffffffffffffffff16815250508063ffffffff166101208163ffffffff16815250506000600560006101000a81548160ff021916908360018111156200010d576200010c62000312565b5b021790555042600381905550505050505062000341565b600080fd5b6000819050919050565b6200013e8162000129565b81146200014a57600080fd5b50565b6000815190506200015e8162000133565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001918262000164565b9050919050565b620001a38162000184565b8114620001af57600080fd5b50565b600081519050620001c38162000198565b92915050565b6000819050919050565b620001de81620001c9565b8114620001ea57600080fd5b50565b600081519050620001fe81620001d3565b92915050565b600067ffffffffffffffff82169050919050565b620002238162000204565b81146200022f57600080fd5b50565b600081519050620002438162000218565b92915050565b600063ffffffff82169050919050565b620002648162000249565b81146200027057600080fd5b50565b600081519050620002848162000259565b92915050565b600080600080600060a08688031215620002a957620002a862000124565b5b6000620002b9888289016200014d565b9550506020620002cc88828901620001b2565b9450506040620002df88828901620001ed565b9350506060620002f28882890162000232565b9250506080620003058882890162000273565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805160a05160c05160e051610100516101205161212f620003b46000396000610a2e01526000610a0b0152600081816109ea0152610e9c015260006109ae0152600081816104e20152818161076501528181610be90152610f0c01526000818161065e01526106b2015261212f6000f3fe6080604052600436106101355760003560e01c80635a319963116100ab578063c235615a1161006f578063c235615a146103cc578063c5e1ae0e146103f7578063ca5953b214610422578063ce147cf31461045f578063daebbd551461048a578063f077b974146104b557610135565b80635a319963146102d05780635dacf5f41461030d5780635f1b0fd8146103385780636e04ff0d1461036357806391ad27b4146103a157610135565b80632fd31484116100fd5780632fd31484146101df578063320229eb1461020a5780634585e33b1461023557806350f1126b1461025e57806353a2c19a1461029b5780635541e758146102c657610135565b806306170dea1461013a57806306b188b6146101445780631fe543e31461016f578063247abaca146101985780632bacb08b146101d5575b600080fd5b6101426104e0565b005b34801561015057600080fd5b5061015961064f565b604051610166919061148a565b60405180910390f35b34801561017b57600080fd5b506101966004803603810190610191919061163e565b61065c565b005b3480156101a457600080fd5b506101bf60048036038101906101ba919061169a565b61071c565b6040516101cc9190611708565b60405180910390f35b6101dd610763565b005b3480156101eb57600080fd5b506101f46108d2565b604051610201919061148a565b60405180910390f35b34801561021657600080fd5b5061021f6108de565b60405161022c919061148a565b60405180910390f35b34801561024157600080fd5b5061025c6004803603810190610257919061177e565b6108e8565b005b34801561026a57600080fd5b506102856004803603810190610280919061169a565b610af6565b6040516102929190611842565b60405180910390f35b3480156102a757600080fd5b506102b0610bd8565b6040516102bd919061148a565b60405180910390f35b6102ce610be7565b005b3480156102dc57600080fd5b506102f760048036038101906102f2919061169a565b610d56565b6040516103049190611708565b60405180910390f35b34801561031957600080fd5b50610322610d9e565b60405161032f9190611908565b60405180910390f35b34801561034457600080fd5b5061034d610dc9565b60405161035a919061148a565b60405180910390f35b34801561036f57600080fd5b5061038a600480360381019061038591906119d8565b610dd6565b604051610398929190611ac4565b60405180910390f35b3480156103ad57600080fd5b506103b6610e82565b6040516103c3919061148a565b60405180910390f35b3480156103d857600080fd5b506103e1610e8b565b6040516103ee919061148a565b60405180910390f35b34801561040357600080fd5b5061040c610e98565b6040516104199190611b0d565b60405180910390f35b34801561042e57600080fd5b506104496004803603810190610444919061169a565b610ec0565b6040516104569190611708565b60405180910390f35b34801561046b57600080fd5b50610474610f08565b604051610481919061148a565b60405180910390f35b34801561049657600080fd5b5061049f610f30565b6040516104ac9190611b70565b60405180910390f35b3480156104c157600080fd5b506104ca610f47565b6040516104d79190611c5b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000034101561053a576040517fecbc979a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600181111561054e5761054d6117cb565b5b600560009054906101000a900460ff1660018111156105705761056f6117cb565b5b146105a7576040517fb0c6c11500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f9836af9e2b5272cced48d1370342a33fd92052e2ccf9452759d4a265f8e0710b60405160405180910390a2565b6000600280549050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070e57337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f4000000000000000000000000000000000000000000000000000000008152600401610705929190611c7d565b60405180910390fd5b6107188282610fd5565b5050565b600080828154811061073157610730611ca6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f00000000000000000000000000000000000000000000000000000000000000003410156107bd576040517fecbc979a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018111156107d1576107d06117cb565b5b600560009054906101000a900460ff1660018111156107f3576107f26117cb565b5b1461082a576040517fb0c6c11500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f9836af9e2b5272cced48d1370342a33fd92052e2ccf9452759d4a265f8e0710b60405160405180910390a2565b60008080549050905090565b6000600354905090565b600061090260405180602001604052806000815250610dd6565b5090508061097f5747600280549050600080549050600180549050600560009054906101000a900460ff16600181111561093f5761093e6117cb565b5b6040517f90262e31000000000000000000000000000000000000000000000000000000008152600401610976959493929190611cd5565b60405180910390fd5b6001600560006101000a81548160ff021916908360018111156109a5576109a46117cb565b5b021790555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b8152600401610a6f959493929190611d87565b602060405180830381600087803b158015610a8957600080fd5b505af1158015610a9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac19190611def565b9050807f4ff16b3fc94bbf92ec93fec52025caadbcf9e22b038e9675c6dbdec0fe60c09060405160405180910390a250505050565b600080600090506000610b07610d9e565b905060005b6003811015610ba057828510158015610b465750818160038110610b3357610b32611ca6565b5b602002015183610b439190611e4b565b85105b15610b6857806002811115610b5e57610b5d6117cb565b5b9350505050610bd3565b818160038110610b7b57610b7a611ca6565b5b602002015183610b8b9190611e4b565b92508080610b9890611ea1565b915050610b0c565b506040517f0655dc2500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b6000600163ffffffff16905090565b7f0000000000000000000000000000000000000000000000000000000000000000341015610c41576040517fecbc979a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001811115610c5557610c546117cb565b5b600560009054906101000a900460ff166001811115610c7757610c766117cb565b5b14610cae576040517fb0c6c11500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f9836af9e2b5272cced48d1370342a33fd92052e2ccf9452759d4a265f8e0710b60405160405180910390a2565b600060018281548110610d6c57610d6b611ca6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610da6611356565b604051806060016040528060318152602001603181526020016064815250905090565b6000600361ffff16905090565b600060606000806001811115610def57610dee6117cb565b5b600560009054906101000a900460ff166001811115610e1157610e106117cb565b5b1490506000601e60035442610e269190611eea565b1190506000806002805490501180610e42575060008080549050115b80610e5257506000600180549050115b905060008047119050838015610e655750825b8015610e6e5750815b8015610e775750805b955050505050915091565b6000601e905090565b6000600180549050905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600060028281548110610ed657610ed5611ca6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600560009054906101000a900460ff16905090565b60606004805480602002602001604051908101604052809291908181526020018280548015610fcb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610f81575b5050505050905090565b6000606482600081518110610fed57610fec611ca6565b5b6020026020010151610fff9190611f4d565b9050600061100c82610af6565b905060006002811115611022576110216117cb565b5b816002811115611035576110346117cb565b5b1415611053576000600490805461104d929190611378565b506110ad565b60016002811115611067576110666117cb565b5b81600281111561107a576110796117cb565b5b14156110985760026004908054611092929190611378565b506110ac565b600160049080546110aa929190611378565b505b5b42600381905550600067ffffffffffffffff8111156110cf576110ce6114fb565b5b6040519080825280602002602001820160405280156110fd5781602001602082028036833780820191505090505b50600090805190602001906111139291906113ca565b50600067ffffffffffffffff81111561112f5761112e6114fb565b5b60405190808252806020026020018201604052801561115d5781602001602082028036833780820191505090505b50600290805190602001906111739291906113ca565b50600067ffffffffffffffff81111561118f5761118e6114fb565b5b6040519080825280602002602001820160405280156111bd5781602001602082028036833780820191505090505b50600190805190602001906111d39291906113ca565b5060005b6004805490508110156112e1576000600482815481106111fa576111f9611ca6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1667016345785d8a000060405161125090611faf565b60006040518083038185875af1925050503d806000811461128d576040519150601f19603f3d011682016040523d82523d6000602084013e611292565b606091505b50509050806112cd576040517f0d34c7ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5080806112d990611ea1565b9150506111d7565b5060046040516112f191906120e2565b60405180910390207f80624e43dc2be5bdb3a00067a406d64c2632d004437308e62c32f3b97790dd8260405160405180910390a26000600560006101000a81548160ff0219169083600181111561134b5761134a6117cb565b5b021790555050505050565b6040518060600160405280600390602082028036833780820191505090505090565b8280548282559060005260206000209081019282156113b95760005260206000209182015b828111156113b857825482559160010191906001019061139d565b5b5090506113c69190611454565b5090565b828054828255906000526020600020908101928215611443579160200282015b828111156114425782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906113ea565b5b5090506114509190611454565b5090565b5b8082111561146d576000816000905550600101611455565b5090565b6000819050919050565b61148481611471565b82525050565b600060208201905061149f600083018461147b565b92915050565b6000604051905090565b600080fd5b600080fd5b6114c281611471565b81146114cd57600080fd5b50565b6000813590506114df816114b9565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611533826114ea565b810181811067ffffffffffffffff82111715611552576115516114fb565b5b80604052505050565b60006115656114a5565b9050611571828261152a565b919050565b600067ffffffffffffffff821115611591576115906114fb565b5b602082029050602081019050919050565b600080fd5b60006115ba6115b584611576565b61155b565b905080838252602082019050602084028301858111156115dd576115dc6115a2565b5b835b8181101561160657806115f288826114d0565b8452602084019350506020810190506115df565b5050509392505050565b600082601f830112611625576116246114e5565b5b81356116358482602086016115a7565b91505092915050565b60008060408385031215611655576116546114af565b5b6000611663858286016114d0565b925050602083013567ffffffffffffffff811115611684576116836114b4565b5b61169085828601611610565b9150509250929050565b6000602082840312156116b0576116af6114af565b5b60006116be848285016114d0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116f2826116c7565b9050919050565b611702816116e7565b82525050565b600060208201905061171d60008301846116f9565b92915050565b600080fd5b60008083601f84011261173e5761173d6114e5565b5b8235905067ffffffffffffffff81111561175b5761175a611723565b5b602083019150836001820283011115611777576117766115a2565b5b9250929050565b60008060208385031215611795576117946114af565b5b600083013567ffffffffffffffff8111156117b3576117b26114b4565b5b6117bf85828601611728565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061180b5761180a6117cb565b5b50565b600081905061181c826117fa565b919050565b600061182c8261180e565b9050919050565b61183c81611821565b82525050565b60006020820190506118576000830184611833565b92915050565b600060039050919050565b600081905092915050565b6000819050919050565b61188681611471565b82525050565b6000611898838361187d565b60208301905092915050565b6000602082019050919050565b6118ba8161185d565b6118c48184611868565b92506118cf82611873565b8060005b838110156119005781516118e7878261188c565b96506118f2836118a4565b9250506001810190506118d3565b505050505050565b600060608201905061191d60008301846118b1565b92915050565b600080fd5b600067ffffffffffffffff821115611943576119426114fb565b5b61194c826114ea565b9050602081019050919050565b82818337600083830152505050565b600061197b61197684611928565b61155b565b90508281526020810184848401111561199757611996611923565b5b6119a2848285611959565b509392505050565b600082601f8301126119bf576119be6114e5565b5b81356119cf848260208601611968565b91505092915050565b6000602082840312156119ee576119ed6114af565b5b600082013567ffffffffffffffff811115611a0c57611a0b6114b4565b5b611a18848285016119aa565b91505092915050565b60008115159050919050565b611a3681611a21565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a76578082015181840152602081019050611a5b565b83811115611a85576000848401525b50505050565b6000611a9682611a3c565b611aa08185611a47565b9350611ab0818560208601611a58565b611ab9816114ea565b840191505092915050565b6000604082019050611ad96000830185611a2d565b8181036020830152611aeb8184611a8b565b90509392505050565b6000819050919050565b611b0781611af4565b82525050565b6000602082019050611b226000830184611afe565b92915050565b60028110611b3957611b386117cb565b5b50565b6000819050611b4a82611b28565b919050565b6000611b5a82611b3c565b9050919050565b611b6a81611b4f565b82525050565b6000602082019050611b856000830184611b61565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611bc2826116c7565b9050919050565b611bd281611bb7565b82525050565b6000611be48383611bc9565b60208301905092915050565b6000602082019050919050565b6000611c0882611b8b565b611c128185611b96565b9350611c1d83611ba7565b8060005b83811015611c4e578151611c358882611bd8565b9750611c4083611bf0565b925050600181019050611c21565b5085935050505092915050565b60006020820190508181036000830152611c758184611bfd565b905092915050565b6000604082019050611c9260008301856116f9565b611c9f60208301846116f9565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060a082019050611cea600083018861147b565b611cf7602083018761147b565b611d04604083018661147b565b611d11606083018561147b565b611d1e608083018461147b565b9695505050505050565b600067ffffffffffffffff82169050919050565b611d4581611d28565b82525050565b600061ffff82169050919050565b611d6281611d4b565b82525050565b600063ffffffff82169050919050565b611d8181611d68565b82525050565b600060a082019050611d9c6000830188611afe565b611da96020830187611d3c565b611db66040830186611d59565b611dc36060830185611d78565b611dd06080830184611d78565b9695505050505050565b600081519050611de9816114b9565b92915050565b600060208284031215611e0557611e046114af565b5b6000611e1384828501611dda565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e5682611471565b9150611e6183611471565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e9657611e95611e1c565b5b828201905092915050565b6000611eac82611471565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611edf57611ede611e1c565b5b600182019050919050565b6000611ef582611471565b9150611f0083611471565b925082821015611f1357611f12611e1c565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611f5882611471565b9150611f6383611471565b925082611f7357611f72611f1e565b5b828206905092915050565b600081905092915050565b50565b6000611f99600083611f7e565b9150611fa482611f89565b600082019050919050565b6000611fba82611f8c565b9150819050919050565b600081549050919050565b600081905092915050565b60008190508160005260206000209050919050565b611ff881611bb7565b82525050565b600061200a8383611fef565b60208301905092915050565b60008160001c9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061205661205183612016565b612023565b9050919050565b60006120698254612043565b9050919050565b6000600182019050919050565b600061208882611fc4565b6120928185611fcf565b935061209d83611fda565b8060005b838110156120d5576120b28261205d565b6120bc8882611ffe565b97506120c783612070565b9250506001810190506120a1565b5085935050505092915050565b60006120ee828461207d565b91508190509291505056fea26469706673582212208c3ef71a9621a9a5fac3b804760196d3b2435b11ea6297707c386f5af2e0136e64736f6c63430008090033","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x24E3 CODESIZE SUB DUP1 PUSH3 0x24E3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x28A JUMP JUMPDEST DUP4 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP5 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x100 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x120 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x10D JUMPI PUSH3 0x10C PUSH3 0x312 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x341 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x13E DUP2 PUSH3 0x129 JUMP JUMPDEST DUP2 EQ PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x15E DUP2 PUSH3 0x133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x191 DUP3 PUSH3 0x164 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1A3 DUP2 PUSH3 0x184 JUMP JUMPDEST DUP2 EQ PUSH3 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1C3 DUP2 PUSH3 0x198 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1DE DUP2 PUSH3 0x1C9 JUMP JUMPDEST DUP2 EQ PUSH3 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1FE DUP2 PUSH3 0x1D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x223 DUP2 PUSH3 0x204 JUMP JUMPDEST DUP2 EQ PUSH3 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x243 DUP2 PUSH3 0x218 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x264 DUP2 PUSH3 0x249 JUMP JUMPDEST DUP2 EQ PUSH3 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x284 DUP2 PUSH3 0x259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x2A9 JUMPI PUSH3 0x2A8 PUSH3 0x124 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2B9 DUP9 DUP3 DUP10 ADD PUSH3 0x14D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH3 0x2CC DUP9 DUP3 DUP10 ADD PUSH3 0x1B2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x2DF DUP9 DUP3 DUP10 ADD PUSH3 0x1ED JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x2F2 DUP9 DUP3 DUP10 ADD PUSH3 0x232 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x305 DUP9 DUP3 DUP10 ADD PUSH3 0x273 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x212F PUSH3 0x3B4 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xA2E ADD MSTORE PUSH1 0x0 PUSH2 0xA0B ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x9EA ADD MSTORE PUSH2 0xE9C ADD MSTORE PUSH1 0x0 PUSH2 0x9AE ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x4E2 ADD MSTORE DUP2 DUP2 PUSH2 0x765 ADD MSTORE DUP2 DUP2 PUSH2 0xBE9 ADD MSTORE PUSH2 0xF0C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x65E ADD MSTORE PUSH2 0x6B2 ADD MSTORE PUSH2 0x212F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A319963 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC235615A GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC235615A EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xC5E1AE0E EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xCA5953B2 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xCE147CF3 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0xDAEBBD55 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xF077B974 EQ PUSH2 0x4B5 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x5A319963 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x5DACF5F4 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x5F1B0FD8 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x91AD27B4 EQ PUSH2 0x3A1 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x2FD31484 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x2FD31484 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x320229EB EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x50F1126B EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x5541E758 EQ PUSH2 0x2C6 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x6170DEA EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x6B188B6 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x247ABACA EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x2BACB08B EQ PUSH2 0x1D5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142 PUSH2 0x4E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x763 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F4 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x8E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH2 0xBE7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E1 PUSH2 0xE8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40C PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x449 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0xEC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49F PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CA PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH32 0xECBC979A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x54E JUMPI PUSH2 0x54D PUSH2 0x17CB JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x570 JUMPI PUSH2 0x56F PUSH2 0x17CB JUMP JUMPDEST JUMPDEST EQ PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB0C6C11500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9836AF9E2B5272CCED48D1370342A33FD92052E2CCF9452759D4A265F8E0710B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x70E JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x705 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x718 DUP3 DUP3 PUSH2 0xFD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x731 JUMPI PUSH2 0x730 PUSH2 0x1CA6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x7BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xECBC979A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7D1 JUMPI PUSH2 0x7D0 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7F3 JUMPI PUSH2 0x7F2 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST EQ PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH32 0xB0C6C11500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9836AF9E2B5272CCED48D1370342A33FD92052E2CCF9452759D4A265F8E0710B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x902 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDD6 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x97F JUMPI SELFBALANCE PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x1 DUP1 SLOAD SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x93F JUMPI PUSH2 0x93E PUSH2 0x17CB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x90262E3100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x976 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x9A4 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC1 SWAP2 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x4FF16B3FC94BBF92EC93FEC52025CAADBCF9E22B038E9675C6DBDEC0FE60C090 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0xB07 PUSH2 0xD9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xBA0 JUMPI DUP3 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0xB46 JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xB33 JUMPI PUSH2 0xB32 PUSH2 0x1CA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xB43 SWAP2 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0xB68 JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB5E JUMPI PUSH2 0xB5D PUSH2 0x17CB JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0xBD3 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xB7B JUMPI PUSH2 0xB7A PUSH2 0x1CA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0xB98 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x655DC2500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0xC41 JUMPI PUSH1 0x40 MLOAD PUSH32 0xECBC979A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xC55 JUMPI PUSH2 0xC54 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xC77 JUMPI PUSH2 0xC76 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST EQ PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH32 0xB0C6C11500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9836AF9E2B5272CCED48D1370342A33FD92052E2CCF9452759D4A265F8E0710B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD6C JUMPI PUSH2 0xD6B PUSH2 0x1CA6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA6 PUSH2 0x1356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEE PUSH2 0x17CB JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE11 JUMPI PUSH2 0xE10 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH1 0x1E PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xE26 SWAP2 SWAP1 PUSH2 0x1EEA JUMP JUMPDEST GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP GT DUP1 PUSH2 0xE42 JUMPI POP PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP GT JUMPDEST DUP1 PUSH2 0xE52 JUMPI POP PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP GT JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0xE65 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0xE6E JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0xE77 JUMPI POP DUP1 JUMPDEST SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1E SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xED6 JUMPI PUSH2 0xED5 PUSH2 0x1CA6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xFCB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xF81 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xFED JUMPI PUSH2 0xFEC PUSH2 0x1CA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x100C DUP3 PUSH2 0xAF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1022 JUMPI PUSH2 0x1021 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1035 JUMPI PUSH2 0x1034 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1053 JUMPI PUSH1 0x0 PUSH1 0x4 SWAP1 DUP1 SLOAD PUSH2 0x104D SWAP3 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST POP PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1067 JUMPI PUSH2 0x1066 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x107A JUMPI PUSH2 0x1079 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1098 JUMPI PUSH1 0x2 PUSH1 0x4 SWAP1 DUP1 SLOAD PUSH2 0x1092 SWAP3 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST POP PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 SWAP1 DUP1 SLOAD PUSH2 0x10AA SWAP3 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST POP JUMPDEST JUMPDEST TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10CF JUMPI PUSH2 0x10CE PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10FD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1113 SWAP3 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x112F JUMPI PUSH2 0x112E PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x115D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1173 SWAP3 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x118F JUMPI PUSH2 0x118E PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11BD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x11D3 SWAP3 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x12E1 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11FA JUMPI PUSH2 0x11F9 PUSH2 0x1CA6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0x16345785D8A0000 PUSH1 0x40 MLOAD PUSH2 0x1250 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD PUSH32 0xD34C7CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 DUP1 PUSH2 0x12D9 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11D7 JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0x40 MLOAD PUSH2 0x12F1 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0x80624E43DC2BE5BDB3A00067A406D64C2632D004437308E62C32F3B97790DD82 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0x17CB JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x13B9 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x13B8 JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x139D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x13C6 SWAP2 SWAP1 PUSH2 0x1454 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1443 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1442 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1450 SWAP2 SWAP1 PUSH2 0x1454 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x146D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1455 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1484 DUP2 PUSH2 0x1471 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x149F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x147B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C2 DUP2 PUSH2 0x1471 JUMP JUMPDEST DUP2 EQ PUSH2 0x14CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14DF DUP2 PUSH2 0x14B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1533 DUP3 PUSH2 0x14EA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1552 JUMPI PUSH2 0x1551 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1565 PUSH2 0x14A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1571 DUP3 DUP3 PUSH2 0x152A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1591 JUMPI PUSH2 0x1590 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15BA PUSH2 0x15B5 DUP5 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x155B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH2 0x15DC PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1606 JUMPI DUP1 PUSH2 0x15F2 DUP9 DUP3 PUSH2 0x14D0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15DF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1625 JUMPI PUSH2 0x1624 PUSH2 0x14E5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1635 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x14AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1663 DUP6 DUP3 DUP7 ADD PUSH2 0x14D0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1684 JUMPI PUSH2 0x1683 PUSH2 0x14B4 JUMP JUMPDEST JUMPDEST PUSH2 0x1690 DUP6 DUP3 DUP7 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B0 JUMPI PUSH2 0x16AF PUSH2 0x14AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16BE DUP5 DUP3 DUP6 ADD PUSH2 0x14D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F2 DUP3 PUSH2 0x16C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1702 DUP2 PUSH2 0x16E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x173E JUMPI PUSH2 0x173D PUSH2 0x14E5 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x1723 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1777 JUMPI PUSH2 0x1776 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1795 JUMPI PUSH2 0x1794 PUSH2 0x14AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17B3 JUMPI PUSH2 0x17B2 PUSH2 0x14B4 JUMP JUMPDEST JUMPDEST PUSH2 0x17BF DUP6 DUP3 DUP7 ADD PUSH2 0x1728 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x180B JUMPI PUSH2 0x180A PUSH2 0x17CB JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x181C DUP3 PUSH2 0x17FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C DUP3 PUSH2 0x180E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x183C DUP2 PUSH2 0x1821 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1857 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1886 DUP2 PUSH2 0x1471 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1898 DUP4 DUP4 PUSH2 0x187D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18BA DUP2 PUSH2 0x185D JUMP JUMPDEST PUSH2 0x18C4 DUP2 DUP5 PUSH2 0x1868 JUMP JUMPDEST SWAP3 POP PUSH2 0x18CF DUP3 PUSH2 0x1873 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1900 JUMPI DUP2 MLOAD PUSH2 0x18E7 DUP8 DUP3 PUSH2 0x188C JUMP JUMPDEST SWAP7 POP PUSH2 0x18F2 DUP4 PUSH2 0x18A4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18D3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x191D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1943 JUMPI PUSH2 0x1942 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH2 0x194C DUP3 PUSH2 0x14EA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197B PUSH2 0x1976 DUP5 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x155B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x1923 JUMP JUMPDEST JUMPDEST PUSH2 0x19A2 DUP5 DUP3 DUP6 PUSH2 0x1959 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19BF JUMPI PUSH2 0x19BE PUSH2 0x14E5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19CF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1968 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EE JUMPI PUSH2 0x19ED PUSH2 0x14AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A0C JUMPI PUSH2 0x1A0B PUSH2 0x14B4 JUMP JUMPDEST JUMPDEST PUSH2 0x1A18 DUP5 DUP3 DUP6 ADD PUSH2 0x19AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A36 DUP2 PUSH2 0x1A21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A76 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A5B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1A85 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A96 DUP3 PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x1AA0 DUP2 DUP6 PUSH2 0x1A47 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AB0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x1AB9 DUP2 PUSH2 0x14EA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AD9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A2D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1AEB DUP2 DUP5 PUSH2 0x1A8B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B07 DUP2 PUSH2 0x1AF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B22 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1B39 JUMPI PUSH2 0x1B38 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1B4A DUP3 PUSH2 0x1B28 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5A DUP3 PUSH2 0x1B3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6A DUP2 PUSH2 0x1B4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC2 DUP3 PUSH2 0x16C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD2 DUP2 PUSH2 0x1BB7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE4 DUP4 DUP4 PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C08 DUP3 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x1C12 DUP2 DUP6 PUSH2 0x1B96 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C1D DUP4 PUSH2 0x1BA7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C4E JUMPI DUP2 MLOAD PUSH2 0x1C35 DUP9 DUP3 PUSH2 0x1BD8 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C40 DUP4 PUSH2 0x1BF0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C21 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C75 DUP2 DUP5 PUSH2 0x1BFD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C92 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x1C9F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16F9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1CEA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x147B JUMP JUMPDEST PUSH2 0x1CF7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x147B JUMP JUMPDEST PUSH2 0x1D04 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x147B JUMP JUMPDEST PUSH2 0x1D11 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x147B JUMP JUMPDEST PUSH2 0x1D1E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x147B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D45 DUP2 PUSH2 0x1D28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D62 DUP2 PUSH2 0x1D4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D81 DUP2 PUSH2 0x1D68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D9C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1AFE JUMP JUMPDEST PUSH2 0x1DA9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1D3C JUMP JUMPDEST PUSH2 0x1DB6 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x1DC3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x1DD0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1D78 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DE9 DUP2 PUSH2 0x14B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E05 JUMPI PUSH2 0x1E04 PUSH2 0x14AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E13 DUP5 DUP3 DUP6 ADD PUSH2 0x1DDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E56 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E61 DUP4 PUSH2 0x1471 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E96 JUMPI PUSH2 0x1E95 PUSH2 0x1E1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAC DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1EDF JUMPI PUSH2 0x1EDE PUSH2 0x1E1C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF5 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F00 DUP4 PUSH2 0x1471 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x1E1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F58 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F63 DUP4 PUSH2 0x1471 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F73 JUMPI PUSH2 0x1F72 PUSH2 0x1F1E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F99 PUSH1 0x0 DUP4 PUSH2 0x1F7E JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA4 DUP3 PUSH2 0x1F89 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBA DUP3 PUSH2 0x1F8C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF8 DUP2 PUSH2 0x1BB7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200A DUP4 DUP4 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2056 PUSH2 0x2051 DUP4 PUSH2 0x2016 JUMP JUMPDEST PUSH2 0x2023 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2069 DUP3 SLOAD PUSH2 0x2043 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2088 DUP3 PUSH2 0x1FC4 JUMP JUMPDEST PUSH2 0x2092 DUP2 DUP6 PUSH2 0x1FCF JUMP JUMPDEST SWAP4 POP PUSH2 0x209D DUP4 PUSH2 0x1FDA JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20D5 JUMPI PUSH2 0x20B2 DUP3 PUSH2 0x205D JUMP JUMPDEST PUSH2 0x20BC DUP9 DUP3 PUSH2 0x1FFE JUMP JUMPDEST SWAP8 POP PUSH2 0x20C7 DUP4 PUSH2 0x2070 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x20A1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EE DUP3 DUP5 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 RETURNDATACOPY 0xF7 BYTE SWAP7 0x21 0xA9 0xA5 STATICCALL 0xC3 0xB8 DIV PUSH23 0x196D3B2435B11EA6297707C386F5AF2E0136E64736F6C PUSH4 0x43000809 STOP CALLER ","sourceMap":"749:9991:5:-:0;;;2193:646;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2439:16;5616:15:2;5599:32;;;;;;;;;;5556:80;2544:11:5::1;2529:26;;;;::::0;::::1;2607:16;2565:59;;;;;;;;::::0;::::1;2646:7;2634:19;;;;::::0;::::1;2682:14;2663:33;;;;;;;;::::0;::::1;2727:16;2706:37;;;;;;;;::::0;::::1;2771:18;2753:15;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2817:15;2799;:33;;;;2193:646:::0;;;;;749:9991;;88:117:6;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:77::-;1242:7;1271:5;1260:16;;1205:77;;;:::o;1288:122::-;1361:24;1379:5;1361:24;:::i;:::-;1354:5;1351:35;1341:63;;1400:1;1397;1390:12;1341:63;1288:122;:::o;1416:143::-;1473:5;1504:6;1498:13;1489:22;;1520:33;1547:5;1520:33;:::i;:::-;1416:143;;;;:::o;1565:101::-;1601:7;1641:18;1634:5;1630:30;1619:41;;1565:101;;;:::o;1672:120::-;1744:23;1761:5;1744:23;:::i;:::-;1737:5;1734:34;1724:62;;1782:1;1779;1772:12;1724:62;1672:120;:::o;1798:141::-;1854:5;1885:6;1879:13;1870:22;;1901:32;1927:5;1901:32;:::i;:::-;1798:141;;;;:::o;1945:93::-;1981:7;2021:10;2014:5;2010:22;1999:33;;1945:93;;;:::o;2044:120::-;2116:23;2133:5;2116:23;:::i;:::-;2109:5;2106:34;2096:62;;2154:1;2151;2144:12;2096:62;2044:120;:::o;2170:141::-;2226:5;2257:6;2251:13;2242:22;;2273:32;2299:5;2273:32;:::i;:::-;2170:141;;;;:::o;2317:973::-;2421:6;2429;2437;2445;2453;2502:3;2490:9;2481:7;2477:23;2473:33;2470:120;;;2509:79;;:::i;:::-;2470:120;2629:1;2654:64;2710:7;2701:6;2690:9;2686:22;2654:64;:::i;:::-;2644:74;;2600:128;2767:2;2793:64;2849:7;2840:6;2829:9;2825:22;2793:64;:::i;:::-;2783:74;;2738:129;2906:2;2932:64;2988:7;2979:6;2968:9;2964:22;2932:64;:::i;:::-;2922:74;;2877:129;3045:2;3071:63;3126:7;3117:6;3106:9;3102:22;3071:63;:::i;:::-;3061:73;;3016:128;3183:3;3210:63;3265:7;3256:6;3245:9;3241:22;3210:63;:::i;:::-;3200:73;;3154:129;2317:973;;;;;;;;:::o;3296:180::-;3344:77;3341:1;3334:88;3441:4;3438:1;3431:15;3465:4;3462:1;3455:15;749:9991:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@checkUpkeep_521":{"entryPoint":3542,"id":521,"parameterSlots":1,"returnSlots":2},"@enterBlack_416":{"entryPoint":1891,"id":416,"parameterSlots":0,"returnSlots":0},"@enterGreen_453":{"entryPoint":3047,"id":453,"parameterSlots":0,"returnSlots":0},"@enterRed_379":{"entryPoint":1248,"id":379,"parameterSlots":0,"returnSlots":0},"@fulfillRandomWords_695":{"entryPoint":4053,"id":695,"parameterSlots":2,"returnSlots":0},"@getBlackPlayer_790":{"entryPoint":3776,"id":790,"parameterSlots":1,"returnSlots":1},"@getChanceArray_770":{"entryPoint":3486,"id":770,"parameterSlots":0,"returnSlots":1},"@getEntraceFee_778":{"entryPoint":3848,"id":778,"parameterSlots":0,"returnSlots":1},"@getGreenPlayer_814":{"entryPoint":1820,"id":814,"parameterSlots":1,"returnSlots":1},"@getInterval_899":{"entryPoint":3714,"id":899,"parameterSlots":0,"returnSlots":1},"@getLatestTimeStamp_875":{"entryPoint":2270,"id":875,"parameterSlots":0,"returnSlots":1},"@getNumWords_840":{"entryPoint":3032,"id":840,"parameterSlots":0,"returnSlots":1},"@getNumberOfPlayersOfBlack_849":{"entryPoint":1615,"id":849,"parameterSlots":0,"returnSlots":1},"@getNumberOfPlayersOfGreen_867":{"entryPoint":3723,"id":867,"parameterSlots":0,"returnSlots":1},"@getNumberOfPlayersOfRed_858":{"entryPoint":2258,"id":858,"parameterSlots":0,"returnSlots":1},"@getRecentWinners_823":{"entryPoint":3911,"id":823,"parameterSlots":0,"returnSlots":1},"@getRedPlayer_802":{"entryPoint":3414,"id":802,"parameterSlots":1,"returnSlots":1},"@getRequestConfirmations_883":{"entryPoint":3529,"id":883,"parameterSlots":0,"returnSlots":1},"@getWinningBet_757":{"entryPoint":2806,"id":757,"parameterSlots":1,"returnSlots":1},"@getgasLane_891":{"entryPoint":3736,"id":891,"parameterSlots":0,"returnSlots":1},"@getroulletestate_832":{"entryPoint":3888,"id":832,"parameterSlots":0,"returnSlots":1},"@performUpkeep_576":{"entryPoint":2280,"id":576,"parameterSlots":2,"returnSlots":0},"@rawFulfillRandomWords_95":{"entryPoint":1628,"id":95,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5543,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6504,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5648,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":5928,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5328,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":7642,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":6014,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":6616,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5786,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":7663,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5694,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_address_payable_to_t_address_payable":{"entryPoint":7128,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_address_payable_to_t_address_payable_inplace":{"entryPoint":8190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":6284,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_payable_to_t_address_payable":{"entryPoint":7113,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_payable_to_t_address_payable_inplace":{"entryPoint":8175,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5881,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_payable_$dyn_memory_ptr_to_t_array$_t_address_payable_$dyn_memory_ptr_fromStack":{"entryPoint":7165,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_address_payable_$dyn_storage_to_t_array$_t_address_payable_$dyn_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8317,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":6321,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6701,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6910,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6795,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_Bets_$240_to_t_uint8_fromStack":{"entryPoint":6195,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_RoulleteState_$236_to_t_uint8_fromStack":{"entryPoint":7009,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8076,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":7513,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":6269,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5243,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":7544,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":7484,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_array$_t_address_payable_$dyn_storage__to_t_array$_t_address_payable_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8418,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8111,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5896,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":7293,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_payable_$dyn_memory_ptr__to_t_array$_t_address_payable_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed":{"entryPoint":6408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6852,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":6925,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":7559,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_enum$_Bets_$240__to_t_uint8__fromStack_reversed":{"entryPoint":6210,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_RoulleteState_$236__to_t_uint8__fromStack_reversed":{"entryPoint":7024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5258,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7381,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_memory":{"entryPoint":5467,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5285,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5494,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6440,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_payable_$dyn_memory_ptr":{"entryPoint":7079,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_payable_$dyn_storage":{"entryPoint":8154,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":6259,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_payable_$dyn_memory_ptr":{"entryPoint":7051,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_payable_$dyn_storage":{"entryPoint":8132,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":6237,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6716,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_payable_$dyn_memory_ptr":{"entryPoint":7152,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_payable_$dyn_storage":{"entryPoint":8304,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":6308,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_payable_$dyn_memory_ptr_fromStack":{"entryPoint":7062,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_payable_$dyn_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8143,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":6248,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":6727,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8062,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7755,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7914,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_from_storage_t_address_payable":{"entryPoint":8227,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":5863,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":7095,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6689,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6900,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Bets_$240":{"entryPoint":6158,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_RoulleteState_$236":{"entryPoint":6972,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":7499,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5831,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5233,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":7528,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":7464,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Bets_$240_to_t_uint8":{"entryPoint":6177,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_RoulleteState_$236_to_t_uint8":{"entryPoint":6991,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":6489,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":6744,"id":null,"parameterSlots":3,"returnSlots":0},"extract_from_storage_value_offset_0t_address_payable":{"entryPoint":8259,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5418,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":7841,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":8013,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7708,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7966,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":6091,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7334,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5371,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_offset_0_t_address_payable":{"entryPoint":8285,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5923,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5349,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5538,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6435,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5300,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5295,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5354,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":8214,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":8073,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Bets_$240":{"entryPoint":6138,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_RoulleteState_$236":{"entryPoint":6952,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5305,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24406:6","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:6","statements":[{"nodeType":"YulAssignment","src":"62:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:6"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:6","type":""}],"src":"7:77:6"},{"body":{"nodeType":"YulBlock","src":"155:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:6"},"nodeType":"YulFunctionCall","src":"177:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:6"},"nodeType":"YulFunctionCall","src":"165:37:6"},"nodeType":"YulExpressionStatement","src":"165:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:6","type":""}],"src":"90:118:6"},{"body":{"nodeType":"YulBlock","src":"312:124:6","statements":[{"nodeType":"YulAssignment","src":"322:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:6"},"nodeType":"YulFunctionCall","src":"330:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:6"},"nodeType":"YulFunctionCall","src":"411:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:6"},"nodeType":"YulFunctionCall","src":"358:71:6"},"nodeType":"YulExpressionStatement","src":"358:71:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:6","type":""}],"src":"214:222:6"},{"body":{"nodeType":"YulBlock","src":"482:35:6","statements":[{"nodeType":"YulAssignment","src":"492:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:6"},"nodeType":"YulFunctionCall","src":"502:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:6","type":""}],"src":"442:75:6"},{"body":{"nodeType":"YulBlock","src":"612:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:6"},"nodeType":"YulFunctionCall","src":"622:12:6"},"nodeType":"YulExpressionStatement","src":"622:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:6"},{"body":{"nodeType":"YulBlock","src":"735:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:6"},"nodeType":"YulFunctionCall","src":"745:12:6"},"nodeType":"YulExpressionStatement","src":"745:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:6"},{"body":{"nodeType":"YulBlock","src":"812:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"869:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"878:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"881:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"871:6:6"},"nodeType":"YulFunctionCall","src":"871:12:6"},"nodeType":"YulExpressionStatement","src":"871:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"835:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"860:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"842:17:6"},"nodeType":"YulFunctionCall","src":"842:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"832:2:6"},"nodeType":"YulFunctionCall","src":"832:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"825:6:6"},"nodeType":"YulFunctionCall","src":"825:43:6"},"nodeType":"YulIf","src":"822:63:6"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"805:5:6","type":""}],"src":"769:122:6"},{"body":{"nodeType":"YulBlock","src":"949:87:6","statements":[{"nodeType":"YulAssignment","src":"959:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"981:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"968:12:6"},"nodeType":"YulFunctionCall","src":"968:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1024:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"997:26:6"},"nodeType":"YulFunctionCall","src":"997:33:6"},"nodeType":"YulExpressionStatement","src":"997:33:6"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"927:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"935:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"943:5:6","type":""}],"src":"897:139:6"},{"body":{"nodeType":"YulBlock","src":"1131:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1148:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1151:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1141:6:6"},"nodeType":"YulFunctionCall","src":"1141:12:6"},"nodeType":"YulExpressionStatement","src":"1141:12:6"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1042:117:6"},{"body":{"nodeType":"YulBlock","src":"1213:54:6","statements":[{"nodeType":"YulAssignment","src":"1223:38:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1241:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"1248:2:6","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1237:3:6"},"nodeType":"YulFunctionCall","src":"1237:14:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1257:2:6","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1253:3:6"},"nodeType":"YulFunctionCall","src":"1253:7:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1233:3:6"},"nodeType":"YulFunctionCall","src":"1233:28:6"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1223:6:6"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1196:5:6","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1206:6:6","type":""}],"src":"1165:102:6"},{"body":{"nodeType":"YulBlock","src":"1301:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1318:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1321:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1311:6:6"},"nodeType":"YulFunctionCall","src":"1311:88:6"},"nodeType":"YulExpressionStatement","src":"1311:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1418:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1408:6:6"},"nodeType":"YulFunctionCall","src":"1408:15:6"},"nodeType":"YulExpressionStatement","src":"1408:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1439:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1442:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1432:6:6"},"nodeType":"YulFunctionCall","src":"1432:15:6"},"nodeType":"YulExpressionStatement","src":"1432:15:6"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1273:180:6"},{"body":{"nodeType":"YulBlock","src":"1502:238:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1512:58:6","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1534:6:6"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1564:4:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1542:21:6"},"nodeType":"YulFunctionCall","src":"1542:27:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1530:3:6"},"nodeType":"YulFunctionCall","src":"1530:40:6"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1516:10:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1681:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1683:16:6"},"nodeType":"YulFunctionCall","src":"1683:18:6"},"nodeType":"YulExpressionStatement","src":"1683:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1624:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"1636:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1621:2:6"},"nodeType":"YulFunctionCall","src":"1621:34:6"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1660:10:6"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1672:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1657:2:6"},"nodeType":"YulFunctionCall","src":"1657:22:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1618:2:6"},"nodeType":"YulFunctionCall","src":"1618:62:6"},"nodeType":"YulIf","src":"1615:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1719:2:6","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1723:10:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1712:6:6"},"nodeType":"YulFunctionCall","src":"1712:22:6"},"nodeType":"YulExpressionStatement","src":"1712:22:6"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1488:6:6","type":""},{"name":"size","nodeType":"YulTypedName","src":"1496:4:6","type":""}],"src":"1459:281:6"},{"body":{"nodeType":"YulBlock","src":"1787:88:6","statements":[{"nodeType":"YulAssignment","src":"1797:30:6","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1807:18:6"},"nodeType":"YulFunctionCall","src":"1807:20:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1797:6:6"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1856:6:6"},{"name":"size","nodeType":"YulIdentifier","src":"1864:4:6"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1836:19:6"},"nodeType":"YulFunctionCall","src":"1836:33:6"},"nodeType":"YulExpressionStatement","src":"1836:33:6"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1771:4:6","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1780:6:6","type":""}],"src":"1746:129:6"},{"body":{"nodeType":"YulBlock","src":"1963:229:6","statements":[{"body":{"nodeType":"YulBlock","src":"2068:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2070:16:6"},"nodeType":"YulFunctionCall","src":"2070:18:6"},"nodeType":"YulExpressionStatement","src":"2070:18:6"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2040:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2048:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2037:2:6"},"nodeType":"YulFunctionCall","src":"2037:30:6"},"nodeType":"YulIf","src":"2034:56:6"},{"nodeType":"YulAssignment","src":"2100:25:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2112:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2120:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2108:3:6"},"nodeType":"YulFunctionCall","src":"2108:17:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2100:4:6"}]},{"nodeType":"YulAssignment","src":"2162:23:6","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2174:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"2180:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2170:3:6"},"nodeType":"YulFunctionCall","src":"2170:15:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2162:4:6"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1947:6:6","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1958:4:6","type":""}],"src":"1881:311:6"},{"body":{"nodeType":"YulBlock","src":"2287:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2304:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2307:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2297:6:6"},"nodeType":"YulFunctionCall","src":"2297:12:6"},"nodeType":"YulExpressionStatement","src":"2297:12:6"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"2198:117:6"},{"body":{"nodeType":"YulBlock","src":"2440:608:6","statements":[{"nodeType":"YulAssignment","src":"2450:90:6","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2532:6:6"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2475:56:6"},"nodeType":"YulFunctionCall","src":"2475:64:6"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2459:15:6"},"nodeType":"YulFunctionCall","src":"2459:81:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2450:5:6"}]},{"nodeType":"YulVariableDeclaration","src":"2549:16:6","value":{"name":"array","nodeType":"YulIdentifier","src":"2560:5:6"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2553:3:6","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2582:5:6"},{"name":"length","nodeType":"YulIdentifier","src":"2589:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2575:6:6"},"nodeType":"YulFunctionCall","src":"2575:21:6"},"nodeType":"YulExpressionStatement","src":"2575:21:6"},{"nodeType":"YulAssignment","src":"2605:23:6","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2616:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"2623:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2612:3:6"},"nodeType":"YulFunctionCall","src":"2612:16:6"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2605:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"2638:44:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2656:6:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2668:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2676:4:6","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2664:3:6"},"nodeType":"YulFunctionCall","src":"2664:17:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2652:3:6"},"nodeType":"YulFunctionCall","src":"2652:30:6"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"2642:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"2710:103:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2724:77:6"},"nodeType":"YulFunctionCall","src":"2724:79:6"},"nodeType":"YulExpressionStatement","src":"2724:79:6"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"2697:6:6"},{"name":"end","nodeType":"YulIdentifier","src":"2705:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2694:2:6"},"nodeType":"YulFunctionCall","src":"2694:15:6"},"nodeType":"YulIf","src":"2691:122:6"},{"body":{"nodeType":"YulBlock","src":"2898:144:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2913:21:6","value":{"name":"src","nodeType":"YulIdentifier","src":"2931:3:6"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"2917:10:6","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2955:3:6"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"2981:10:6"},{"name":"end","nodeType":"YulIdentifier","src":"2993:3:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2960:20:6"},"nodeType":"YulFunctionCall","src":"2960:37:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2948:6:6"},"nodeType":"YulFunctionCall","src":"2948:50:6"},"nodeType":"YulExpressionStatement","src":"2948:50:6"},{"nodeType":"YulAssignment","src":"3011:21:6","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3022:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"3027:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3018:3:6"},"nodeType":"YulFunctionCall","src":"3018:14:6"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3011:3:6"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2851:3:6"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"2856:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2848:2:6"},"nodeType":"YulFunctionCall","src":"2848:15:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2864:25:6","statements":[{"nodeType":"YulAssignment","src":"2866:21:6","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2877:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"2882:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2873:3:6"},"nodeType":"YulFunctionCall","src":"2873:14:6"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2866:3:6"}]}]},"pre":{"nodeType":"YulBlock","src":"2826:21:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2828:17:6","value":{"name":"offset","nodeType":"YulIdentifier","src":"2839:6:6"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2832:3:6","type":""}]}]},"src":"2822:220:6"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2410:6:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"2418:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"2426:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2434:5:6","type":""}],"src":"2338:710:6"},{"body":{"nodeType":"YulBlock","src":"3148:293:6","statements":[{"body":{"nodeType":"YulBlock","src":"3197:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3199:77:6"},"nodeType":"YulFunctionCall","src":"3199:79:6"},"nodeType":"YulExpressionStatement","src":"3199:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3176:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3184:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3172:3:6"},"nodeType":"YulFunctionCall","src":"3172:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"3191:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3168:3:6"},"nodeType":"YulFunctionCall","src":"3168:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3161:6:6"},"nodeType":"YulFunctionCall","src":"3161:35:6"},"nodeType":"YulIf","src":"3158:122:6"},{"nodeType":"YulVariableDeclaration","src":"3289:34:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3316:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3303:12:6"},"nodeType":"YulFunctionCall","src":"3303:20:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3293:6:6","type":""}]},{"nodeType":"YulAssignment","src":"3332:103:6","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3408:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3416:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3404:3:6"},"nodeType":"YulFunctionCall","src":"3404:17:6"},{"name":"length","nodeType":"YulIdentifier","src":"3423:6:6"},{"name":"end","nodeType":"YulIdentifier","src":"3431:3:6"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3341:62:6"},"nodeType":"YulFunctionCall","src":"3341:94:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3332:5:6"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3126:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"3134:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3142:5:6","type":""}],"src":"3071:370:6"},{"body":{"nodeType":"YulBlock","src":"3555:576:6","statements":[{"body":{"nodeType":"YulBlock","src":"3601:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3603:77:6"},"nodeType":"YulFunctionCall","src":"3603:79:6"},"nodeType":"YulExpressionStatement","src":"3603:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3576:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"3585:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3572:3:6"},"nodeType":"YulFunctionCall","src":"3572:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"3597:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3568:3:6"},"nodeType":"YulFunctionCall","src":"3568:32:6"},"nodeType":"YulIf","src":"3565:119:6"},{"nodeType":"YulBlock","src":"3694:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3709:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"3723:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3713:6:6","type":""}]},{"nodeType":"YulAssignment","src":"3738:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3773:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"3784:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3769:3:6"},"nodeType":"YulFunctionCall","src":"3769:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3793:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3748:20:6"},"nodeType":"YulFunctionCall","src":"3748:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3738:6:6"}]}]},{"nodeType":"YulBlock","src":"3821:303:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3836:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3867:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3878:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3863:3:6"},"nodeType":"YulFunctionCall","src":"3863:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3850:12:6"},"nodeType":"YulFunctionCall","src":"3850:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3840:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"3929:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3931:77:6"},"nodeType":"YulFunctionCall","src":"3931:79:6"},"nodeType":"YulExpressionStatement","src":"3931:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3901:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3909:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3898:2:6"},"nodeType":"YulFunctionCall","src":"3898:30:6"},"nodeType":"YulIf","src":"3895:117:6"},{"nodeType":"YulAssignment","src":"4026:88:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4086:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"4097:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4082:3:6"},"nodeType":"YulFunctionCall","src":"4082:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4106:7:6"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4036:45:6"},"nodeType":"YulFunctionCall","src":"4036:78:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4026:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3517:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3528:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3540:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3548:6:6","type":""}],"src":"3447:684:6"},{"body":{"nodeType":"YulBlock","src":"4203:263:6","statements":[{"body":{"nodeType":"YulBlock","src":"4249:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4251:77:6"},"nodeType":"YulFunctionCall","src":"4251:79:6"},"nodeType":"YulExpressionStatement","src":"4251:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4224:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"4233:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4220:3:6"},"nodeType":"YulFunctionCall","src":"4220:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"4245:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4216:3:6"},"nodeType":"YulFunctionCall","src":"4216:32:6"},"nodeType":"YulIf","src":"4213:119:6"},{"nodeType":"YulBlock","src":"4342:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"4357:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4371:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4361:6:6","type":""}]},{"nodeType":"YulAssignment","src":"4386:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4421:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"4432:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4417:3:6"},"nodeType":"YulFunctionCall","src":"4417:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4441:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4396:20:6"},"nodeType":"YulFunctionCall","src":"4396:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4386:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4173:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4184:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4196:6:6","type":""}],"src":"4137:329:6"},{"body":{"nodeType":"YulBlock","src":"4517:81:6","statements":[{"nodeType":"YulAssignment","src":"4527:65:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4542:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"4549:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4538:3:6"},"nodeType":"YulFunctionCall","src":"4538:54:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4527:7:6"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4499:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4509:7:6","type":""}],"src":"4472:126:6"},{"body":{"nodeType":"YulBlock","src":"4649:51:6","statements":[{"nodeType":"YulAssignment","src":"4659:35:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4688:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4670:17:6"},"nodeType":"YulFunctionCall","src":"4670:24:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4659:7:6"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4631:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4641:7:6","type":""}],"src":"4604:96:6"},{"body":{"nodeType":"YulBlock","src":"4771:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4788:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4811:5:6"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4793:17:6"},"nodeType":"YulFunctionCall","src":"4793:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4781:6:6"},"nodeType":"YulFunctionCall","src":"4781:37:6"},"nodeType":"YulExpressionStatement","src":"4781:37:6"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4759:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4766:3:6","type":""}],"src":"4706:118:6"},{"body":{"nodeType":"YulBlock","src":"4928:124:6","statements":[{"nodeType":"YulAssignment","src":"4938:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4950:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4946:3:6"},"nodeType":"YulFunctionCall","src":"4946:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4938:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5018:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5031:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5042:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5027:3:6"},"nodeType":"YulFunctionCall","src":"5027:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4974:43:6"},"nodeType":"YulFunctionCall","src":"4974:71:6"},"nodeType":"YulExpressionStatement","src":"4974:71:6"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4900:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4912:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4923:4:6","type":""}],"src":"4830:222:6"},{"body":{"nodeType":"YulBlock","src":"5147:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5164:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5167:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5157:6:6"},"nodeType":"YulFunctionCall","src":"5157:12:6"},"nodeType":"YulExpressionStatement","src":"5157:12:6"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"5058:117:6"},{"body":{"nodeType":"YulBlock","src":"5268:478:6","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5319:77:6"},"nodeType":"YulFunctionCall","src":"5319:79:6"},"nodeType":"YulExpressionStatement","src":"5319:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5296:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"5304:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5292:3:6"},"nodeType":"YulFunctionCall","src":"5292:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"5311:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5288:3:6"},"nodeType":"YulFunctionCall","src":"5288:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5281:6:6"},"nodeType":"YulFunctionCall","src":"5281:35:6"},"nodeType":"YulIf","src":"5278:122:6"},{"nodeType":"YulAssignment","src":"5409:30:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5432:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5419:12:6"},"nodeType":"YulFunctionCall","src":"5419:20:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5409:6:6"}]},{"body":{"nodeType":"YulBlock","src":"5482:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"5484:77:6"},"nodeType":"YulFunctionCall","src":"5484:79:6"},"nodeType":"YulExpressionStatement","src":"5484:79:6"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5454:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"5462:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5451:2:6"},"nodeType":"YulFunctionCall","src":"5451:30:6"},"nodeType":"YulIf","src":"5448:117:6"},{"nodeType":"YulAssignment","src":"5574:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5590:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"5598:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5586:3:6"},"nodeType":"YulFunctionCall","src":"5586:17:6"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"5574:8:6"}]},{"body":{"nodeType":"YulBlock","src":"5657:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5659:77:6"},"nodeType":"YulFunctionCall","src":"5659:79:6"},"nodeType":"YulExpressionStatement","src":"5659:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"5622:8:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5636:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"5644:4:6","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5632:3:6"},"nodeType":"YulFunctionCall","src":"5632:17:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5618:3:6"},"nodeType":"YulFunctionCall","src":"5618:32:6"},{"name":"end","nodeType":"YulIdentifier","src":"5652:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5615:2:6"},"nodeType":"YulFunctionCall","src":"5615:41:6"},"nodeType":"YulIf","src":"5612:128:6"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5235:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"5243:3:6","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"5251:8:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"5261:6:6","type":""}],"src":"5194:552:6"},{"body":{"nodeType":"YulBlock","src":"5837:442:6","statements":[{"body":{"nodeType":"YulBlock","src":"5883:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5885:77:6"},"nodeType":"YulFunctionCall","src":"5885:79:6"},"nodeType":"YulExpressionStatement","src":"5885:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5858:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"5867:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5854:3:6"},"nodeType":"YulFunctionCall","src":"5854:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"5879:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5850:3:6"},"nodeType":"YulFunctionCall","src":"5850:32:6"},"nodeType":"YulIf","src":"5847:119:6"},{"nodeType":"YulBlock","src":"5976:296:6","statements":[{"nodeType":"YulVariableDeclaration","src":"5991:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6022:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6033:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6018:3:6"},"nodeType":"YulFunctionCall","src":"6018:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6005:12:6"},"nodeType":"YulFunctionCall","src":"6005:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5995:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"6083:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6085:77:6"},"nodeType":"YulFunctionCall","src":"6085:79:6"},"nodeType":"YulExpressionStatement","src":"6085:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6055:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"6063:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6052:2:6"},"nodeType":"YulFunctionCall","src":"6052:30:6"},"nodeType":"YulIf","src":"6049:117:6"},{"nodeType":"YulAssignment","src":"6180:82:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6234:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"6245:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6230:3:6"},"nodeType":"YulFunctionCall","src":"6230:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6254:7:6"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"6198:31:6"},"nodeType":"YulFunctionCall","src":"6198:64:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6180:6:6"},{"name":"value1","nodeType":"YulIdentifier","src":"6188:6:6"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5799:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5810:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5822:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5830:6:6","type":""}],"src":"5752:527:6"},{"body":{"nodeType":"YulBlock","src":"6313:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6330:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6333:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6323:6:6"},"nodeType":"YulFunctionCall","src":"6323:88:6"},"nodeType":"YulExpressionStatement","src":"6323:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6427:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6430:4:6","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6420:6:6"},"nodeType":"YulFunctionCall","src":"6420:15:6"},"nodeType":"YulExpressionStatement","src":"6420:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6451:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6454:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6444:6:6"},"nodeType":"YulFunctionCall","src":"6444:15:6"},"nodeType":"YulExpressionStatement","src":"6444:15:6"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"6285:180:6"},{"body":{"nodeType":"YulBlock","src":"6522:62:6","statements":[{"body":{"nodeType":"YulBlock","src":"6556:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"6558:16:6"},"nodeType":"YulFunctionCall","src":"6558:18:6"},"nodeType":"YulExpressionStatement","src":"6558:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6545:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"6552:1:6","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6542:2:6"},"nodeType":"YulFunctionCall","src":"6542:12:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6535:6:6"},"nodeType":"YulFunctionCall","src":"6535:20:6"},"nodeType":"YulIf","src":"6532:46:6"}]},"name":"validator_assert_t_enum$_Bets_$240","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6515:5:6","type":""}],"src":"6471:113:6"},{"body":{"nodeType":"YulBlock","src":"6643:74:6","statements":[{"nodeType":"YulAssignment","src":"6653:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"6664:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6653:7:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6705:5:6"}],"functionName":{"name":"validator_assert_t_enum$_Bets_$240","nodeType":"YulIdentifier","src":"6670:34:6"},"nodeType":"YulFunctionCall","src":"6670:41:6"},"nodeType":"YulExpressionStatement","src":"6670:41:6"}]},"name":"cleanup_t_enum$_Bets_$240","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6625:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6635:7:6","type":""}],"src":"6590:127:6"},{"body":{"nodeType":"YulBlock","src":"6789:61:6","statements":[{"nodeType":"YulAssignment","src":"6799:45:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6838:5:6"}],"functionName":{"name":"cleanup_t_enum$_Bets_$240","nodeType":"YulIdentifier","src":"6812:25:6"},"nodeType":"YulFunctionCall","src":"6812:32:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6799:9:6"}]}]},"name":"convert_t_enum$_Bets_$240_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6769:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6779:9:6","type":""}],"src":"6723:127:6"},{"body":{"nodeType":"YulBlock","src":"6927:72:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6944:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6986:5:6"}],"functionName":{"name":"convert_t_enum$_Bets_$240_to_t_uint8","nodeType":"YulIdentifier","src":"6949:36:6"},"nodeType":"YulFunctionCall","src":"6949:43:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6937:6:6"},"nodeType":"YulFunctionCall","src":"6937:56:6"},"nodeType":"YulExpressionStatement","src":"6937:56:6"}]},"name":"abi_encode_t_enum$_Bets_$240_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6915:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6922:3:6","type":""}],"src":"6856:143:6"},{"body":{"nodeType":"YulBlock","src":"7109:130:6","statements":[{"nodeType":"YulAssignment","src":"7119:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7131:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7142:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7127:3:6"},"nodeType":"YulFunctionCall","src":"7127:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7119:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7205:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7218:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7229:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7214:3:6"},"nodeType":"YulFunctionCall","src":"7214:17:6"}],"functionName":{"name":"abi_encode_t_enum$_Bets_$240_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"7155:49:6"},"nodeType":"YulFunctionCall","src":"7155:77:6"},"nodeType":"YulExpressionStatement","src":"7155:77:6"}]},"name":"abi_encode_tuple_t_enum$_Bets_$240__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7081:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7093:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7104:4:6","type":""}],"src":"7005:234:6"},{"body":{"nodeType":"YulBlock","src":"7317:32:6","statements":[{"nodeType":"YulAssignment","src":"7328:14:6","value":{"kind":"number","nodeType":"YulLiteral","src":"7338:4:6","type":"","value":"0x03"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7328:6:6"}]}]},"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7300:5:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7310:6:6","type":""}],"src":"7245:104:6"},{"body":{"nodeType":"YulBlock","src":"7464:34:6","statements":[{"nodeType":"YulAssignment","src":"7474:18:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"7489:3:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7474:11:6"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7436:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"7441:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7452:11:6","type":""}],"src":"7355:143:6"},{"body":{"nodeType":"YulBlock","src":"7574:28:6","statements":[{"nodeType":"YulAssignment","src":"7584:11:6","value":{"name":"ptr","nodeType":"YulIdentifier","src":"7592:3:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7584:4:6"}]}]},"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7561:3:6","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7569:4:6","type":""}],"src":"7504:98:6"},{"body":{"nodeType":"YulBlock","src":"7663:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7680:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7703:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7685:17:6"},"nodeType":"YulFunctionCall","src":"7685:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7673:6:6"},"nodeType":"YulFunctionCall","src":"7673:37:6"},"nodeType":"YulExpressionStatement","src":"7673:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7651:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7658:3:6","type":""}],"src":"7608:108:6"},{"body":{"nodeType":"YulBlock","src":"7802:99:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7846:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"7854:3:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7812:33:6"},"nodeType":"YulFunctionCall","src":"7812:46:6"},"nodeType":"YulExpressionStatement","src":"7812:46:6"},{"nodeType":"YulAssignment","src":"7867:28:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7885:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"7890:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7881:3:6"},"nodeType":"YulFunctionCall","src":"7881:14:6"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"7867:10:6"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"7775:6:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7783:3:6","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"7791:10:6","type":""}],"src":"7722:179:6"},{"body":{"nodeType":"YulBlock","src":"7980:38:6","statements":[{"nodeType":"YulAssignment","src":"7990:22:6","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8002:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"8007:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7998:3:6"},"nodeType":"YulFunctionCall","src":"7998:14:6"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"7990:4:6"}]}]},"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7967:3:6","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"7975:4:6","type":""}],"src":"7907:111:6"},{"body":{"nodeType":"YulBlock","src":"8168:582:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8178:66:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8238:5:6"}],"functionName":{"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"8192:45:6"},"nodeType":"YulFunctionCall","src":"8192:52:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8182:6:6","type":""}]},{"nodeType":"YulAssignment","src":"8253:91:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8332:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"8337:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8260:71:6"},"nodeType":"YulFunctionCall","src":"8260:84:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8253:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"8353:69:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8416:5:6"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"8368:47:6"},"nodeType":"YulFunctionCall","src":"8368:54:6"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"8357:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8431:21:6","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"8445:7:6"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"8435:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"8521:222:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8535:34:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8562:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8556:5:6"},"nodeType":"YulFunctionCall","src":"8556:13:6"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"8539:13:6","type":""}]},{"nodeType":"YulAssignment","src":"8582:70:6","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"8633:13:6"},{"name":"pos","nodeType":"YulIdentifier","src":"8648:3:6"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8589:43:6"},"nodeType":"YulFunctionCall","src":"8589:63:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8582:3:6"}]},{"nodeType":"YulAssignment","src":"8665:68:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8726:6:6"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"8675:50:6"},"nodeType":"YulFunctionCall","src":"8675:58:6"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8665:6:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8483:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"8486:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8480:2:6"},"nodeType":"YulFunctionCall","src":"8480:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8494:18:6","statements":[{"nodeType":"YulAssignment","src":"8496:14:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8505:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"8508:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8501:3:6"},"nodeType":"YulFunctionCall","src":"8501:9:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8496:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"8465:14:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8467:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"8476:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8471:1:6","type":""}]}]},"src":"8461:282:6"}]},"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8155:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8162:3:6","type":""}],"src":"8056:694:6"},{"body":{"nodeType":"YulBlock","src":"8900:170:6","statements":[{"nodeType":"YulAssignment","src":"8910:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8922:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8933:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8918:3:6"},"nodeType":"YulFunctionCall","src":"8918:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8910:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9036:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9049:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9060:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9045:3:6"},"nodeType":"YulFunctionCall","src":"9045:17:6"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8946:89:6"},"nodeType":"YulFunctionCall","src":"8946:117:6"},"nodeType":"YulExpressionStatement","src":"8946:117:6"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8872:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8884:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8895:4:6","type":""}],"src":"8756:314:6"},{"body":{"nodeType":"YulBlock","src":"9165:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9182:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9185:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9175:6:6"},"nodeType":"YulFunctionCall","src":"9175:12:6"},"nodeType":"YulExpressionStatement","src":"9175:12:6"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"9076:117:6"},{"body":{"nodeType":"YulBlock","src":"9265:241:6","statements":[{"body":{"nodeType":"YulBlock","src":"9370:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9372:16:6"},"nodeType":"YulFunctionCall","src":"9372:18:6"},"nodeType":"YulExpressionStatement","src":"9372:18:6"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9342:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"9350:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9339:2:6"},"nodeType":"YulFunctionCall","src":"9339:30:6"},"nodeType":"YulIf","src":"9336:56:6"},{"nodeType":"YulAssignment","src":"9402:37:6","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9432:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9410:21:6"},"nodeType":"YulFunctionCall","src":"9410:29:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9402:4:6"}]},{"nodeType":"YulAssignment","src":"9476:23:6","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9488:4:6"},{"kind":"number","nodeType":"YulLiteral","src":"9494:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9484:3:6"},"nodeType":"YulFunctionCall","src":"9484:15:6"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9476:4:6"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9249:6:6","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9260:4:6","type":""}],"src":"9199:307:6"},{"body":{"nodeType":"YulBlock","src":"9563:103:6","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9586:3:6"},{"name":"src","nodeType":"YulIdentifier","src":"9591:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"9596:6:6"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9573:12:6"},"nodeType":"YulFunctionCall","src":"9573:30:6"},"nodeType":"YulExpressionStatement","src":"9573:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9644:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"9649:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9640:3:6"},"nodeType":"YulFunctionCall","src":"9640:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"9658:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9633:6:6"},"nodeType":"YulFunctionCall","src":"9633:27:6"},"nodeType":"YulExpressionStatement","src":"9633:27:6"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9545:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9550:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"9555:6:6","type":""}],"src":"9512:154:6"},{"body":{"nodeType":"YulBlock","src":"9755:327:6","statements":[{"nodeType":"YulAssignment","src":"9765:74:6","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9831:6:6"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9790:40:6"},"nodeType":"YulFunctionCall","src":"9790:48:6"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"9774:15:6"},"nodeType":"YulFunctionCall","src":"9774:65:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9765:5:6"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9855:5:6"},{"name":"length","nodeType":"YulIdentifier","src":"9862:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9848:6:6"},"nodeType":"YulFunctionCall","src":"9848:21:6"},"nodeType":"YulExpressionStatement","src":"9848:21:6"},{"nodeType":"YulVariableDeclaration","src":"9878:27:6","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9893:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"9900:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9889:3:6"},"nodeType":"YulFunctionCall","src":"9889:16:6"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9882:3:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"9943:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"9945:77:6"},"nodeType":"YulFunctionCall","src":"9945:79:6"},"nodeType":"YulExpressionStatement","src":"9945:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9924:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"9929:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9920:3:6"},"nodeType":"YulFunctionCall","src":"9920:16:6"},{"name":"end","nodeType":"YulIdentifier","src":"9938:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9917:2:6"},"nodeType":"YulFunctionCall","src":"9917:25:6"},"nodeType":"YulIf","src":"9914:112:6"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10059:3:6"},{"name":"dst","nodeType":"YulIdentifier","src":"10064:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"10069:6:6"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"10035:23:6"},"nodeType":"YulFunctionCall","src":"10035:41:6"},"nodeType":"YulExpressionStatement","src":"10035:41:6"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9728:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"9733:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"9741:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9749:5:6","type":""}],"src":"9672:410:6"},{"body":{"nodeType":"YulBlock","src":"10162:277:6","statements":[{"body":{"nodeType":"YulBlock","src":"10211:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"10213:77:6"},"nodeType":"YulFunctionCall","src":"10213:79:6"},"nodeType":"YulExpressionStatement","src":"10213:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10190:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"10198:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10186:3:6"},"nodeType":"YulFunctionCall","src":"10186:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"10205:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10182:3:6"},"nodeType":"YulFunctionCall","src":"10182:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10175:6:6"},"nodeType":"YulFunctionCall","src":"10175:35:6"},"nodeType":"YulIf","src":"10172:122:6"},{"nodeType":"YulVariableDeclaration","src":"10303:34:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10330:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10317:12:6"},"nodeType":"YulFunctionCall","src":"10317:20:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10307:6:6","type":""}]},{"nodeType":"YulAssignment","src":"10346:87:6","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10406:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"10414:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10402:3:6"},"nodeType":"YulFunctionCall","src":"10402:17:6"},{"name":"length","nodeType":"YulIdentifier","src":"10421:6:6"},{"name":"end","nodeType":"YulIdentifier","src":"10429:3:6"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10355:46:6"},"nodeType":"YulFunctionCall","src":"10355:78:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10346:5:6"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10140:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"10148:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10156:5:6","type":""}],"src":"10101:338:6"},{"body":{"nodeType":"YulBlock","src":"10520:432:6","statements":[{"body":{"nodeType":"YulBlock","src":"10566:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10568:77:6"},"nodeType":"YulFunctionCall","src":"10568:79:6"},"nodeType":"YulExpressionStatement","src":"10568:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10541:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"10550:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10537:3:6"},"nodeType":"YulFunctionCall","src":"10537:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"10562:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10533:3:6"},"nodeType":"YulFunctionCall","src":"10533:32:6"},"nodeType":"YulIf","src":"10530:119:6"},{"nodeType":"YulBlock","src":"10659:286:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10674:45:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10705:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"10716:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10701:3:6"},"nodeType":"YulFunctionCall","src":"10701:17:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10688:12:6"},"nodeType":"YulFunctionCall","src":"10688:31:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10678:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"10766:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10768:77:6"},"nodeType":"YulFunctionCall","src":"10768:79:6"},"nodeType":"YulExpressionStatement","src":"10768:79:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10738:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"10746:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10735:2:6"},"nodeType":"YulFunctionCall","src":"10735:30:6"},"nodeType":"YulIf","src":"10732:117:6"},{"nodeType":"YulAssignment","src":"10863:72:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10907:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"10918:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10903:3:6"},"nodeType":"YulFunctionCall","src":"10903:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10927:7:6"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10873:29:6"},"nodeType":"YulFunctionCall","src":"10873:62:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10863:6:6"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10490:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10501:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10513:6:6","type":""}],"src":"10445:507:6"},{"body":{"nodeType":"YulBlock","src":"11000:48:6","statements":[{"nodeType":"YulAssignment","src":"11010:32:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11035:5:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11028:6:6"},"nodeType":"YulFunctionCall","src":"11028:13:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11021:6:6"},"nodeType":"YulFunctionCall","src":"11021:21:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11010:7:6"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10982:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10992:7:6","type":""}],"src":"10958:90:6"},{"body":{"nodeType":"YulBlock","src":"11113:50:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11130:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11150:5:6"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"11135:14:6"},"nodeType":"YulFunctionCall","src":"11135:21:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11123:6:6"},"nodeType":"YulFunctionCall","src":"11123:34:6"},"nodeType":"YulExpressionStatement","src":"11123:34:6"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11101:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11108:3:6","type":""}],"src":"11054:109:6"},{"body":{"nodeType":"YulBlock","src":"11227:40:6","statements":[{"nodeType":"YulAssignment","src":"11238:22:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11254:5:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11248:5:6"},"nodeType":"YulFunctionCall","src":"11248:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11238:6:6"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11210:5:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11220:6:6","type":""}],"src":"11169:98:6"},{"body":{"nodeType":"YulBlock","src":"11368:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11385:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"11390:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11378:6:6"},"nodeType":"YulFunctionCall","src":"11378:19:6"},"nodeType":"YulExpressionStatement","src":"11378:19:6"},{"nodeType":"YulAssignment","src":"11406:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11425:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"11430:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11421:3:6"},"nodeType":"YulFunctionCall","src":"11421:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11406:11:6"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11340:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"11345:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11356:11:6","type":""}],"src":"11273:168:6"},{"body":{"nodeType":"YulBlock","src":"11496:258:6","statements":[{"nodeType":"YulVariableDeclaration","src":"11506:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"11515:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11510:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"11575:63:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11600:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"11605:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11596:3:6"},"nodeType":"YulFunctionCall","src":"11596:11:6"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11619:3:6"},{"name":"i","nodeType":"YulIdentifier","src":"11624:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11615:3:6"},"nodeType":"YulFunctionCall","src":"11615:11:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11609:5:6"},"nodeType":"YulFunctionCall","src":"11609:18:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11589:6:6"},"nodeType":"YulFunctionCall","src":"11589:39:6"},"nodeType":"YulExpressionStatement","src":"11589:39:6"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11536:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"11539:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11533:2:6"},"nodeType":"YulFunctionCall","src":"11533:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11547:19:6","statements":[{"nodeType":"YulAssignment","src":"11549:15:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11558:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"11561:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11554:3:6"},"nodeType":"YulFunctionCall","src":"11554:10:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11549:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"11529:3:6","statements":[]},"src":"11525:113:6"},{"body":{"nodeType":"YulBlock","src":"11672:76:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11722:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"11727:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11718:3:6"},"nodeType":"YulFunctionCall","src":"11718:16:6"},{"kind":"number","nodeType":"YulLiteral","src":"11736:1:6","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11711:6:6"},"nodeType":"YulFunctionCall","src":"11711:27:6"},"nodeType":"YulExpressionStatement","src":"11711:27:6"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11653:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"11656:6:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11650:2:6"},"nodeType":"YulFunctionCall","src":"11650:13:6"},"nodeType":"YulIf","src":"11647:101:6"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11478:3:6","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11483:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"11488:6:6","type":""}],"src":"11447:307:6"},{"body":{"nodeType":"YulBlock","src":"11850:270:6","statements":[{"nodeType":"YulVariableDeclaration","src":"11860:52:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11906:5:6"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11874:31:6"},"nodeType":"YulFunctionCall","src":"11874:38:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11864:6:6","type":""}]},{"nodeType":"YulAssignment","src":"11921:77:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11986:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"11991:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11928:57:6"},"nodeType":"YulFunctionCall","src":"11928:70:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11921:3:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12033:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"12040:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12029:3:6"},"nodeType":"YulFunctionCall","src":"12029:16:6"},{"name":"pos","nodeType":"YulIdentifier","src":"12047:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"12052:6:6"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"12007:21:6"},"nodeType":"YulFunctionCall","src":"12007:52:6"},"nodeType":"YulExpressionStatement","src":"12007:52:6"},{"nodeType":"YulAssignment","src":"12068:46:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12079:3:6"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12106:6:6"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12084:21:6"},"nodeType":"YulFunctionCall","src":"12084:29:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12075:3:6"},"nodeType":"YulFunctionCall","src":"12075:39:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12068:3:6"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11831:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11838:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11846:3:6","type":""}],"src":"11760:360:6"},{"body":{"nodeType":"YulBlock","src":"12264:269:6","statements":[{"nodeType":"YulAssignment","src":"12274:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12286:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"12297:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12282:3:6"},"nodeType":"YulFunctionCall","src":"12282:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12274:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12348:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12361:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"12372:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12357:3:6"},"nodeType":"YulFunctionCall","src":"12357:17:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"12310:37:6"},"nodeType":"YulFunctionCall","src":"12310:65:6"},"nodeType":"YulExpressionStatement","src":"12310:65:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12396:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"12407:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12392:3:6"},"nodeType":"YulFunctionCall","src":"12392:18:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12416:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"12422:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12412:3:6"},"nodeType":"YulFunctionCall","src":"12412:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12385:6:6"},"nodeType":"YulFunctionCall","src":"12385:48:6"},"nodeType":"YulExpressionStatement","src":"12385:48:6"},{"nodeType":"YulAssignment","src":"12442:84:6","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12512:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"12521:4:6"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12450:61:6"},"nodeType":"YulFunctionCall","src":"12450:76:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12442:4:6"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12228:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12240:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12248:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12259:4:6","type":""}],"src":"12126:407:6"},{"body":{"nodeType":"YulBlock","src":"12584:32:6","statements":[{"nodeType":"YulAssignment","src":"12594:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"12605:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12594:7:6"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12566:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12576:7:6","type":""}],"src":"12539:77:6"},{"body":{"nodeType":"YulBlock","src":"12687:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12704:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12727:5:6"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"12709:17:6"},"nodeType":"YulFunctionCall","src":"12709:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12697:6:6"},"nodeType":"YulFunctionCall","src":"12697:37:6"},"nodeType":"YulExpressionStatement","src":"12697:37:6"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12675:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12682:3:6","type":""}],"src":"12622:118:6"},{"body":{"nodeType":"YulBlock","src":"12844:124:6","statements":[{"nodeType":"YulAssignment","src":"12854:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12866:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"12877:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12862:3:6"},"nodeType":"YulFunctionCall","src":"12862:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12854:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12934:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12947:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"12958:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12943:3:6"},"nodeType":"YulFunctionCall","src":"12943:17:6"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12890:43:6"},"nodeType":"YulFunctionCall","src":"12890:71:6"},"nodeType":"YulExpressionStatement","src":"12890:71:6"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12816:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12828:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12839:4:6","type":""}],"src":"12746:222:6"},{"body":{"nodeType":"YulBlock","src":"13034:62:6","statements":[{"body":{"nodeType":"YulBlock","src":"13068:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"13070:16:6"},"nodeType":"YulFunctionCall","src":"13070:18:6"},"nodeType":"YulExpressionStatement","src":"13070:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13057:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"13064:1:6","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13054:2:6"},"nodeType":"YulFunctionCall","src":"13054:12:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13047:6:6"},"nodeType":"YulFunctionCall","src":"13047:20:6"},"nodeType":"YulIf","src":"13044:46:6"}]},"name":"validator_assert_t_enum$_RoulleteState_$236","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13027:5:6","type":""}],"src":"12974:122:6"},{"body":{"nodeType":"YulBlock","src":"13164:83:6","statements":[{"nodeType":"YulAssignment","src":"13174:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"13185:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13174:7:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13235:5:6"}],"functionName":{"name":"validator_assert_t_enum$_RoulleteState_$236","nodeType":"YulIdentifier","src":"13191:43:6"},"nodeType":"YulFunctionCall","src":"13191:50:6"},"nodeType":"YulExpressionStatement","src":"13191:50:6"}]},"name":"cleanup_t_enum$_RoulleteState_$236","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13146:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13156:7:6","type":""}],"src":"13102:145:6"},{"body":{"nodeType":"YulBlock","src":"13328:70:6","statements":[{"nodeType":"YulAssignment","src":"13338:54:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13386:5:6"}],"functionName":{"name":"cleanup_t_enum$_RoulleteState_$236","nodeType":"YulIdentifier","src":"13351:34:6"},"nodeType":"YulFunctionCall","src":"13351:41:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13338:9:6"}]}]},"name":"convert_t_enum$_RoulleteState_$236_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13308:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13318:9:6","type":""}],"src":"13253:145:6"},{"body":{"nodeType":"YulBlock","src":"13484:81:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13501:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13552:5:6"}],"functionName":{"name":"convert_t_enum$_RoulleteState_$236_to_t_uint8","nodeType":"YulIdentifier","src":"13506:45:6"},"nodeType":"YulFunctionCall","src":"13506:52:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:6"},"nodeType":"YulFunctionCall","src":"13494:65:6"},"nodeType":"YulExpressionStatement","src":"13494:65:6"}]},"name":"abi_encode_t_enum$_RoulleteState_$236_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13472:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13479:3:6","type":""}],"src":"13404:161:6"},{"body":{"nodeType":"YulBlock","src":"13684:139:6","statements":[{"nodeType":"YulAssignment","src":"13694:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13706:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"13717:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13702:3:6"},"nodeType":"YulFunctionCall","src":"13702:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13694:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13789:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13802:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"13813:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13798:3:6"},"nodeType":"YulFunctionCall","src":"13798:17:6"}],"functionName":{"name":"abi_encode_t_enum$_RoulleteState_$236_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"13730:58:6"},"nodeType":"YulFunctionCall","src":"13730:86:6"},"nodeType":"YulExpressionStatement","src":"13730:86:6"}]},"name":"abi_encode_tuple_t_enum$_RoulleteState_$236__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13656:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13668:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13679:4:6","type":""}],"src":"13571:252:6"},{"body":{"nodeType":"YulBlock","src":"13911:40:6","statements":[{"nodeType":"YulAssignment","src":"13922:22:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13938:5:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13932:5:6"},"nodeType":"YulFunctionCall","src":"13932:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13922:6:6"}]}]},"name":"array_length_t_array$_t_address_payable_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13894:5:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13904:6:6","type":""}],"src":"13829:122:6"},{"body":{"nodeType":"YulBlock","src":"14076:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14093:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"14098:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14086:6:6"},"nodeType":"YulFunctionCall","src":"14086:19:6"},"nodeType":"YulExpressionStatement","src":"14086:19:6"},{"nodeType":"YulAssignment","src":"14114:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14133:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"14138:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14129:3:6"},"nodeType":"YulFunctionCall","src":"14129:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14114:11:6"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_payable_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14048:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"14053:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14064:11:6","type":""}],"src":"13957:192:6"},{"body":{"nodeType":"YulBlock","src":"14235:60:6","statements":[{"nodeType":"YulAssignment","src":"14245:11:6","value":{"name":"ptr","nodeType":"YulIdentifier","src":"14253:3:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14245:4:6"}]},{"nodeType":"YulAssignment","src":"14266:22:6","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14278:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"14283:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14274:3:6"},"nodeType":"YulFunctionCall","src":"14274:14:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14266:4:6"}]}]},"name":"array_dataslot_t_array$_t_address_payable_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14222:3:6","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"14230:4:6","type":""}],"src":"14155:140:6"},{"body":{"nodeType":"YulBlock","src":"14354:51:6","statements":[{"nodeType":"YulAssignment","src":"14364:35:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14393:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"14375:17:6"},"nodeType":"YulFunctionCall","src":"14375:24:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"14364:7:6"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14336:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"14346:7:6","type":""}],"src":"14301:104:6"},{"body":{"nodeType":"YulBlock","src":"14482:61:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14499:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14530:5:6"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"14504:25:6"},"nodeType":"YulFunctionCall","src":"14504:32:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14492:6:6"},"nodeType":"YulFunctionCall","src":"14492:45:6"},"nodeType":"YulExpressionStatement","src":"14492:45:6"}]},"name":"abi_encode_t_address_payable_to_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14470:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14477:3:6","type":""}],"src":"14411:132:6"},{"body":{"nodeType":"YulBlock","src":"14645:115:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14705:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"14713:3:6"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable","nodeType":"YulIdentifier","src":"14655:49:6"},"nodeType":"YulFunctionCall","src":"14655:62:6"},"nodeType":"YulExpressionStatement","src":"14655:62:6"},{"nodeType":"YulAssignment","src":"14726:28:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14744:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"14749:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14740:3:6"},"nodeType":"YulFunctionCall","src":"14740:14:6"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"14726:10:6"}]}]},"name":"abi_encodeUpdatedPos_t_address_payable_to_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"14618:6:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14626:3:6","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"14634:10:6","type":""}],"src":"14549:211:6"},{"body":{"nodeType":"YulBlock","src":"14849:38:6","statements":[{"nodeType":"YulAssignment","src":"14859:22:6","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14871:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"14876:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14867:3:6"},"nodeType":"YulFunctionCall","src":"14867:14:6"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"14859:4:6"}]}]},"name":"array_nextElement_t_array$_t_address_payable_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14836:3:6","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"14844:4:6","type":""}],"src":"14766:121:6"},{"body":{"nodeType":"YulBlock","src":"15079:656:6","statements":[{"nodeType":"YulVariableDeclaration","src":"15089:76:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15159:5:6"}],"functionName":{"name":"array_length_t_array$_t_address_payable_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15103:55:6"},"nodeType":"YulFunctionCall","src":"15103:62:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15093:6:6","type":""}]},{"nodeType":"YulAssignment","src":"15174:101:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15263:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"15268:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_payable_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15181:81:6"},"nodeType":"YulFunctionCall","src":"15181:94:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15174:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"15284:79:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15357:5:6"}],"functionName":{"name":"array_dataslot_t_array$_t_address_payable_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15299:57:6"},"nodeType":"YulFunctionCall","src":"15299:64:6"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"15288:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15372:21:6","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"15386:7:6"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"15376:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"15462:248:6","statements":[{"nodeType":"YulVariableDeclaration","src":"15476:34:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15503:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15497:5:6"},"nodeType":"YulFunctionCall","src":"15497:13:6"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"15480:13:6","type":""}]},{"nodeType":"YulAssignment","src":"15523:86:6","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"15590:13:6"},{"name":"pos","nodeType":"YulIdentifier","src":"15605:3:6"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_payable_to_t_address_payable","nodeType":"YulIdentifier","src":"15530:59:6"},"nodeType":"YulFunctionCall","src":"15530:79:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15523:3:6"}]},{"nodeType":"YulAssignment","src":"15622:78:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15693:6:6"}],"functionName":{"name":"array_nextElement_t_array$_t_address_payable_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15632:60:6"},"nodeType":"YulFunctionCall","src":"15632:68:6"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15622:6:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15424:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"15427:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15421:2:6"},"nodeType":"YulFunctionCall","src":"15421:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15435:18:6","statements":[{"nodeType":"YulAssignment","src":"15437:14:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15446:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"15449:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15442:3:6"},"nodeType":"YulFunctionCall","src":"15442:9:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15437:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"15406:14:6","statements":[{"nodeType":"YulVariableDeclaration","src":"15408:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"15417:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15412:1:6","type":""}]}]},"src":"15402:308:6"},{"nodeType":"YulAssignment","src":"15719:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"15726:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15719:3:6"}]}]},"name":"abi_encode_t_array$_t_address_payable_$dyn_memory_ptr_to_t_array$_t_address_payable_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15058:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15065:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15074:3:6","type":""}],"src":"14939:796:6"},{"body":{"nodeType":"YulBlock","src":"15905:241:6","statements":[{"nodeType":"YulAssignment","src":"15915:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15927:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"15938:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15923:3:6"},"nodeType":"YulFunctionCall","src":"15923:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15915:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15962:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"15973:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15958:3:6"},"nodeType":"YulFunctionCall","src":"15958:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15981:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"15987:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15977:3:6"},"nodeType":"YulFunctionCall","src":"15977:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15951:6:6"},"nodeType":"YulFunctionCall","src":"15951:47:6"},"nodeType":"YulExpressionStatement","src":"15951:47:6"},{"nodeType":"YulAssignment","src":"16007:132:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16125:6:6"},{"name":"tail","nodeType":"YulIdentifier","src":"16134:4:6"}],"functionName":{"name":"abi_encode_t_array$_t_address_payable_$dyn_memory_ptr_to_t_array$_t_address_payable_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16015:109:6"},"nodeType":"YulFunctionCall","src":"16015:124:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16007:4:6"}]}]},"name":"abi_encode_tuple_t_array$_t_address_payable_$dyn_memory_ptr__to_t_array$_t_address_payable_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15877:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15889:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15900:4:6","type":""}],"src":"15741:405:6"},{"body":{"nodeType":"YulBlock","src":"16278:206:6","statements":[{"nodeType":"YulAssignment","src":"16288:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16300:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"16311:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16296:3:6"},"nodeType":"YulFunctionCall","src":"16296:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16288:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16368:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16381:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"16392:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16377:3:6"},"nodeType":"YulFunctionCall","src":"16377:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16324:43:6"},"nodeType":"YulFunctionCall","src":"16324:71:6"},"nodeType":"YulExpressionStatement","src":"16324:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16449:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16462:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"16473:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16458:3:6"},"nodeType":"YulFunctionCall","src":"16458:18:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16405:43:6"},"nodeType":"YulFunctionCall","src":"16405:72:6"},"nodeType":"YulExpressionStatement","src":"16405:72:6"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16242:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16254:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16262:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16273:4:6","type":""}],"src":"16152:332:6"},{"body":{"nodeType":"YulBlock","src":"16518:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16535:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16538:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16528:6:6"},"nodeType":"YulFunctionCall","src":"16528:88:6"},"nodeType":"YulExpressionStatement","src":"16528:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16632:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16635:4:6","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16625:6:6"},"nodeType":"YulFunctionCall","src":"16625:15:6"},"nodeType":"YulExpressionStatement","src":"16625:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16656:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16659:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16649:6:6"},"nodeType":"YulFunctionCall","src":"16649:15:6"},"nodeType":"YulExpressionStatement","src":"16649:15:6"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"16490:180:6"},{"body":{"nodeType":"YulBlock","src":"16886:454:6","statements":[{"nodeType":"YulAssignment","src":"16896:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16908:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"16919:3:6","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16904:3:6"},"nodeType":"YulFunctionCall","src":"16904:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16896:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16977:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16990:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"17001:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16986:3:6"},"nodeType":"YulFunctionCall","src":"16986:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16933:43:6"},"nodeType":"YulFunctionCall","src":"16933:71:6"},"nodeType":"YulExpressionStatement","src":"16933:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17058:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17071:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"17082:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17067:3:6"},"nodeType":"YulFunctionCall","src":"17067:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17014:43:6"},"nodeType":"YulFunctionCall","src":"17014:72:6"},"nodeType":"YulExpressionStatement","src":"17014:72:6"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17140:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17153:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"17164:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17149:3:6"},"nodeType":"YulFunctionCall","src":"17149:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17096:43:6"},"nodeType":"YulFunctionCall","src":"17096:72:6"},"nodeType":"YulExpressionStatement","src":"17096:72:6"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17222:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17235:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"17246:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17231:3:6"},"nodeType":"YulFunctionCall","src":"17231:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17178:43:6"},"nodeType":"YulFunctionCall","src":"17178:72:6"},"nodeType":"YulExpressionStatement","src":"17178:72:6"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"17304:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17317:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"17328:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17313:3:6"},"nodeType":"YulFunctionCall","src":"17313:19:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17260:43:6"},"nodeType":"YulFunctionCall","src":"17260:73:6"},"nodeType":"YulExpressionStatement","src":"17260:73:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16826:9:6","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16838:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16846:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16854:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16862:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16870:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16881:4:6","type":""}],"src":"16676:664:6"},{"body":{"nodeType":"YulBlock","src":"17390:57:6","statements":[{"nodeType":"YulAssignment","src":"17400:41:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17415:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"17422:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17411:3:6"},"nodeType":"YulFunctionCall","src":"17411:30:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17400:7:6"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17372:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17382:7:6","type":""}],"src":"17346:101:6"},{"body":{"nodeType":"YulBlock","src":"17516:52:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17533:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17555:5:6"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"17538:16:6"},"nodeType":"YulFunctionCall","src":"17538:23:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17526:6:6"},"nodeType":"YulFunctionCall","src":"17526:36:6"},"nodeType":"YulExpressionStatement","src":"17526:36:6"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17504:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17511:3:6","type":""}],"src":"17453:115:6"},{"body":{"nodeType":"YulBlock","src":"17618:45:6","statements":[{"nodeType":"YulAssignment","src":"17628:29:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17643:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"17650:6:6","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17639:3:6"},"nodeType":"YulFunctionCall","src":"17639:18:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17628:7:6"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17600:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17610:7:6","type":""}],"src":"17574:89:6"},{"body":{"nodeType":"YulBlock","src":"17732:52:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17749:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17771:5:6"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"17754:16:6"},"nodeType":"YulFunctionCall","src":"17754:23:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17742:6:6"},"nodeType":"YulFunctionCall","src":"17742:36:6"},"nodeType":"YulExpressionStatement","src":"17742:36:6"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17720:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17727:3:6","type":""}],"src":"17669:115:6"},{"body":{"nodeType":"YulBlock","src":"17834:49:6","statements":[{"nodeType":"YulAssignment","src":"17844:33:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17859:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"17866:10:6","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17855:3:6"},"nodeType":"YulFunctionCall","src":"17855:22:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17844:7:6"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17816:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17826:7:6","type":""}],"src":"17790:93:6"},{"body":{"nodeType":"YulBlock","src":"17952:52:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17969:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17991:5:6"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"17974:16:6"},"nodeType":"YulFunctionCall","src":"17974:23:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17962:6:6"},"nodeType":"YulFunctionCall","src":"17962:36:6"},"nodeType":"YulExpressionStatement","src":"17962:36:6"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17940:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17947:3:6","type":""}],"src":"17889:115:6"},{"body":{"nodeType":"YulBlock","src":"18212:446:6","statements":[{"nodeType":"YulAssignment","src":"18222:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18234:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"18245:3:6","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18230:3:6"},"nodeType":"YulFunctionCall","src":"18230:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18222:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18303:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18316:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"18327:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18312:3:6"},"nodeType":"YulFunctionCall","src":"18312:17:6"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"18259:43:6"},"nodeType":"YulFunctionCall","src":"18259:71:6"},"nodeType":"YulExpressionStatement","src":"18259:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18382:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18395:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"18406:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18391:3:6"},"nodeType":"YulFunctionCall","src":"18391:18:6"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"18340:41:6"},"nodeType":"YulFunctionCall","src":"18340:70:6"},"nodeType":"YulExpressionStatement","src":"18340:70:6"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18462:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18475:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"18486:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18471:3:6"},"nodeType":"YulFunctionCall","src":"18471:18:6"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"18420:41:6"},"nodeType":"YulFunctionCall","src":"18420:70:6"},"nodeType":"YulExpressionStatement","src":"18420:70:6"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18542:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18555:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"18566:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18551:3:6"},"nodeType":"YulFunctionCall","src":"18551:18:6"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"18500:41:6"},"nodeType":"YulFunctionCall","src":"18500:70:6"},"nodeType":"YulExpressionStatement","src":"18500:70:6"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"18622:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18635:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"18646:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18631:3:6"},"nodeType":"YulFunctionCall","src":"18631:19:6"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"18580:41:6"},"nodeType":"YulFunctionCall","src":"18580:71:6"},"nodeType":"YulExpressionStatement","src":"18580:71:6"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18152:9:6","type":""},{"name":"value4","nodeType":"YulTypedName","src":"18164:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18172:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18180:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18188:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18196:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18207:4:6","type":""}],"src":"18010:648:6"},{"body":{"nodeType":"YulBlock","src":"18727:80:6","statements":[{"nodeType":"YulAssignment","src":"18737:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18752:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18746:5:6"},"nodeType":"YulFunctionCall","src":"18746:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18737:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18795:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"18768:26:6"},"nodeType":"YulFunctionCall","src":"18768:33:6"},"nodeType":"YulExpressionStatement","src":"18768:33:6"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18705:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"18713:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18721:5:6","type":""}],"src":"18664:143:6"},{"body":{"nodeType":"YulBlock","src":"18890:274:6","statements":[{"body":{"nodeType":"YulBlock","src":"18936:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18938:77:6"},"nodeType":"YulFunctionCall","src":"18938:79:6"},"nodeType":"YulExpressionStatement","src":"18938:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18911:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"18920:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18907:3:6"},"nodeType":"YulFunctionCall","src":"18907:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"18932:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18903:3:6"},"nodeType":"YulFunctionCall","src":"18903:32:6"},"nodeType":"YulIf","src":"18900:119:6"},{"nodeType":"YulBlock","src":"19029:128:6","statements":[{"nodeType":"YulVariableDeclaration","src":"19044:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"19058:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19048:6:6","type":""}]},{"nodeType":"YulAssignment","src":"19073:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19119:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"19130:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19115:3:6"},"nodeType":"YulFunctionCall","src":"19115:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19139:7:6"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"19083:31:6"},"nodeType":"YulFunctionCall","src":"19083:64:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19073:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18860:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18871:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18883:6:6","type":""}],"src":"18813:351:6"},{"body":{"nodeType":"YulBlock","src":"19198:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19215:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19218:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19208:6:6"},"nodeType":"YulFunctionCall","src":"19208:88:6"},"nodeType":"YulExpressionStatement","src":"19208:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19312:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19315:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19305:6:6"},"nodeType":"YulFunctionCall","src":"19305:15:6"},"nodeType":"YulExpressionStatement","src":"19305:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19336:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19339:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19329:6:6"},"nodeType":"YulFunctionCall","src":"19329:15:6"},"nodeType":"YulExpressionStatement","src":"19329:15:6"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19170:180:6"},{"body":{"nodeType":"YulBlock","src":"19400:261:6","statements":[{"nodeType":"YulAssignment","src":"19410:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19433:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19415:17:6"},"nodeType":"YulFunctionCall","src":"19415:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19410:1:6"}]},{"nodeType":"YulAssignment","src":"19444:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19467:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19449:17:6"},"nodeType":"YulFunctionCall","src":"19449:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19444:1:6"}]},{"body":{"nodeType":"YulBlock","src":"19607:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19609:16:6"},"nodeType":"YulFunctionCall","src":"19609:18:6"},"nodeType":"YulExpressionStatement","src":"19609:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19528:1:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19535:66:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"19603:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19531:3:6"},"nodeType":"YulFunctionCall","src":"19531:74:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19525:2:6"},"nodeType":"YulFunctionCall","src":"19525:81:6"},"nodeType":"YulIf","src":"19522:107:6"},{"nodeType":"YulAssignment","src":"19639:16:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19650:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"19653:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19646:3:6"},"nodeType":"YulFunctionCall","src":"19646:9:6"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19639:3:6"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19387:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"19390:1:6","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19396:3:6","type":""}],"src":"19356:305:6"},{"body":{"nodeType":"YulBlock","src":"19710:190:6","statements":[{"nodeType":"YulAssignment","src":"19720:33:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19747:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19729:17:6"},"nodeType":"YulFunctionCall","src":"19729:24:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19720:5:6"}]},{"body":{"nodeType":"YulBlock","src":"19843:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19845:16:6"},"nodeType":"YulFunctionCall","src":"19845:18:6"},"nodeType":"YulExpressionStatement","src":"19845:18:6"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19768:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"19775:66:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19765:2:6"},"nodeType":"YulFunctionCall","src":"19765:77:6"},"nodeType":"YulIf","src":"19762:103:6"},{"nodeType":"YulAssignment","src":"19874:20:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19885:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"19892:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19881:3:6"},"nodeType":"YulFunctionCall","src":"19881:13:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19874:3:6"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19696:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19706:3:6","type":""}],"src":"19667:233:6"},{"body":{"nodeType":"YulBlock","src":"19951:146:6","statements":[{"nodeType":"YulAssignment","src":"19961:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19984:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19966:17:6"},"nodeType":"YulFunctionCall","src":"19966:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19961:1:6"}]},{"nodeType":"YulAssignment","src":"19995:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20018:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20000:17:6"},"nodeType":"YulFunctionCall","src":"20000:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19995:1:6"}]},{"body":{"nodeType":"YulBlock","src":"20042:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20044:16:6"},"nodeType":"YulFunctionCall","src":"20044:18:6"},"nodeType":"YulExpressionStatement","src":"20044:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20036:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"20039:1:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20033:2:6"},"nodeType":"YulFunctionCall","src":"20033:8:6"},"nodeType":"YulIf","src":"20030:34:6"},{"nodeType":"YulAssignment","src":"20074:17:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20086:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"20089:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20082:3:6"},"nodeType":"YulFunctionCall","src":"20082:9:6"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"20074:4:6"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19937:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"19940:1:6","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19946:4:6","type":""}],"src":"19906:191:6"},{"body":{"nodeType":"YulBlock","src":"20131:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20148:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20151:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20141:6:6"},"nodeType":"YulFunctionCall","src":"20141:88:6"},"nodeType":"YulExpressionStatement","src":"20141:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20245:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20248:4:6","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20238:6:6"},"nodeType":"YulFunctionCall","src":"20238:15:6"},"nodeType":"YulExpressionStatement","src":"20238:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20269:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20272:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20262:6:6"},"nodeType":"YulFunctionCall","src":"20262:15:6"},"nodeType":"YulExpressionStatement","src":"20262:15:6"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"20103:180:6"},{"body":{"nodeType":"YulBlock","src":"20323:142:6","statements":[{"nodeType":"YulAssignment","src":"20333:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20356:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20338:17:6"},"nodeType":"YulFunctionCall","src":"20338:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20333:1:6"}]},{"nodeType":"YulAssignment","src":"20367:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20390:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20372:17:6"},"nodeType":"YulFunctionCall","src":"20372:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20367:1:6"}]},{"body":{"nodeType":"YulBlock","src":"20414:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"20416:16:6"},"nodeType":"YulFunctionCall","src":"20416:18:6"},"nodeType":"YulExpressionStatement","src":"20416:18:6"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20411:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20404:6:6"},"nodeType":"YulFunctionCall","src":"20404:9:6"},"nodeType":"YulIf","src":"20401:35:6"},{"nodeType":"YulAssignment","src":"20445:14:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20454:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"20457:1:6"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"20450:3:6"},"nodeType":"YulFunctionCall","src":"20450:9:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"20445:1:6"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20312:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"20315:1:6","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"20321:1:6","type":""}],"src":"20289:176:6"},{"body":{"nodeType":"YulBlock","src":"20584:34:6","statements":[{"nodeType":"YulAssignment","src":"20594:18:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"20609:3:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20594:11:6"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20556:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"20561:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20572:11:6","type":""}],"src":"20471:147:6"},{"body":{"nodeType":"YulBlock","src":"20730:8:6","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20722:6:6","type":""}],"src":"20624:114:6"},{"body":{"nodeType":"YulBlock","src":"20907:235:6","statements":[{"nodeType":"YulAssignment","src":"20917:90:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21000:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"21005:1:6","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20924:75:6"},"nodeType":"YulFunctionCall","src":"20924:83:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20917:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21105:3:6"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"21016:88:6"},"nodeType":"YulFunctionCall","src":"21016:93:6"},"nodeType":"YulExpressionStatement","src":"21016:93:6"},{"nodeType":"YulAssignment","src":"21118:18:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21129:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"21134:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21125:3:6"},"nodeType":"YulFunctionCall","src":"21125:11:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21118:3:6"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20895:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20903:3:6","type":""}],"src":"20744:398:6"},{"body":{"nodeType":"YulBlock","src":"21336:191:6","statements":[{"nodeType":"YulAssignment","src":"21347:154:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21497:3:6"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21354:141:6"},"nodeType":"YulFunctionCall","src":"21354:147:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21347:3:6"}]},{"nodeType":"YulAssignment","src":"21511:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"21518:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21511:3:6"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21323:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21332:3:6","type":""}],"src":"21148:379:6"},{"body":{"nodeType":"YulBlock","src":"21612:40:6","statements":[{"nodeType":"YulAssignment","src":"21623:22:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21639:5:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"21633:5:6"},"nodeType":"YulFunctionCall","src":"21633:12:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21623:6:6"}]}]},"name":"array_length_t_array$_t_address_payable_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21595:5:6","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21605:6:6","type":""}],"src":"21533:119:6"},{"body":{"nodeType":"YulBlock","src":"21795:34:6","statements":[{"nodeType":"YulAssignment","src":"21805:18:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"21820:3:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21805:11:6"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_payable_$dyn_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21767:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"21772:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21783:11:6","type":""}],"src":"21658:171:6"},{"body":{"nodeType":"YulBlock","src":"21912:87:6","statements":[{"nodeType":"YulAssignment","src":"21922:11:6","value":{"name":"ptr","nodeType":"YulIdentifier","src":"21930:3:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21922:4:6"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21950:1:6","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"21953:3:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21943:6:6"},"nodeType":"YulFunctionCall","src":"21943:14:6"},"nodeType":"YulExpressionStatement","src":"21943:14:6"},{"nodeType":"YulAssignment","src":"21966:26:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21984:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21987:4:6","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"21974:9:6"},"nodeType":"YulFunctionCall","src":"21974:18:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21966:4:6"}]}]},"name":"array_dataslot_t_array$_t_address_payable_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21899:3:6","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"21907:4:6","type":""}],"src":"21835:164:6"},{"body":{"nodeType":"YulBlock","src":"22084:61:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22101:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22132:5:6"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"22106:25:6"},"nodeType":"YulFunctionCall","src":"22106:32:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22094:6:6"},"nodeType":"YulFunctionCall","src":"22094:45:6"},"nodeType":"YulExpressionStatement","src":"22094:45:6"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_inplace","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22072:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22079:3:6","type":""}],"src":"22005:140:6"},{"body":{"nodeType":"YulBlock","src":"22255:123:6","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22323:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"22331:3:6"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_inplace","nodeType":"YulIdentifier","src":"22265:57:6"},"nodeType":"YulFunctionCall","src":"22265:70:6"},"nodeType":"YulExpressionStatement","src":"22265:70:6"},{"nodeType":"YulAssignment","src":"22344:28:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22362:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"22367:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22358:3:6"},"nodeType":"YulFunctionCall","src":"22358:14:6"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"22344:10:6"}]}]},"name":"abi_encodeUpdatedPos_t_address_payable_to_t_address_payable_inplace","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"22228:6:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22236:3:6","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"22244:10:6","type":""}],"src":"22151:227:6"},{"body":{"nodeType":"YulBlock","src":"22435:51:6","statements":[{"nodeType":"YulAssignment","src":"22445:34:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22470:1:6","type":"","value":"0"},{"name":"value","nodeType":"YulIdentifier","src":"22473:5:6"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"22466:3:6"},"nodeType":"YulFunctionCall","src":"22466:13:6"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"22445:8:6"}]}]},"name":"shift_right_0_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22416:5:6","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"22426:8:6","type":""}],"src":"22384:102:6"},{"body":{"nodeType":"YulBlock","src":"22558:81:6","statements":[{"nodeType":"YulAssignment","src":"22568:65:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22583:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"22590:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22579:3:6"},"nodeType":"YulFunctionCall","src":"22579:54:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22568:7:6"}]}]},"name":"cleanup_from_storage_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22540:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22550:7:6","type":""}],"src":"22492:147:6"},{"body":{"nodeType":"YulBlock","src":"22728:99:6","statements":[{"nodeType":"YulAssignment","src":"22738:83:6","value":{"arguments":[{"arguments":[{"name":"slot_value","nodeType":"YulIdentifier","src":"22809:10:6"}],"functionName":{"name":"shift_right_0_unsigned","nodeType":"YulIdentifier","src":"22786:22:6"},"nodeType":"YulFunctionCall","src":"22786:34:6"}],"functionName":{"name":"cleanup_from_storage_t_address_payable","nodeType":"YulIdentifier","src":"22747:38:6"},"nodeType":"YulFunctionCall","src":"22747:74:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22738:5:6"}]}]},"name":"extract_from_storage_value_offset_0t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nodeType":"YulTypedName","src":"22707:10:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22722:5:6","type":""}],"src":"22645:182:6"},{"body":{"nodeType":"YulBlock","src":"22902:91:6","statements":[{"nodeType":"YulAssignment","src":"22912:74:6","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22980:4:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22974:5:6"},"nodeType":"YulFunctionCall","src":"22974:11:6"}],"functionName":{"name":"extract_from_storage_value_offset_0t_address_payable","nodeType":"YulIdentifier","src":"22921:52:6"},"nodeType":"YulFunctionCall","src":"22921:65:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22912:5:6"}]}]},"name":"read_from_storage_offset_0_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"22887:4:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22896:5:6","type":""}],"src":"22833:160:6"},{"body":{"nodeType":"YulBlock","src":"23079:38:6","statements":[{"nodeType":"YulAssignment","src":"23089:22:6","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"23101:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"23106:4:6","type":"","value":"0x01"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23097:3:6"},"nodeType":"YulFunctionCall","src":"23097:14:6"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"23089:4:6"}]}]},"name":"array_nextElement_t_array$_t_address_payable_$dyn_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"23066:3:6","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"23074:4:6","type":""}],"src":"22999:118:6"},{"body":{"nodeType":"YulBlock","src":"23324:712:6","statements":[{"nodeType":"YulVariableDeclaration","src":"23334:73:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23401:5:6"}],"functionName":{"name":"array_length_t_array$_t_address_payable_$dyn_storage","nodeType":"YulIdentifier","src":"23348:52:6"},"nodeType":"YulFunctionCall","src":"23348:59:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23338:6:6","type":""}]},{"nodeType":"YulAssignment","src":"23416:119:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23523:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"23528:6:6"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_payable_$dyn_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23423:99:6"},"nodeType":"YulFunctionCall","src":"23423:112:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23416:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"23544:76:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23614:5:6"}],"functionName":{"name":"array_dataslot_t_array$_t_address_payable_$dyn_storage","nodeType":"YulIdentifier","src":"23559:54:6"},"nodeType":"YulFunctionCall","src":"23559:61:6"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"23548:7:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23629:21:6","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"23643:7:6"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"23633:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"23719:292:6","statements":[{"nodeType":"YulVariableDeclaration","src":"23733:73:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"23799:6:6"}],"functionName":{"name":"read_from_storage_offset_0_t_address_payable","nodeType":"YulIdentifier","src":"23754:44:6"},"nodeType":"YulFunctionCall","src":"23754:52:6"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"23737:13:6","type":""}]},{"nodeType":"YulAssignment","src":"23819:94:6","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"23894:13:6"},{"name":"pos","nodeType":"YulIdentifier","src":"23909:3:6"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_payable_to_t_address_payable_inplace","nodeType":"YulIdentifier","src":"23826:67:6"},"nodeType":"YulFunctionCall","src":"23826:87:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23819:3:6"}]},{"nodeType":"YulAssignment","src":"23926:75:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"23994:6:6"}],"functionName":{"name":"array_nextElement_t_array$_t_address_payable_$dyn_storage","nodeType":"YulIdentifier","src":"23936:57:6"},"nodeType":"YulFunctionCall","src":"23936:65:6"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"23926:6:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23681:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"23684:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23678:2:6"},"nodeType":"YulFunctionCall","src":"23678:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23692:18:6","statements":[{"nodeType":"YulAssignment","src":"23694:14:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23703:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"23706:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23699:3:6"},"nodeType":"YulFunctionCall","src":"23699:9:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"23694:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"23663:14:6","statements":[{"nodeType":"YulVariableDeclaration","src":"23665:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"23674:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"23669:1:6","type":""}]}]},"src":"23659:352:6"},{"nodeType":"YulAssignment","src":"24020:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"24027:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24020:3:6"}]}]},"name":"abi_encode_t_array$_t_address_payable_$dyn_storage_to_t_array$_t_address_payable_$dyn_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23303:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23310:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23319:3:6","type":""}],"src":"23169:867:6"},{"body":{"nodeType":"YulBlock","src":"24221:182:6","statements":[{"nodeType":"YulAssignment","src":"24232:145:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24364:6:6"},{"name":"pos","nodeType":"YulIdentifier","src":"24373:3:6"}],"functionName":{"name":"abi_encode_t_array$_t_address_payable_$dyn_storage_to_t_array$_t_address_payable_$dyn_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24239:124:6"},"nodeType":"YulFunctionCall","src":"24239:138:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24232:3:6"}]},{"nodeType":"YulAssignment","src":"24387:10:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"24394:3:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24387:3:6"}]}]},"name":"abi_encode_tuple_packed_t_array$_t_address_payable_$dyn_storage__to_t_array$_t_address_payable_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24200:3:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24206:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24217:3:6","type":""}],"src":"24042:361:6"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Bets_$240(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Bets_$240(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Bets_$240(value)\n    }\n\n    function convert_t_enum$_Bets_$240_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Bets_$240(value)\n    }\n\n    function abi_encode_t_enum$_Bets_$240_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Bets_$240_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Bets_$240__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Bets_$240_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_uint256_$3_memory_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$3_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$3_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[3] -> uint256[3]\n    function abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$3_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$3_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$3_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_assert_t_enum$_RoulleteState_$236(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_RoulleteState_$236(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_RoulleteState_$236(value)\n    }\n\n    function convert_t_enum$_RoulleteState_$236_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_RoulleteState_$236(value)\n    }\n\n    function abi_encode_t_enum$_RoulleteState_$236_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_RoulleteState_$236_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_RoulleteState_$236__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_RoulleteState_$236_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_address_payable_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_payable_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_payable_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_payable_to_t_address_payable(value0, pos) -> updatedPos {\n        abi_encode_t_address_payable_to_t_address_payable(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_payable_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address payable[] -> address payable[]\n    function abi_encode_t_array$_t_address_payable_$dyn_memory_ptr_to_t_array$_t_address_payable_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_payable_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_payable_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_payable_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_payable_to_t_address_payable(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_payable_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_payable_$dyn_memory_ptr__to_t_array$_t_address_payable_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_payable_$dyn_memory_ptr_to_t_array$_t_address_payable_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_length_t_array$_t_address_payable_$dyn_storage(value) -> length {\n\n        length := sload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_payable_$dyn_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_address_payable_$dyn_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_inplace(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_payable_to_t_address_payable_inplace(value0, pos) -> updatedPos {\n        abi_encode_t_address_payable_to_t_address_payable_inplace(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function shift_right_0_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(0, value)\n\n    }\n\n    function cleanup_from_storage_t_address_payable(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function extract_from_storage_value_offset_0t_address_payable(slot_value) -> value {\n        value := cleanup_from_storage_t_address_payable(shift_right_0_unsigned(slot_value))\n    }\n\n    function read_from_storage_offset_0_t_address_payable(slot) -> value {\n        value := extract_from_storage_value_offset_0t_address_payable(sload(slot))\n\n    }\n\n    function array_nextElement_t_array$_t_address_payable_$dyn_storage(ptr) -> next {\n        next := add(ptr, 0x01)\n    }\n\n    // address payable[] -> address payable[]\n    function abi_encode_t_array$_t_address_payable_$dyn_storage_to_t_array$_t_address_payable_$dyn_memory_ptr_nonPadded_inplace_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_payable_$dyn_storage(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_payable_$dyn_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_payable_$dyn_storage(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := read_from_storage_offset_0_t_address_payable(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_payable_to_t_address_payable_inplace(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_payable_$dyn_storage(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_array$_t_address_payable_$dyn_storage__to_t_array$_t_address_payable_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_array$_t_address_payable_$dyn_storage_to_t_array$_t_address_payable_$dyn_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"49":[{"length":32,"start":1630},{"length":32,"start":1714}],"242":[{"length":32,"start":1250},{"length":32,"start":1893},{"length":32,"start":3049},{"length":32,"start":3852}],"254":[{"length":32,"start":2478}],"256":[{"length":32,"start":2538},{"length":32,"start":3740}],"258":[{"length":32,"start":2571}],"263":[{"length":32,"start":2606}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A319963 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC235615A GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC235615A EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xC5E1AE0E EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xCA5953B2 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xCE147CF3 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0xDAEBBD55 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xF077B974 EQ PUSH2 0x4B5 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x5A319963 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x5DACF5F4 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x5F1B0FD8 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x91AD27B4 EQ PUSH2 0x3A1 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x2FD31484 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x2FD31484 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x320229EB EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x50F1126B EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x5541E758 EQ PUSH2 0x2C6 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x6170DEA EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x6B188B6 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x247ABACA EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x2BACB08B EQ PUSH2 0x1D5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142 PUSH2 0x4E0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x163E JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x763 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F4 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x8E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH2 0xBE7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x322 PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34D PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x19D8 JUMP JUMPDEST PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x398 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B6 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E1 PUSH2 0xE8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40C PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x449 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x444 SWAP2 SWAP1 PUSH2 0x169A JUMP JUMPDEST PUSH2 0xEC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49F PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x1B70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CA PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH32 0xECBC979A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x54E JUMPI PUSH2 0x54D PUSH2 0x17CB JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x570 JUMPI PUSH2 0x56F PUSH2 0x17CB JUMP JUMPDEST JUMPDEST EQ PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB0C6C11500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9836AF9E2B5272CCED48D1370342A33FD92052E2CCF9452759D4A265F8E0710B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x70E JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x705 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x718 DUP3 DUP3 PUSH2 0xFD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x731 JUMPI PUSH2 0x730 PUSH2 0x1CA6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x7BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xECBC979A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7D1 JUMPI PUSH2 0x7D0 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7F3 JUMPI PUSH2 0x7F2 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST EQ PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH32 0xB0C6C11500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9836AF9E2B5272CCED48D1370342A33FD92052E2CCF9452759D4A265F8E0710B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x902 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xDD6 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x97F JUMPI SELFBALANCE PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 POP PUSH1 0x1 DUP1 SLOAD SWAP1 POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x93F JUMPI PUSH2 0x93E PUSH2 0x17CB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x90262E3100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x976 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x9A4 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC1 SWAP2 SWAP1 PUSH2 0x1DEF JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0x4FF16B3FC94BBF92EC93FEC52025CAADBCF9E22B038E9675C6DBDEC0FE60C090 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0xB07 PUSH2 0xD9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xBA0 JUMPI DUP3 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0xB46 JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xB33 JUMPI PUSH2 0xB32 PUSH2 0x1CA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xB43 SWAP2 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0xB68 JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB5E JUMPI PUSH2 0xB5D PUSH2 0x17CB JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0xBD3 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xB7B JUMPI PUSH2 0xB7A PUSH2 0x1CA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x1E4B JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0xB98 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB0C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x655DC2500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0xC41 JUMPI PUSH1 0x40 MLOAD PUSH32 0xECBC979A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xC55 JUMPI PUSH2 0xC54 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xC77 JUMPI PUSH2 0xC76 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST EQ PUSH2 0xCAE JUMPI PUSH1 0x40 MLOAD PUSH32 0xB0C6C11500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9836AF9E2B5272CCED48D1370342A33FD92052E2CCF9452759D4A265F8E0710B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD6C JUMPI PUSH2 0xD6B PUSH2 0x1CA6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDA6 PUSH2 0x1356 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEE PUSH2 0x17CB JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE11 JUMPI PUSH2 0xE10 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH1 0x1E PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xE26 SWAP2 SWAP1 PUSH2 0x1EEA JUMP JUMPDEST GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP GT DUP1 PUSH2 0xE42 JUMPI POP PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP GT JUMPDEST DUP1 PUSH2 0xE52 JUMPI POP PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP GT JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0xE65 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0xE6E JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0xE77 JUMPI POP DUP1 JUMPDEST SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1E SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xED6 JUMPI PUSH2 0xED5 PUSH2 0x1CA6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xFCB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xF81 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xFED JUMPI PUSH2 0xFEC PUSH2 0x1CA6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x100C DUP3 PUSH2 0xAF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1022 JUMPI PUSH2 0x1021 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1035 JUMPI PUSH2 0x1034 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1053 JUMPI PUSH1 0x0 PUSH1 0x4 SWAP1 DUP1 SLOAD PUSH2 0x104D SWAP3 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST POP PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1067 JUMPI PUSH2 0x1066 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x107A JUMPI PUSH2 0x1079 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x1098 JUMPI PUSH1 0x2 PUSH1 0x4 SWAP1 DUP1 SLOAD PUSH2 0x1092 SWAP3 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST POP PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 SWAP1 DUP1 SLOAD PUSH2 0x10AA SWAP3 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST POP JUMPDEST JUMPDEST TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10CF JUMPI PUSH2 0x10CE PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10FD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1113 SWAP3 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x112F JUMPI PUSH2 0x112E PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x115D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1173 SWAP3 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x118F JUMPI PUSH2 0x118E PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11BD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x11D3 SWAP3 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x12E1 JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11FA JUMPI PUSH2 0x11F9 PUSH2 0x1CA6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0x16345785D8A0000 PUSH1 0x40 MLOAD PUSH2 0x1250 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD PUSH32 0xD34C7CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 DUP1 PUSH2 0x12D9 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11D7 JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0x40 MLOAD PUSH2 0x12F1 SWAP2 SWAP1 PUSH2 0x20E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0x80624E43DC2BE5BDB3A00067A406D64C2632D004437308E62C32F3B97790DD82 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0x17CB JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x13B9 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x13B8 JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x139D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x13C6 SWAP2 SWAP1 PUSH2 0x1454 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1443 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1442 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1450 SWAP2 SWAP1 PUSH2 0x1454 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x146D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1455 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1484 DUP2 PUSH2 0x1471 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x149F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x147B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C2 DUP2 PUSH2 0x1471 JUMP JUMPDEST DUP2 EQ PUSH2 0x14CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14DF DUP2 PUSH2 0x14B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1533 DUP3 PUSH2 0x14EA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1552 JUMPI PUSH2 0x1551 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1565 PUSH2 0x14A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1571 DUP3 DUP3 PUSH2 0x152A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1591 JUMPI PUSH2 0x1590 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15BA PUSH2 0x15B5 DUP5 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x155B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x15DD JUMPI PUSH2 0x15DC PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1606 JUMPI DUP1 PUSH2 0x15F2 DUP9 DUP3 PUSH2 0x14D0 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15DF JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1625 JUMPI PUSH2 0x1624 PUSH2 0x14E5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1635 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x14AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1663 DUP6 DUP3 DUP7 ADD PUSH2 0x14D0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1684 JUMPI PUSH2 0x1683 PUSH2 0x14B4 JUMP JUMPDEST JUMPDEST PUSH2 0x1690 DUP6 DUP3 DUP7 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16B0 JUMPI PUSH2 0x16AF PUSH2 0x14AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16BE DUP5 DUP3 DUP6 ADD PUSH2 0x14D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F2 DUP3 PUSH2 0x16C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1702 DUP2 PUSH2 0x16E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x173E JUMPI PUSH2 0x173D PUSH2 0x14E5 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x1723 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1777 JUMPI PUSH2 0x1776 PUSH2 0x15A2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1795 JUMPI PUSH2 0x1794 PUSH2 0x14AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17B3 JUMPI PUSH2 0x17B2 PUSH2 0x14B4 JUMP JUMPDEST JUMPDEST PUSH2 0x17BF DUP6 DUP3 DUP7 ADD PUSH2 0x1728 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x180B JUMPI PUSH2 0x180A PUSH2 0x17CB JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x181C DUP3 PUSH2 0x17FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C DUP3 PUSH2 0x180E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x183C DUP2 PUSH2 0x1821 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1857 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1886 DUP2 PUSH2 0x1471 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1898 DUP4 DUP4 PUSH2 0x187D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18BA DUP2 PUSH2 0x185D JUMP JUMPDEST PUSH2 0x18C4 DUP2 DUP5 PUSH2 0x1868 JUMP JUMPDEST SWAP3 POP PUSH2 0x18CF DUP3 PUSH2 0x1873 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1900 JUMPI DUP2 MLOAD PUSH2 0x18E7 DUP8 DUP3 PUSH2 0x188C JUMP JUMPDEST SWAP7 POP PUSH2 0x18F2 DUP4 PUSH2 0x18A4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18D3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x191D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1943 JUMPI PUSH2 0x1942 PUSH2 0x14FB JUMP JUMPDEST JUMPDEST PUSH2 0x194C DUP3 PUSH2 0x14EA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197B PUSH2 0x1976 DUP5 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0x155B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x1923 JUMP JUMPDEST JUMPDEST PUSH2 0x19A2 DUP5 DUP3 DUP6 PUSH2 0x1959 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19BF JUMPI PUSH2 0x19BE PUSH2 0x14E5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19CF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1968 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EE JUMPI PUSH2 0x19ED PUSH2 0x14AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A0C JUMPI PUSH2 0x1A0B PUSH2 0x14B4 JUMP JUMPDEST JUMPDEST PUSH2 0x1A18 DUP5 DUP3 DUP6 ADD PUSH2 0x19AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A36 DUP2 PUSH2 0x1A21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A76 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A5B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1A85 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A96 DUP3 PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x1AA0 DUP2 DUP6 PUSH2 0x1A47 JUMP JUMPDEST SWAP4 POP PUSH2 0x1AB0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x1AB9 DUP2 PUSH2 0x14EA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AD9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A2D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1AEB DUP2 DUP5 PUSH2 0x1A8B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B07 DUP2 PUSH2 0x1AF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B22 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1B39 JUMPI PUSH2 0x1B38 PUSH2 0x17CB JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1B4A DUP3 PUSH2 0x1B28 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B5A DUP3 PUSH2 0x1B3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6A DUP2 PUSH2 0x1B4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC2 DUP3 PUSH2 0x16C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD2 DUP2 PUSH2 0x1BB7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE4 DUP4 DUP4 PUSH2 0x1BC9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C08 DUP3 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x1C12 DUP2 DUP6 PUSH2 0x1B96 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C1D DUP4 PUSH2 0x1BA7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C4E JUMPI DUP2 MLOAD PUSH2 0x1C35 DUP9 DUP3 PUSH2 0x1BD8 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C40 DUP4 PUSH2 0x1BF0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C21 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C75 DUP2 DUP5 PUSH2 0x1BFD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C92 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16F9 JUMP JUMPDEST PUSH2 0x1C9F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16F9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1CEA PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x147B JUMP JUMPDEST PUSH2 0x1CF7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x147B JUMP JUMPDEST PUSH2 0x1D04 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x147B JUMP JUMPDEST PUSH2 0x1D11 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x147B JUMP JUMPDEST PUSH2 0x1D1E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x147B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D45 DUP2 PUSH2 0x1D28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D62 DUP2 PUSH2 0x1D4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D81 DUP2 PUSH2 0x1D68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D9C PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1AFE JUMP JUMPDEST PUSH2 0x1DA9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1D3C JUMP JUMPDEST PUSH2 0x1DB6 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1D59 JUMP JUMPDEST PUSH2 0x1DC3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x1DD0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1D78 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DE9 DUP2 PUSH2 0x14B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E05 JUMPI PUSH2 0x1E04 PUSH2 0x14AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E13 DUP5 DUP3 DUP6 ADD PUSH2 0x1DDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E56 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E61 DUP4 PUSH2 0x1471 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E96 JUMPI PUSH2 0x1E95 PUSH2 0x1E1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAC DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1EDF JUMPI PUSH2 0x1EDE PUSH2 0x1E1C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF5 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F00 DUP4 PUSH2 0x1471 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x1E1C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F58 DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F63 DUP4 PUSH2 0x1471 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F73 JUMPI PUSH2 0x1F72 PUSH2 0x1F1E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F99 PUSH1 0x0 DUP4 PUSH2 0x1F7E JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA4 DUP3 PUSH2 0x1F89 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FBA DUP3 PUSH2 0x1F8C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF8 DUP2 PUSH2 0x1BB7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200A DUP4 DUP4 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2056 PUSH2 0x2051 DUP4 PUSH2 0x2016 JUMP JUMPDEST PUSH2 0x2023 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2069 DUP3 SLOAD PUSH2 0x2043 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2088 DUP3 PUSH2 0x1FC4 JUMP JUMPDEST PUSH2 0x2092 DUP2 DUP6 PUSH2 0x1FCF JUMP JUMPDEST SWAP4 POP PUSH2 0x209D DUP4 PUSH2 0x1FDA JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20D5 JUMPI PUSH2 0x20B2 DUP3 PUSH2 0x205D JUMP JUMPDEST PUSH2 0x20BC DUP9 DUP3 PUSH2 0x1FFE JUMP JUMPDEST SWAP8 POP PUSH2 0x20C7 DUP4 PUSH2 0x2070 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x20A1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EE DUP3 DUP5 PUSH2 0x207D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 RETURNDATACOPY 0xF7 BYTE SWAP7 0x21 0xA9 0xA5 STATICCALL 0xC3 0xB8 DIV PUSH23 0x196D3B2435B11EA6297707C386F5AF2E0136E64736F6C PUSH4 0x43000809 STOP CALLER ","sourceMap":"749:9991:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2845:363;;;:::i;:::-;;9990:112;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9486:112:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3214:367;;;:::i;:::-;;10108:108;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10340:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5750:1266;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8466:442;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9899:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3587:367;;;:::i;:::-;;9368:112;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8914:116;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10445:109;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4418:946;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;10651:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10222:112;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10560:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9248:114;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9151:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9724:103;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9604:114;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2845:363;2906:12;2894:9;:24;2890:86;;;2941:24;;;;;;;;;;;;;;2890:86;3009:18;2990:37;;;;;;;;:::i;:::-;;:15;;;;;;;;;;;:37;;;;;;;;:::i;:::-;;;2986:92;;3050:17;;;;;;;;;;;;;;2986:92;3087:12;3113:10;3087:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3190:10;3176:25;;;;;;;;;;;;2845:363::o;9990:112::-;10048:7;10074:14;:21;;;;10067:28;;9990:112;:::o;6618:256:2:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;9486:112:5:-;9546:7;9572:12;9585:5;9572:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9565:26;;9486:112;;;:::o;3214:367::-;3277:12;3265:9;:24;3261:86;;;3312:24;;;;;;;;;;;;;;3261:86;3380:18;3361:37;;;;;;;;:::i;:::-;;:15;;;;;;;;;;;:37;;;;;;;;:::i;:::-;;;3357:92;;3421:17;;;;;;;;;;;;;;3357:92;3458:14;3486:10;3458:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3563:10;3549:25;;;;;;;;;;;;3214:367::o;10108:108::-;10164:7;10190:12;:19;;;;10183:26;;10108:108;:::o;10340:99::-;10391:7;10417:15;;10410:22;;10340:99;:::o;5750:1266::-;6048:17;6071:15;;;;;;;;;;;;;:11;:15::i;:::-;6047:39;;;6192:12;6187:438;;6422:21;6461:14;:21;;;;6500:12;:19;;;;6537:14;:21;;;;6584:15;;;;;;;;;;;6576:24;;;;;;;;:::i;:::-;;6380:234;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6187:438;6653:25;6635:15;;:43;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;6688:17;6708:13;:32;;;6786:9;6819:16;1548:1;6883:18;1639:1;6708:225;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6688:245;;6973:9;6949:34;;;;;;;;;;5839:1177;;5750:1266;;:::o;8466:442::-;8526:4;8542:13;8558:1;8542:17;;8569:29;8601:16;:14;:16::i;:::-;8569:48;;8633:9;8628:238;8652:18;8648:1;:22;8628:238;;;8705:5;8695:6;:15;;:50;;;;;8731:11;8743:1;8731:14;;;;;;;:::i;:::-;;;;;;8723:5;:22;;;;:::i;:::-;8714:6;:31;8695:50;8691:165;;;8777:1;8772:7;;;;;;;;:::i;:::-;;8765:14;;;;;;;8691:165;8827:11;8839:1;8827:14;;;;;;;:::i;:::-;;;;;;8818:23;;;;;:::i;:::-;;;8672:3;;;;;:::i;:::-;;;;8628:238;;;;8883:18;;;;;;;;;;;;;;8466:442;;;;:::o;9899:85::-;9943:7;1639:1;9962:15;;;;9899:85;:::o;3587:367::-;3650:12;3638:9;:24;3634:86;;;3685:24;;;;;;;;;;;;;;3634:86;3753:18;3734:37;;;;;;;;:::i;:::-;;:15;;;;;;;;;;;:37;;;;;;;;:::i;:::-;;;3730:92;;3794:17;;;;;;;;;;;;;;3730:92;3831:14;3859:10;3831:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3936:10;3922:25;;;;;;;;;;;;3587:367::o;9368:112::-;9426:7;9452:14;9467:5;9452:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9445:28;;9368:112;;;:::o;8914:116::-;8961:17;;:::i;:::-;8990:33;;;;;;;;8998:2;8990:33;;;;9002:2;8990:33;;;;1728:3;8990:33;;;;;8914:116;:::o;10445:109::-;10501:7;1548:1;10520:27;;;;10445:109;:::o;4418:946::-;4558:17;4589:12;4784:11;4817:18;4798:37;;;;;;;;:::i;:::-;;:15;;;;;;;;;;;:37;;;;;;;;:::i;:::-;;;4784:51;;5028:15;1804:2;5066:15;;5048;:33;;;;:::i;:::-;5046:50;5028:68;;5106:15;5149:1;5125:14;:21;;;;:25;:64;;;;5188:1;5166:12;:19;;;;:23;5125:64;:105;;;;5229:1;5205:14;:21;;;;:25;5125:105;5106:125;;5241:15;5283:1;5259:21;:25;5241:43;;5309:6;:20;;;;;5319:10;5309:20;:34;;;;;5333:10;5309:34;:48;;;;;5347:10;5309:48;5294:63;;4774:590;;;;4418:946;;;:::o;10651:87::-;10695:7;1804:2;10714:17;;10651:87;:::o;10222:112::-;10280:7;10306:14;:21;;;;10299:28;;10222:112;:::o;10560:85::-;10603:7;10629:9;10622:16;;10560:85;:::o;9248:114::-;9308:7;9334:14;9349:5;9334:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9327:28;;9248:114;;;:::o;9151:91::-;9197:7;9223:12;9216:19;;9151:91;:::o;9724:103::-;9773:13;9805:15;;;;;;;;;;;9798:22;;9724:103;:::o;9604:114::-;9653:24;9696:15;9689:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9604:114;:::o;7123:1337::-;7509:14;1728:3;7526:11;7538:1;7526:14;;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;7509:50;;7569:15;7587:21;7601:6;7587:13;:21::i;:::-;7569:39;;7636:8;7622:22;;;;;;;;:::i;:::-;;:10;:22;;;;;;;;:::i;:::-;;;7618:239;;;7678:12;7660:15;:30;;;;;;;;:::i;:::-;;7618:239;;;7725:10;7711:24;;;;;;;;:::i;:::-;;:10;:24;;;;;;;;:::i;:::-;;;7707:150;;;7769:14;7751:15;:32;;;;;;;;:::i;:::-;;7707:150;;;7832:14;7814:15;:32;;;;;;;;:::i;:::-;;7707:150;7618:239;7884:15;7866;:33;;;;7946:1;7924:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7909:12;:39;;;;;;;;;;;;:::i;:::-;;7997:1;7975:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7958:14;:41;;;;;;;;;;;;:::i;:::-;;8048:1;8026:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8009:14;:41;;;;;;;;;;;;:::i;:::-;;8087:9;8082:282;8106:15;:22;;;;8102:1;:26;8082:282;;;8198:12;8216:15;8232:1;8216:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:23;;8247:9;8216:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8197:64;;;8280:7;8275:79;;8314:25;;;;;;;;;;;;;;8275:79;8135:229;8130:3;;;;;:::i;:::-;;;;8082:282;;;;8391:15;8378:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;8435:18;8417:15;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;7244:1216;;7123:1337;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:75::-;475:6;508:2;502:9;492:19;;442:75;:::o;523:117::-;632:1;629;622:12;646:117;755:1;752;745:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:117::-;1151:1;1148;1141:12;1165:102;1206:6;1257:2;1253:7;1248:2;1241:5;1237:14;1233:28;1223:38;;1165:102;;;:::o;1273:180::-;1321:77;1318:1;1311:88;1418:4;1415:1;1408:15;1442:4;1439:1;1432:15;1459:281;1542:27;1564:4;1542:27;:::i;:::-;1534:6;1530:40;1672:6;1660:10;1657:22;1636:18;1624:10;1621:34;1618:62;1615:88;;;1683:18;;:::i;:::-;1615:88;1723:10;1719:2;1712:22;1502:238;1459:281;;:::o;1746:129::-;1780:6;1807:20;;:::i;:::-;1797:30;;1836:33;1864:4;1856:6;1836:33;:::i;:::-;1746:129;;;:::o;1881:311::-;1958:4;2048:18;2040:6;2037:30;2034:56;;;2070:18;;:::i;:::-;2034:56;2120:4;2112:6;2108:17;2100:25;;2180:4;2174;2170:15;2162:23;;1881:311;;;:::o;2198:117::-;2307:1;2304;2297:12;2338:710;2434:5;2459:81;2475:64;2532:6;2475:64;:::i;:::-;2459:81;:::i;:::-;2450:90;;2560:5;2589:6;2582:5;2575:21;2623:4;2616:5;2612:16;2605:23;;2676:4;2668:6;2664:17;2656:6;2652:30;2705:3;2697:6;2694:15;2691:122;;;2724:79;;:::i;:::-;2691:122;2839:6;2822:220;2856:6;2851:3;2848:15;2822:220;;;2931:3;2960:37;2993:3;2981:10;2960:37;:::i;:::-;2955:3;2948:50;3027:4;3022:3;3018:14;3011:21;;2898:144;2882:4;2877:3;2873:14;2866:21;;2822:220;;;2826:21;2440:608;;2338:710;;;;;:::o;3071:370::-;3142:5;3191:3;3184:4;3176:6;3172:17;3168:27;3158:122;;3199:79;;:::i;:::-;3158:122;3316:6;3303:20;3341:94;3431:3;3423:6;3416:4;3408:6;3404:17;3341:94;:::i;:::-;3332:103;;3148:293;3071:370;;;;:::o;3447:684::-;3540:6;3548;3597:2;3585:9;3576:7;3572:23;3568:32;3565:119;;;3603:79;;:::i;:::-;3565:119;3723:1;3748:53;3793:7;3784:6;3773:9;3769:22;3748:53;:::i;:::-;3738:63;;3694:117;3878:2;3867:9;3863:18;3850:32;3909:18;3901:6;3898:30;3895:117;;;3931:79;;:::i;:::-;3895:117;4036:78;4106:7;4097:6;4086:9;4082:22;4036:78;:::i;:::-;4026:88;;3821:303;3447:684;;;;;:::o;4137:329::-;4196:6;4245:2;4233:9;4224:7;4220:23;4216:32;4213:119;;;4251:79;;:::i;:::-;4213:119;4371:1;4396:53;4441:7;4432:6;4421:9;4417:22;4396:53;:::i;:::-;4386:63;;4342:117;4137:329;;;;:::o;4472:126::-;4509:7;4549:42;4542:5;4538:54;4527:65;;4472:126;;;:::o;4604:96::-;4641:7;4670:24;4688:5;4670:24;:::i;:::-;4659:35;;4604:96;;;:::o;4706:118::-;4793:24;4811:5;4793:24;:::i;:::-;4788:3;4781:37;4706:118;;:::o;4830:222::-;4923:4;4961:2;4950:9;4946:18;4938:26;;4974:71;5042:1;5031:9;5027:17;5018:6;4974:71;:::i;:::-;4830:222;;;;:::o;5058:117::-;5167:1;5164;5157:12;5194:552;5251:8;5261:6;5311:3;5304:4;5296:6;5292:17;5288:27;5278:122;;5319:79;;:::i;:::-;5278:122;5432:6;5419:20;5409:30;;5462:18;5454:6;5451:30;5448:117;;;5484:79;;:::i;:::-;5448:117;5598:4;5590:6;5586:17;5574:29;;5652:3;5644:4;5636:6;5632:17;5622:8;5618:32;5615:41;5612:128;;;5659:79;;:::i;:::-;5612:128;5194:552;;;;;:::o;5752:527::-;5822:6;5830;5879:2;5867:9;5858:7;5854:23;5850:32;5847:119;;;5885:79;;:::i;:::-;5847:119;6033:1;6022:9;6018:17;6005:31;6063:18;6055:6;6052:30;6049:117;;;6085:79;;:::i;:::-;6049:117;6198:64;6254:7;6245:6;6234:9;6230:22;6198:64;:::i;:::-;6180:82;;;;5976:296;5752:527;;;;;:::o;6285:180::-;6333:77;6330:1;6323:88;6430:4;6427:1;6420:15;6454:4;6451:1;6444:15;6471:113;6552:1;6545:5;6542:12;6532:46;;6558:18;;:::i;:::-;6532:46;6471:113;:::o;6590:127::-;6635:7;6664:5;6653:16;;6670:41;6705:5;6670:41;:::i;:::-;6590:127;;;:::o;6723:::-;6779:9;6812:32;6838:5;6812:32;:::i;:::-;6799:45;;6723:127;;;:::o;6856:143::-;6949:43;6986:5;6949:43;:::i;:::-;6944:3;6937:56;6856:143;;:::o;7005:234::-;7104:4;7142:2;7131:9;7127:18;7119:26;;7155:77;7229:1;7218:9;7214:17;7205:6;7155:77;:::i;:::-;7005:234;;;;:::o;7245:104::-;7310:6;7338:4;7328:14;;7245:104;;;:::o;7355:143::-;7452:11;7489:3;7474:18;;7355:143;;;;:::o;7504:98::-;7569:4;7592:3;7584:11;;7504:98;;;:::o;7608:108::-;7685:24;7703:5;7685:24;:::i;:::-;7680:3;7673:37;7608:108;;:::o;7722:179::-;7791:10;7812:46;7854:3;7846:6;7812:46;:::i;:::-;7890:4;7885:3;7881:14;7867:28;;7722:179;;;;:::o;7907:111::-;7975:4;8007;8002:3;7998:14;7990:22;;7907:111;;;:::o;8056:694::-;8192:52;8238:5;8192:52;:::i;:::-;8260:84;8337:6;8332:3;8260:84;:::i;:::-;8253:91;;8368:54;8416:5;8368:54;:::i;:::-;8445:7;8476:1;8461:282;8486:6;8483:1;8480:13;8461:282;;;8562:6;8556:13;8589:63;8648:3;8633:13;8589:63;:::i;:::-;8582:70;;8675:58;8726:6;8675:58;:::i;:::-;8665:68;;8521:222;8508:1;8505;8501:9;8496:14;;8461:282;;;8465:14;8168:582;;;8056:694;;:::o;8756:314::-;8895:4;8933:2;8922:9;8918:18;8910:26;;8946:117;9060:1;9049:9;9045:17;9036:6;8946:117;:::i;:::-;8756:314;;;;:::o;9076:117::-;9185:1;9182;9175:12;9199:307;9260:4;9350:18;9342:6;9339:30;9336:56;;;9372:18;;:::i;:::-;9336:56;9410:29;9432:6;9410:29;:::i;:::-;9402:37;;9494:4;9488;9484:15;9476:23;;9199:307;;;:::o;9512:154::-;9596:6;9591:3;9586;9573:30;9658:1;9649:6;9644:3;9640:16;9633:27;9512:154;;;:::o;9672:410::-;9749:5;9774:65;9790:48;9831:6;9790:48;:::i;:::-;9774:65;:::i;:::-;9765:74;;9862:6;9855:5;9848:21;9900:4;9893:5;9889:16;9938:3;9929:6;9924:3;9920:16;9917:25;9914:112;;;9945:79;;:::i;:::-;9914:112;10035:41;10069:6;10064:3;10059;10035:41;:::i;:::-;9755:327;9672:410;;;;;:::o;10101:338::-;10156:5;10205:3;10198:4;10190:6;10186:17;10182:27;10172:122;;10213:79;;:::i;:::-;10172:122;10330:6;10317:20;10355:78;10429:3;10421:6;10414:4;10406:6;10402:17;10355:78;:::i;:::-;10346:87;;10162:277;10101:338;;;;:::o;10445:507::-;10513:6;10562:2;10550:9;10541:7;10537:23;10533:32;10530:119;;;10568:79;;:::i;:::-;10530:119;10716:1;10705:9;10701:17;10688:31;10746:18;10738:6;10735:30;10732:117;;;10768:79;;:::i;:::-;10732:117;10873:62;10927:7;10918:6;10907:9;10903:22;10873:62;:::i;:::-;10863:72;;10659:286;10445:507;;;;:::o;10958:90::-;10992:7;11035:5;11028:13;11021:21;11010:32;;10958:90;;;:::o;11054:109::-;11135:21;11150:5;11135:21;:::i;:::-;11130:3;11123:34;11054:109;;:::o;11169:98::-;11220:6;11254:5;11248:12;11238:22;;11169:98;;;:::o;11273:168::-;11356:11;11390:6;11385:3;11378:19;11430:4;11425:3;11421:14;11406:29;;11273:168;;;;:::o;11447:307::-;11515:1;11525:113;11539:6;11536:1;11533:13;11525:113;;;11624:1;11619:3;11615:11;11609:18;11605:1;11600:3;11596:11;11589:39;11561:2;11558:1;11554:10;11549:15;;11525:113;;;11656:6;11653:1;11650:13;11647:101;;;11736:1;11727:6;11722:3;11718:16;11711:27;11647:101;11496:258;11447:307;;;:::o;11760:360::-;11846:3;11874:38;11906:5;11874:38;:::i;:::-;11928:70;11991:6;11986:3;11928:70;:::i;:::-;11921:77;;12007:52;12052:6;12047:3;12040:4;12033:5;12029:16;12007:52;:::i;:::-;12084:29;12106:6;12084:29;:::i;:::-;12079:3;12075:39;12068:46;;11850:270;11760:360;;;;:::o;12126:407::-;12259:4;12297:2;12286:9;12282:18;12274:26;;12310:65;12372:1;12361:9;12357:17;12348:6;12310:65;:::i;:::-;12422:9;12416:4;12412:20;12407:2;12396:9;12392:18;12385:48;12450:76;12521:4;12512:6;12450:76;:::i;:::-;12442:84;;12126:407;;;;;:::o;12539:77::-;12576:7;12605:5;12594:16;;12539:77;;;:::o;12622:118::-;12709:24;12727:5;12709:24;:::i;:::-;12704:3;12697:37;12622:118;;:::o;12746:222::-;12839:4;12877:2;12866:9;12862:18;12854:26;;12890:71;12958:1;12947:9;12943:17;12934:6;12890:71;:::i;:::-;12746:222;;;;:::o;12974:122::-;13064:1;13057:5;13054:12;13044:46;;13070:18;;:::i;:::-;13044:46;12974:122;:::o;13102:145::-;13156:7;13185:5;13174:16;;13191:50;13235:5;13191:50;:::i;:::-;13102:145;;;:::o;13253:::-;13318:9;13351:41;13386:5;13351:41;:::i;:::-;13338:54;;13253:145;;;:::o;13404:161::-;13506:52;13552:5;13506:52;:::i;:::-;13501:3;13494:65;13404:161;;:::o;13571:252::-;13679:4;13717:2;13706:9;13702:18;13694:26;;13730:86;13813:1;13802:9;13798:17;13789:6;13730:86;:::i;:::-;13571:252;;;;:::o;13829:122::-;13904:6;13938:5;13932:12;13922:22;;13829:122;;;:::o;13957:192::-;14064:11;14098:6;14093:3;14086:19;14138:4;14133:3;14129:14;14114:29;;13957:192;;;;:::o;14155:140::-;14230:4;14253:3;14245:11;;14283:4;14278:3;14274:14;14266:22;;14155:140;;;:::o;14301:104::-;14346:7;14375:24;14393:5;14375:24;:::i;:::-;14364:35;;14301:104;;;:::o;14411:132::-;14504:32;14530:5;14504:32;:::i;:::-;14499:3;14492:45;14411:132;;:::o;14549:211::-;14634:10;14655:62;14713:3;14705:6;14655:62;:::i;:::-;14749:4;14744:3;14740:14;14726:28;;14549:211;;;;:::o;14766:121::-;14844:4;14876;14871:3;14867:14;14859:22;;14766:121;;;:::o;14939:796::-;15074:3;15103:62;15159:5;15103:62;:::i;:::-;15181:94;15268:6;15263:3;15181:94;:::i;:::-;15174:101;;15299:64;15357:5;15299:64;:::i;:::-;15386:7;15417:1;15402:308;15427:6;15424:1;15421:13;15402:308;;;15503:6;15497:13;15530:79;15605:3;15590:13;15530:79;:::i;:::-;15523:86;;15632:68;15693:6;15632:68;:::i;:::-;15622:78;;15462:248;15449:1;15446;15442:9;15437:14;;15402:308;;;15406:14;15726:3;15719:10;;15079:656;;;14939:796;;;;:::o;15741:405::-;15900:4;15938:2;15927:9;15923:18;15915:26;;15987:9;15981:4;15977:20;15973:1;15962:9;15958:17;15951:47;16015:124;16134:4;16125:6;16015:124;:::i;:::-;16007:132;;15741:405;;;;:::o;16152:332::-;16273:4;16311:2;16300:9;16296:18;16288:26;;16324:71;16392:1;16381:9;16377:17;16368:6;16324:71;:::i;:::-;16405:72;16473:2;16462:9;16458:18;16449:6;16405:72;:::i;:::-;16152:332;;;;;:::o;16490:180::-;16538:77;16535:1;16528:88;16635:4;16632:1;16625:15;16659:4;16656:1;16649:15;16676:664;16881:4;16919:3;16908:9;16904:19;16896:27;;16933:71;17001:1;16990:9;16986:17;16977:6;16933:71;:::i;:::-;17014:72;17082:2;17071:9;17067:18;17058:6;17014:72;:::i;:::-;17096;17164:2;17153:9;17149:18;17140:6;17096:72;:::i;:::-;17178;17246:2;17235:9;17231:18;17222:6;17178:72;:::i;:::-;17260:73;17328:3;17317:9;17313:19;17304:6;17260:73;:::i;:::-;16676:664;;;;;;;;:::o;17346:101::-;17382:7;17422:18;17415:5;17411:30;17400:41;;17346:101;;;:::o;17453:115::-;17538:23;17555:5;17538:23;:::i;:::-;17533:3;17526:36;17453:115;;:::o;17574:89::-;17610:7;17650:6;17643:5;17639:18;17628:29;;17574:89;;;:::o;17669:115::-;17754:23;17771:5;17754:23;:::i;:::-;17749:3;17742:36;17669:115;;:::o;17790:93::-;17826:7;17866:10;17859:5;17855:22;17844:33;;17790:93;;;:::o;17889:115::-;17974:23;17991:5;17974:23;:::i;:::-;17969:3;17962:36;17889:115;;:::o;18010:648::-;18207:4;18245:3;18234:9;18230:19;18222:27;;18259:71;18327:1;18316:9;18312:17;18303:6;18259:71;:::i;:::-;18340:70;18406:2;18395:9;18391:18;18382:6;18340:70;:::i;:::-;18420;18486:2;18475:9;18471:18;18462:6;18420:70;:::i;:::-;18500;18566:2;18555:9;18551:18;18542:6;18500:70;:::i;:::-;18580:71;18646:3;18635:9;18631:19;18622:6;18580:71;:::i;:::-;18010:648;;;;;;;;:::o;18664:143::-;18721:5;18752:6;18746:13;18737:22;;18768:33;18795:5;18768:33;:::i;:::-;18664:143;;;;:::o;18813:351::-;18883:6;18932:2;18920:9;18911:7;18907:23;18903:32;18900:119;;;18938:79;;:::i;:::-;18900:119;19058:1;19083:64;19139:7;19130:6;19119:9;19115:22;19083:64;:::i;:::-;19073:74;;19029:128;18813:351;;;;:::o;19170:180::-;19218:77;19215:1;19208:88;19315:4;19312:1;19305:15;19339:4;19336:1;19329:15;19356:305;19396:3;19415:20;19433:1;19415:20;:::i;:::-;19410:25;;19449:20;19467:1;19449:20;:::i;:::-;19444:25;;19603:1;19535:66;19531:74;19528:1;19525:81;19522:107;;;19609:18;;:::i;:::-;19522:107;19653:1;19650;19646:9;19639:16;;19356:305;;;;:::o;19667:233::-;19706:3;19729:24;19747:5;19729:24;:::i;:::-;19720:33;;19775:66;19768:5;19765:77;19762:103;;;19845:18;;:::i;:::-;19762:103;19892:1;19885:5;19881:13;19874:20;;19667:233;;;:::o;19906:191::-;19946:4;19966:20;19984:1;19966:20;:::i;:::-;19961:25;;20000:20;20018:1;20000:20;:::i;:::-;19995:25;;20039:1;20036;20033:8;20030:34;;;20044:18;;:::i;:::-;20030:34;20089:1;20086;20082:9;20074:17;;19906:191;;;;:::o;20103:180::-;20151:77;20148:1;20141:88;20248:4;20245:1;20238:15;20272:4;20269:1;20262:15;20289:176;20321:1;20338:20;20356:1;20338:20;:::i;:::-;20333:25;;20372:20;20390:1;20372:20;:::i;:::-;20367:25;;20411:1;20401:35;;20416:18;;:::i;:::-;20401:35;20457:1;20454;20450:9;20445:14;;20289:176;;;;:::o;20471:147::-;20572:11;20609:3;20594:18;;20471:147;;;;:::o;20624:114::-;;:::o;20744:398::-;20903:3;20924:83;21005:1;21000:3;20924:83;:::i;:::-;20917:90;;21016:93;21105:3;21016:93;:::i;:::-;21134:1;21129:3;21125:11;21118:18;;20744:398;;;:::o;21148:379::-;21332:3;21354:147;21497:3;21354:147;:::i;:::-;21347:154;;21518:3;21511:10;;21148:379;;;:::o;21533:119::-;21605:6;21639:5;21633:12;21623:22;;21533:119;;;:::o;21658:171::-;21783:11;21820:3;21805:18;;21658:171;;;;:::o;21835:164::-;21907:4;21930:3;21922:11;;21953:3;21950:1;21943:14;21987:4;21984:1;21974:18;21966:26;;21835:164;;;:::o;22005:140::-;22106:32;22132:5;22106:32;:::i;:::-;22101:3;22094:45;22005:140;;:::o;22151:227::-;22244:10;22265:70;22331:3;22323:6;22265:70;:::i;:::-;22367:4;22362:3;22358:14;22344:28;;22151:227;;;;:::o;22384:102::-;22426:8;22473:5;22470:1;22466:13;22445:34;;22384:102;;;:::o;22492:147::-;22550:7;22590:42;22583:5;22579:54;22568:65;;22492:147;;;:::o;22645:182::-;22722:5;22747:74;22786:34;22809:10;22786:34;:::i;:::-;22747:74;:::i;:::-;22738:83;;22645:182;;;:::o;22833:160::-;22896:5;22921:65;22980:4;22974:11;22921:65;:::i;:::-;22912:74;;22833:160;;;:::o;22999:118::-;23074:4;23106;23101:3;23097:14;23089:22;;22999:118;;;:::o;23169:867::-;23319:3;23348:59;23401:5;23348:59;:::i;:::-;23423:112;23528:6;23523:3;23423:112;:::i;:::-;23416:119;;23559:61;23614:5;23559:61;:::i;:::-;23643:7;23674:1;23659:352;23684:6;23681:1;23678:13;23659:352;;;23754:52;23799:6;23754:52;:::i;:::-;23826:87;23909:3;23894:13;23826:87;:::i;:::-;23819:94;;23936:65;23994:6;23936:65;:::i;:::-;23926:75;;23719:292;23706:1;23703;23699:9;23694:14;;23659:352;;;23663:14;24027:3;24020:10;;23324:712;;;23169:867;;;;:::o;24042:361::-;24217:3;24239:138;24373:3;24364:6;24239:138;:::i;:::-;24232:145;;24394:3;24387:10;;24042:361;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1699000","executionCost":"infinite","totalCost":"infinite"},"external":{"checkUpkeep(bytes)":"infinite","enterBlack()":"infinite","enterGreen()":"infinite","enterRed()":"infinite","getBlackPlayer(uint256)":"5033","getChanceArray()":"infinite","getEntraceFee()":"infinite","getGreenPlayer(uint256)":"5057","getInterval()":"448","getLatestTimeStamp()":"2482","getNumWords()":"454","getNumberOfPlayersOfBlack()":"2491","getNumberOfPlayersOfGreen()":"2467","getNumberOfPlayersOfRed()":"2468","getRecentWinners()":"infinite","getRedPlayer(uint256)":"4990","getRequestConfirmations()":"410","getWinningBet(uint256)":"infinite","getgasLane()":"infinite","getroulletestate()":"2678","performUpkeep(bytes)":"infinite","rawFulfillRandomWords(uint256,uint256[])":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","enterBlack()":"2bacb08b","enterGreen()":"5541e758","enterRed()":"06170dea","getBlackPlayer(uint256)":"ca5953b2","getChanceArray()":"5dacf5f4","getEntraceFee()":"ce147cf3","getGreenPlayer(uint256)":"247abaca","getInterval()":"91ad27b4","getLatestTimeStamp()":"320229eb","getNumWords()":"53a2c19a","getNumberOfPlayersOfBlack()":"06b188b6","getNumberOfPlayersOfGreen()":"c235615a","getNumberOfPlayersOfRed()":"2fd31484","getRecentWinners()":"f077b974","getRedPlayer(uint256)":"5a319963","getRequestConfirmations()":"5f1b0fd8","getWinningBet(uint256)":"50f1126b","getgasLane()":"c5e1ae0e","getroulletestate()":"daebbd55","performUpkeep(bytes)":"4585e33b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entranceFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"VRFCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RangeOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Roullete__NotEnoughEth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Roullete_closed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Roullete_transferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Bplayers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Rplayers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Gplayers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roulleteState\",\"type\":\"uint256\"}],\"name\":\"Roullete_upKeepNotNeeded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"RoulleteEnter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"requestedRoulleteResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address payable[]\",\"name\":\"winner\",\"type\":\"address[]\"}],\"name\":\"winnerpicked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterBlack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterGreen\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterRed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getBlackPlayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChanceArray\",\"outputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"\",\"type\":\"uint256[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntraceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getGreenPlayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfPlayersOfBlack\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfPlayersOfGreen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfPlayersOfRed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecentWinners\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRedPlayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chance\",\"type\":\"uint256\"}],\"name\":\"getWinningBet\",\"outputs\":[{\"internalType\":\"enum Roullete.Bets\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getgasLane\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getroulletestate\",\"outputs\":[{\"internalType\":\"enum Roullete.RoulleteState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"alex kang  this is the function chainlink keeper calls, they look for the upkeepneeded  the following should be true in order to return true 1. TIME INTERVAL SHOULD BE PASSED 2. lottery should have at least 1 player and some eth  3.subscription funded with LINK 4. LOTTERY should be in an \\\"open\\\" state --> when we are waiting for the number to get back we are in a closed state \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Roullete.sol\":\"Roullete\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/KeeperBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract KeeperBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5dc972fdf3a524312e68ef6d2e58bcdaf965d08d9415aefa289207350c2bc85a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./KeeperBase.sol\\\";\\nimport \\\"./interfaces/KeeperCompatibleInterface.sol\\\";\\n\\nabstract contract KeeperCompatible is KeeperBase, KeeperCompatibleInterface {}\\n\",\"keccak256\":\"0xfdb84fea1ee213662ae66b95d4f620be73b7af5ede58be3d330b222b9b566d95\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n}\\n\",\"keccak256\":\"0xcb29ee50ee2b05441e4deebf8b4756a0feec4f5497e36b6a1ca320f7ce561802\",\"license\":\"MIT\"},\"contracts/Roullete.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\n//we use chainlink oracle for randomness, automated exectution(chainlink keeper)\\n//before you can import\\n//yarn add --dev @chainlink/contracts\\nerror RangeOutOfBounds();\\nerror Roullete__NotEnoughEth();\\nerror Roullete_transferFailed();\\nerror Roullete_closed();\\nerror Roullete_upKeepNotNeeded(\\n    uint256 currentBalance,\\n    uint256 Bplayers,\\n    uint256 Rplayers,\\n    uint256 Gplayers,\\n    uint256 roulleteState\\n);\\n\\n//we need to make it\\n//this implements chianlink v2 and chainlink keepers\\ncontract Roullete is VRFConsumerBaseV2, KeeperCompatibleInterface {\\n    enum RoulleteState {\\n        OPEN, //0\\n        CALCULATING //1\\n    }\\n    enum Bets {\\n        RED,\\n        BLACK,\\n        GREEN\\n    }\\n    uint256 private immutable i_entraceFee; //immutable --> we only set it once in the constructor\\n    address payable[] private s_RedPlayers; //payable since we want to pay them if they win\\n    address payable[] private s_GreenPlayers; //payable since we want to pay them if they win\\n    address payable[] private s_BlackPlayers; //payable since we want to pay them if they win\\n    VRFCoordinatorV2Interface private immutable i_COORDINATOR;\\n    //events\\n    bytes32 private immutable i_gasLane;\\n    uint64 private immutable i_subscriptionId;\\n    uint16 private constant requestConfirmations = 3;\\n    uint32 private immutable i_callbackgaslimit;\\n    uint32 private constant numWords = 1;\\n    uint256 private s_lastTimeStamp;\\n    uint256 internal constant MAX_CHANCE_VALUE = 100; // max chance is 100 percent\\n    uint256 private constant c_interval = 30;\\n    event requestedRoulleteResult(uint256 indexed requestId);\\n    event RoulleteEnter(address indexed player);\\n    event winnerpicked(address payable[] indexed winner);\\n\\n    address payable[] private s_recentWinners;\\n    RoulleteState private s_roulleteState;\\n\\n    //VRFCoordinatorV2 is where we generate the random number (the address where we are going to generate the number !)\\n    constructor(\\n        uint256 entranceFee,\\n        address VRFCoordinatorV2, //contract address --> probably need a mock for this ....\\n        bytes32 gasLane,\\n        uint64 subscriptionId,\\n        uint32 callbackGasLimit\\n    ) VRFConsumerBaseV2(VRFCoordinatorV2) {\\n        //since we only set it once, we can make it immutable\\n        i_entraceFee = entranceFee;\\n        i_COORDINATOR = VRFCoordinatorV2Interface(VRFCoordinatorV2);\\n        i_gasLane = gasLane;\\n        i_subscriptionId = subscriptionId;\\n        i_callbackgaslimit = callbackGasLimit;\\n        s_roulleteState = RoulleteState.OPEN;\\n        s_lastTimeStamp = block.timestamp;\\n    }\\n\\n    function enterRed() public payable {\\n        if (msg.value < i_entraceFee) {\\n            revert Roullete__NotEnoughEth();\\n        }\\n\\n        if (s_roulleteState != RoulleteState.OPEN) {\\n            revert Roullete_closed();\\n        }\\n        s_RedPlayers.push(payable(msg.sender)); //make ssure each address is payabe\\n        emit RoulleteEnter(msg.sender);\\n    }\\n\\n    function enterBlack() public payable {\\n        if (msg.value < i_entraceFee) {\\n            revert Roullete__NotEnoughEth();\\n        }\\n\\n        if (s_roulleteState != RoulleteState.OPEN) {\\n            revert Roullete_closed();\\n        }\\n        s_BlackPlayers.push(payable(msg.sender)); //make ssure each address is payabe\\n        emit RoulleteEnter(msg.sender);\\n    }\\n\\n    function enterGreen() public payable {\\n        if (msg.value < i_entraceFee) {\\n            revert Roullete__NotEnoughEth();\\n        }\\n\\n        if (s_roulleteState != RoulleteState.OPEN) {\\n            revert Roullete_closed();\\n        }\\n        s_GreenPlayers.push(payable(msg.sender)); //make ssure each address is payabe\\n        emit RoulleteEnter(msg.sender);\\n    }\\n\\n    /**\\n    *@dev alex kang \\n    this is the function chainlink keeper calls, they look for the upkeepneeded \\n    the following should be true in order to return true\\n        1. TIME INTERVAL SHOULD BE PASSED\\n        2. lottery should have at least 1 player and some eth \\n        3.subscription funded with LINK\\n        4. LOTTERY should be in an \\\"open\\\" state --> when we are waiting for the number to get back\\n        we are in a closed state \\n    \\n     */\\n    function checkUpkeep(\\n        bytes memory /* checkData */\\n    )\\n        public\\n        view\\n        override\\n        returns (\\n            bool upkeepNeeded,\\n            bytes memory /* performData */ //we use perform data when we want to do intensive calculations off chain to reduce gas fees and pass into\\n        )\\n    //performUpkeep when needed\\n\\n    {\\n        bool isOpen = s_roulleteState == RoulleteState.OPEN;\\n        // block.timeStamp gives the current time, in order to get the time passed\\n        //we could do something like block.timeStamp - prevTimeStamp(we neeod a variable for this )\\n        bool timepassed = ((block.timestamp - s_lastTimeStamp)) > c_interval;\\n        bool hasplayers = (s_BlackPlayers.length > 0 ||\\n            s_RedPlayers.length > 0 ||\\n            s_GreenPlayers.length > 0);\\n        bool hasBalance = address(this).balance > 0;\\n        upkeepNeeded = isOpen && timepassed && hasplayers && hasBalance;\\n    }\\n\\n    //we want chainlink keeper to call this so we do not have call it ourselvrsd\\n    //before we had it as requestRandom, but in keepers we had to have a\\n    //performUpkeep, u might as well switch the name to perform upkeep\\n    //chainlink keepers will do intensive work off chain to see if they can call the perform up keep function, if it can, it calls this function on chain\\n\\n    function performUpkeep(\\n        bytes calldata /* performData */\\n    ) external override {\\n        //request random number\\n        //once we get it --> do smt with it\\n        // 2 trasaction process --> fair\\n        //before we call perform up keep we need to check if checkupkeep is true\\n        (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\"); //since we do not use calldata, and since we only want the bool, we just pull that one out\\n        if (!upkeepNeeded) {\\n            //the reason why we check again is the suggestion to always revalidate checkupkeep conditions when being called to prevent malicious attakcs\\n            revert Roullete_upKeepNotNeeded(\\n                address(this).balance,\\n                s_BlackPlayers.length,\\n                s_RedPlayers.length,\\n                s_GreenPlayers.length,\\n                uint256(s_roulleteState)\\n            );\\n        }\\n\\n        s_roulleteState = RoulleteState.CALCULATING;\\n        uint256 requestid = i_COORDINATOR.requestRandomWords( //calling it on the coordinator\\n            i_gasLane, //gaslane\\n            i_subscriptionId,\\n            requestConfirmations,\\n            i_callbackgaslimit,\\n            numWords\\n        );\\n\\n        emit requestedRoulleteResult(requestid); //save request id to logs\\n    }\\n\\n    //in chainlink contracts src v0.8 --> fullfillRandomWords is virtual meaning we can ovvereide it\\n    function fulfillRandomWords(\\n        uint256, /*requestId*/\\n        uint256[] memory randomWords\\n    ) internal override {\\n        //since we only requesting one randomness, randomwords will come back as size 1\\n        //we can use modular operator\\n        //if s_players is of size 10\\n        //and we have random number == 202\\n        // we can 202 % 10   == 2 --> 2th winner\\n        uint256 chance = randomWords[0] % MAX_CHANCE_VALUE;\\n        Bets winningBet = getWinningBet(chance);\\n        if (winningBet == Bets.RED) {\\n            s_recentWinners = s_RedPlayers;\\n        } else if (winningBet == Bets.BLACK) {\\n            s_recentWinners = s_BlackPlayers;\\n        } else {\\n            s_recentWinners = s_GreenPlayers;\\n        }\\n        s_lastTimeStamp = block.timestamp;\\n        s_RedPlayers = new address payable[](0);\\n        s_BlackPlayers = new address payable[](0);\\n        s_GreenPlayers = new address payable[](0);\\n\\n        //a for loop\\n        for (uint256 i = 0; i < s_recentWinners.length; i++) {\\n            //make it constatnt winning for now\\n            (bool success, ) = s_recentWinners[i].call{value: 0.1 ether}(\\\"\\\");\\n            if (!success) {\\n                revert Roullete_transferFailed();\\n            }\\n        }\\n        emit winnerpicked(s_recentWinners);\\n        s_roulleteState = RoulleteState.OPEN;\\n    }\\n\\n    function getWinningBet(uint256 chance) public pure returns (Bets) {\\n        uint256 sumsf = 0;\\n        uint256[3] memory chanceArray = getChanceArray();\\n\\n        for (uint256 i = 0; i < chanceArray.length; i++) {\\n            if (chance >= sumsf && chance < sumsf + chanceArray[i]) {\\n                return Bets(i);\\n            } else {\\n                sumsf += chanceArray[i];\\n            }\\n        }\\n\\n        revert RangeOutOfBounds();\\n    }\\n\\n    function getChanceArray() public pure returns (uint256[3] memory) {\\n        return [49, 49, MAX_CHANCE_VALUE];\\n    }\\n\\n    /*\\n        notes about chainlink VRF v2 \\n\\n        getting a random number --> you need a subcription \\n\\n\\n    */\\n    function getEntraceFee() public view returns (uint256) {\\n        return i_entraceFee;\\n    }\\n\\n    function getBlackPlayer(uint256 index) public view returns (address) {\\n        return s_BlackPlayers[index];\\n    }\\n\\n    function getRedPlayer(uint256 index) public view returns (address) {\\n        return s_GreenPlayers[index];\\n    }\\n\\n    function getGreenPlayer(uint256 index) public view returns (address) {\\n        return s_RedPlayers[index];\\n    }\\n\\n    function getRecentWinners() public view returns (address payable[] memory) {\\n        return s_recentWinners;\\n    }\\n\\n    function getroulletestate() public view returns (RoulleteState) {\\n        return s_roulleteState;\\n    }\\n\\n    //the reason why it is pure is because numwords is a constant\\n    function getNumWords() public pure returns (uint256) {\\n        return numWords;\\n    }\\n\\n    function getNumberOfPlayersOfBlack() public view returns (uint256) {\\n        return s_BlackPlayers.length;\\n    }\\n\\n    function getNumberOfPlayersOfRed() public view returns (uint256) {\\n        return s_RedPlayers.length;\\n    }\\n\\n    function getNumberOfPlayersOfGreen() public view returns (uint256) {\\n        return s_GreenPlayers.length;\\n    }\\n\\n    function getLatestTimeStamp() public view returns (uint256) {\\n        return s_lastTimeStamp;\\n    }\\n\\n    function getRequestConfirmations() public pure returns (uint256) {\\n        return requestConfirmations;\\n    }\\n\\n    function getgasLane() public view returns (bytes32) {\\n        return i_gasLane;\\n    }\\n\\n    function getInterval() public pure returns (uint256) {\\n        return c_interval;\\n    }\\n}\\n\",\"keccak256\":\"0xd1bdd199bfbacb0aeb8547b71166997176166efa5e088f751b76b2be71bd37ab\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":245,"contract":"contracts/Roullete.sol:Roullete","label":"s_RedPlayers","offset":0,"slot":"0","type":"t_array(t_address_payable)dyn_storage"},{"astId":248,"contract":"contracts/Roullete.sol:Roullete","label":"s_GreenPlayers","offset":0,"slot":"1","type":"t_array(t_address_payable)dyn_storage"},{"astId":251,"contract":"contracts/Roullete.sol:Roullete","label":"s_BlackPlayers","offset":0,"slot":"2","type":"t_array(t_address_payable)dyn_storage"},{"astId":268,"contract":"contracts/Roullete.sol:Roullete","label":"s_lastTimeStamp","offset":0,"slot":"3","type":"t_uint256"},{"astId":290,"contract":"contracts/Roullete.sol:Roullete","label":"s_recentWinners","offset":0,"slot":"4","type":"t_array(t_address_payable)dyn_storage"},{"astId":293,"contract":"contracts/Roullete.sol:Roullete","label":"s_roulleteState","offset":0,"slot":"5","type":"t_enum(RoulleteState)236"}],"types":{"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address_payable)dyn_storage":{"base":"t_address_payable","encoding":"dynamic_array","label":"address payable[]","numberOfBytes":"32"},"t_enum(RoulleteState)236":{"encoding":"inplace","label":"enum Roullete.RoulleteState","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}